{"version":3,"sources":["App/components/Homologation/Index.js","Screen/Pastas/Homologacao.js","App/components/Card/Index.js","api.js"],"names":["TableHomologation","state","pasta_homologar","loading","currentPage","total","limite","getPastaUnauthorized","a","setState","api","get","res","data","retorno","pastas","forceUpdate","console","log","msg","error","avaliar","id_pasta","avaliacao","put","map","p","this","Row","Col","className","title","bodyClass","isOption","fullscreen","reload","pagination","itemsCountPerPage","totalItemsCount","onCardReload","onPageChange","pg","Table","responsive","hover","style","marginBottom","pasta","id","key","textAlign","href","nome","Badge","variant","categoria","discussao","moment","data_criacao","format","onClick","background","length","colspan","Component","SamplePage","require","MainCard","props","fullCard","collapseCard","loadCard","cardRemove","activePage","componentWillReceiveProps","cardReloadHandler","setInterval","cardRemoveHandler","pageNumber","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","right","display","float","padding","position","alignRight","Toggle","Menu","as","Item","prevState","DEMO","BLANK_LINK","expand","excludable","Header","Title","top","left","width","windowWidth","height","windowHeight","join","in","Body","children","Footer","paddingLeft","paddingRight","paddingTop","justifyContent","pageRangeDisplayed","onChange","handlePageChange","windowSize","token","store","getState","auth","axios","create","headers","baseURL","document","location","hostname"],"mappings":"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","file":"static/js/26.a3a4f60d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Row, Col, Table, Badge, Tooltip} from 'react-bootstrap';\r\nimport Loader from 'react-loader-spinner'\r\nimport Card from \"../Card/Index\";\r\n\r\nimport DEMO from \"../../../store/constant\";\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nimport api from '../../../api'\r\nimport moment from 'moment';\r\n\r\nimport avatar2 from '../../../assets/images/user/avatar-2.jpg';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./style.scss\"\r\n\r\nclass TableHomologation extends Component {\r\n    state = {\r\n        pasta_homologar: [],\r\n        loading: true,\r\n\r\n        currentPage: 1,\r\n        total: 1,\r\n        limite: 10,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getPastaUnauthorized()\r\n    }\r\n\r\n    getPastaUnauthorized = async (currentPage = 1) => {\r\n        this.setState({loading: true})\r\n        try {\r\n            const res = await api().get(`pastas/homologar?page=${currentPage}&limite=${this.state.limite}`)\r\n            if(res.data.retorno){\r\n                this.setState({ pasta_homologar: res.data.pastas, total: res.data.total, loading: false }, this.forceUpdate())\r\n                console.log(res.data.pastas)\r\n            }else{\r\n                console.log(res.data.msg)\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    avaliar = async (id_pasta, avaliacao) => {\r\n        console.log(this.state.pasta_homologar)\r\n        try {\r\n            const res = await api().put(`/pastas/${id_pasta}/avaliar`, {\r\n                avaliacao\r\n            })\r\n\r\n            if(res.data.retorno){\r\n                let pastas = this.state.pasta_homologar\r\n                pastas = pastas.map(p => {\r\n                    if (p.id_pasta === id_pasta) return {...p, avaliacao}\r\n                    return p\r\n                })\r\n                this.setState({pasta_homologar: pastas})\r\n            }else{\r\n                console.log(res.data.msg)\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { total, limite, loading } = this.state\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card\r\n                        className='card'\r\n                        title='Pastas para Homologação'\r\n                        bodyClass={'px-0 py-0'}\r\n                        isOption\r\n                        fullscreen\r\n                        reload\r\n                        pagination={{ itemsCountPerPage: limite, totalItemsCount: total }}\r\n                        loading={loading}\r\n                        onCardReload={this.getPastaUnauthorized}\r\n                        onPageChange={(pg) => this.getPastaUnauthorized(pg)}>\r\n                            <div>\r\n                                <Table responsive hover style={{marginBottom: 0}}>\r\n                                    <tbody>\r\n                                        {\r\n                                        this.state.pasta_homologar.map((pasta, id) =>\r\n                                            <tr className=\"unread\" key={pasta.id_pasta}>\r\n                                                <td style={{textAlign: 'left'}}>\r\n                                                    <h6 className=\"mb-1\">\r\n                                                        <a href={`/admin/pasta/${pasta.id_pasta}`} className=\"f-12\">{pasta.nome}  <Badge variant=\"secondary\">{pasta.categoria}</Badge></a>\r\n                                                    </h6>\r\n                                                    <p className=\"m-0\">{pasta.discussao}</p>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <h6 className=\"text-muted\">\r\n                                                        <i className=\"fa fa-circle text-c-yellow f-10 m-r-15\"/>\r\n                                                        {moment(pasta.data_criacao).format('DD/MM/Y')}\r\n                                                    </h6>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <button onClick={() => this.avaliar(pasta.id_pasta, +1)} style={{...pasta.avaliacao === -1 || pasta.avaliacao === null ? {background: 'white'} : {}}} className={`btn-peruibe btn btn-secondary btn-success text-black `}>Aprovar</button>\r\n                                                    <button onClick={() => this.avaliar(pasta.id_pasta, -1)} style={{...pasta.avaliacao === 1 || pasta.avaliacao === null ? {background: 'white'} : {}}} className={`btn-peruibe btn btn-secondary btn-danger text-black `}>Reprovar</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                        }\r\n                                        {!this.state.pasta_homologar.length &&\r\n                                            <tr className=\"unread\">\r\n                                                <td colspan=\"4\">\r\n                                                    <span>Tente novamente mais tarde ou tente recarregar a página</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableHomologation;","import React, {Component} from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\nimport TableHomologation from '../../App/components/Homologation/Index';\r\n\r\nclass SamplePage extends Component {\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <TableHomologation />\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SamplePage;","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport DEMO from \"../../../store/constant\";\r\n\r\nimport Pagination from \"react-js-pagination\";\r\nrequire(\"./style.scss\");\r\n\r\n/**\r\n * Props\r\n * @param isOption {bollean} - Monstrar menu de opções\r\n *\r\n * @param loading {bollean} - Monstrar carregamento\r\n * @param onCardReload {function} - Chamada quando o botão recarregar é clicado\r\n *\r\n * @param pagination {Object} - Paginação\r\n * @param pagination.itemsCountPerPage {number} - Itens por pagina\r\n * @param pagination.totalItemsCount {number} - Total de itens\r\n * @param onPageChange {function} - Chamado quando a pagina for alterada\r\n *\r\n */\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: this.props.loading,\r\n        cardRemove: false,\r\n        activePage: 1\r\n    };\r\n\r\n    componentWillReceiveProps = (props) => {\r\n        if(this.state.loadCard !== props.loading) this.setState({loadCard: props.loading})\r\n    }\r\n\r\n    cardReloadHandler = () => {\r\n        if(this.props.onCardReload) this.props.onCardReload();\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    handlePageChange(pageNumber) {\r\n        if(pageNumber !== this.state.activePage){\r\n            if(this.props.onPageChange) this.props.onPageChange(pageNumber);\r\n            this.setState({activePage: pageNumber});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [this.props.className];\r\n\r\n        if(this.state.isOption){\r\n            this.props.cardHeaderRight\r\n             ? cardHeaderRight =\r\n                <div style={{right: 10, display: 'inline-block', float: 'right', padding: 0, position: 'absolute'}}>\r\n                    {this.props.cardHeaderRight}\r\n                </div>\r\n            :\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            {this.props.fullscreen &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restaurar' : 'Maximizar'} </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.expand &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expandir' : 'Diminuir'} </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.reload &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Recarregar </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.excludable &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Excluir </a>\r\n                            </Dropdown.Item>}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body className={this.props.bodyClass}>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                        {this.props.pagination &&\r\n                        <Card.Footer style={{padding: 0, paddingLeft: '1em', paddingRight: '1em', paddingTop: '1em', display: 'flex', justifyContent: 'flex-end'}}>\r\n                        <Pagination\r\n                            activePage={this.state.activePage}\r\n                            itemsCountPerPage={this.props.pagination.itemsCountPerPage}\r\n                            totalItemsCount={this.props.pagination.totalItemsCount}\r\n                            pageRangeDisplayed={5}\r\n                            onChange={(pageNumber) => this.handlePageChange(pageNumber)}\r\n                        />\r\n                        </Card.Footer>}\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import axios from 'axios'\r\nimport { store } from './store/storage'\r\n\r\nconst api = () => {\r\n    let token = store.getState().auth.token\r\n\r\n    return axios.create({\r\n        headers: { 'Authorization': `Bearer ${token}` },\r\n        baseURL: document.location.hostname === 'localhost'\r\n            ? 'http://localhost:21086/'\r\n            : 'http://peruibemelhor.nodejs7605.kinghost.net:21086/',\r\n    })\r\n};\r\n\r\nexport default api;"],"sourceRoot":""}