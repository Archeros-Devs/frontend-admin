{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/utils/divWithClassName.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","Demo/Maps/GoogleMap/index.js"],"names":["createContext","forwardRef","p","ref","createElement","className","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","props","prefix","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","children","cardContext","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","polygon","lat","lng","GoogleMap","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","marker","setState","onInfoWindowClose","onMapClicked","this","renderAutoComplete","prevProps","map","e","preventDefault","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","xl","style","height","width","centerAroundCurrentLocation","zoom","name","onClick","onClose","visible","onSubmit","Control","type","placeholder","Append","center","fillColor","fillOpacity","paths","strokeColor","strokeOpacity","strokeWeight","path","React","GoogleApiWrapper","apiKey"],"mappings":"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","file":"static/js/36.a84eb13e.chunk.js","sourcesContent":["import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport divWithClassName from './utils/divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","import React from 'react';\r\nimport {Row, Col, Card, Form, InputGroup, Button} from 'react-bootstrap';\r\nimport {Map, Marker, GoogleApiWrapper, InfoWindow, Polyline, Polygon}  from 'google-maps-react';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nconst polygon = [\r\n    { lat: 21.2105052, lng: 72.8653491 },\r\n    { lat: 21.2206445, lng: 72.8704506 },\r\n    { lat: 21.2183091, lng: 72.8631228 }\r\n];\r\n\r\nclass GoogleMap extends React.Component {\r\n\r\n    state = {\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        showingInfoWindow: false,\r\n        position: null\r\n    };\r\n\r\n    onMarkerClick = (props, marker) =>\r\n        this.setState({\r\n            activeMarker: marker,\r\n            selectedPlace: props,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onInfoWindowClose = () =>\r\n        this.setState({\r\n            activeMarker: null,\r\n            showingInfoWindow: false\r\n        });\r\n\r\n    onMapClicked = () => {\r\n        if (this.state.showingInfoWindow)\r\n            this.setState({\r\n                activeMarker: null,\r\n                showingInfoWindow: false\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.renderAutoComplete();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps.map) this.renderAutoComplete();\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    renderAutoComplete() {\r\n        const { google, map } = this.props;\r\n\r\n        if (!google || !map) return;\r\n\r\n        const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\r\n        autocomplete.bindTo('bounds', map);\r\n\r\n        autocomplete.addListener('place_changed', () => {\r\n            const place = autocomplete.getPlace();\r\n\r\n            if (!place.geometry) return;\r\n\r\n            if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\r\n            else {\r\n                map.setCenter(place.geometry.location);\r\n                map.setZoom(17);\r\n            }\r\n\r\n            this.setState({ position: place.geometry.location });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { position } = this.state;\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Basic</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        className=\"map\"\r\n                                        google={this.props.google}\r\n                                        zoom={14}\r\n                                    />\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Simple Markers</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={13}>\r\n                                        <Marker\r\n                                            name=\"Codedthemes\"\r\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\r\n                                        />\r\n\r\n                                        <Marker\r\n                                            name=\"Roman Point\"\r\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\r\n                                        />\r\n\r\n                                        <Marker />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Click-Able Markers</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        className=\"map\"\r\n                                        google={this.props.google}\r\n                                        onClick={this.onMapClicked}\r\n                                        zoom={12}>\r\n\r\n                                        <Marker\r\n                                            name=\"Codedthemes\"\r\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\r\n                                            onClick={this.onMarkerClick}\r\n                                        />\r\n\r\n                                        <Marker\r\n                                            name=\"Roman Point\"\r\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\r\n                                            onClick={this.onMarkerClick}\r\n                                        />\r\n\r\n                                        <Marker name=\"Current Location\" onClick={this.onMarkerClick} />\r\n\r\n                                        <InfoWindow\r\n                                            marker={this.state.activeMarker}\r\n                                            onClose={this.onInfoWindowClose}\r\n                                            visible={this.state.showingInfoWindow}>\r\n                                            <div>\r\n                                                <h3>{this.state.selectedPlace.name}</h3>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Geo-Coding</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Form onSubmit={this.onSubmit}>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <Form.Control ref={ref => (this.autocomplete = ref)} type='text' placeholder='Search your favorite place' />\r\n                                        <InputGroup.Append>\r\n                                            <Button type=\"submit\">Search</Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n                                </Form>\r\n                                <div style={{height: '240px', width: '100%'}}>\r\n                                    <Map\r\n                                        className='map'\r\n                                        {...this.props}\r\n                                        center={position}\r\n                                        centerAroundCurrentLocation >\r\n                                        <Marker position={position} />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Polygon</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={14}>\r\n                                        <Polygon\r\n                                            fillColor=\"#dc3545\"\r\n                                            fillOpacity={0.35}\r\n                                            paths={[polygon]}\r\n                                            strokeColor=\"#dc3545\"\r\n                                            strokeOpacity={0.8}\r\n                                            strokeWeight={2}\r\n                                        />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Polyline</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={14}>\r\n                                        <Polyline\r\n                                            fillColor=\"#dc3545\"\r\n                                            fillOpacity={0.35}\r\n                                            path={polygon}\r\n                                            strokeColor=\"#dc3545\"\r\n                                            strokeOpacity={0.8}\r\n                                            strokeWeight={5}\r\n                                        />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDbnh6IAY2xsdYRh6o3lU6vvLheCKsAUpk'\r\n})(GoogleMap);"],"sourceRoot":""}