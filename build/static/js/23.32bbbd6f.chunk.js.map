{"version":3,"sources":["api.js","App/components/ModalImage/Index.js","Screen/Pastas/Pasta.js","App/components/Card/Index.js"],"names":["api","axios","create","baseURL","document","location","hostname","defaults","headers","common","store","getState","auth","token","LightboxExample","state","photoIndex","isOpen","images","props","this","alt","className","map","image","id","src","key","onClick","setState","reactModalStyle","overlay","zIndex","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","Component","SamplePage","id_pasta","match","params","pasta","imgs","loading","getFolder","get","then","res","data","retorno","console","info","msg","catch","error","title","nome","Badge","variant","categoria","bodyClass","isOption","fullscreen","reload","onCardReload","style","display","justifyContent","moment","data_criacao","format","descricao","discussao","user_img","profile_image","displayIndex","user_nome","email","escolaridade","marginTop","require","MainCard","fullCard","collapseCard","loadCard","cardRemove","activePage","componentWillReceiveProps","cardReloadHandler","setInterval","cardRemoveHandler","pageNumber","onPageChange","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","alignRight","Toggle","Menu","as","Item","prevState","href","DEMO","BLANK_LINK","expand","excludable","Header","Title","position","top","left","right","width","windowWidth","height","windowHeight","join","in","Body","children","pagination","Footer","padding","paddingLeft","paddingRight","paddingTop","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","handlePageChange","windowSize"],"mappings":"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","file":"static/js/23.32bbbd6f.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { store } from './store/storage'\r\n\r\nconst api = axios.create({\r\n    baseURL: document.location.hostname === 'localhost'\r\n        ? 'http://localhost:21086/'\r\n        : 'http://peruibemelhor.nodejs7605.kinghost.net:21086/',\r\n});\r\n\r\napi.defaults.headers.common = {'Authorization': `Bearer ${store.getState().auth.token}`}\r\n\r\nexport default api;","import React, { Component } from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport {Image} from 'react-bootstrap'\r\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\r\n \r\nexport default class LightboxExample extends Component {\r\n  state = {\r\n    photoIndex: 0,\r\n    isOpen: false,\r\n    images: this.props.images,\r\n  };\r\n \r\n  render() {\r\n    const { photoIndex, isOpen } = this.state;\r\n    const { images, alt } = this.props\r\n \r\n    return (\r\n      <div>\r\n        <div className='img-container'>\r\n        {images &&\r\n            images.map((image, id) => {\r\n                return  <img className='img' src={image} alt={`${alt}#${id}`} key={id} onClick={() => this.setState({ isOpen: true, photoIndex: id })}/>\r\n            })\r\n        }\r\n        </div>\r\n        {isOpen && (\r\n          <Lightbox\r\n            reactModalStyle={{overlay: {zIndex: 9999}}}\r\n            mainSrc={images[photoIndex]}\r\n            nextSrc={images.length > 1 && images[(photoIndex + 1) % images.length]}\r\n            prevSrc={images.length > 1 && images[(photoIndex + images.length - 1) % images.length]}\r\n            onCloseRequest={() => this.setState({ isOpen: false })}\r\n            onMovePrevRequest={() =>\r\n              this.setState({\r\n                photoIndex: (photoIndex + images.length - 1) % images.length,\r\n              })\r\n            }\r\n            onMoveNextRequest={() =>\r\n              this.setState({\r\n                photoIndex: (photoIndex + 1) % images.length,\r\n              })\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {Row, Col, Badge, Spinner} from 'react-bootstrap';\r\nimport Card from '../../App/components/Card/Index'\r\n\r\nimport api from '../../api'\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\nimport ModalImage from \"../../App/components/ModalImage/Index\";\r\n\r\nimport profile_image from '../../assets/images/user/avatar-2.jpg'\r\n\r\nimport './style.scss'\r\nimport moment from 'moment';\r\n\r\nclass SamplePage extends Component {\r\n    state = {\r\n        id_pasta: this.props.match.params.id_pasta,\r\n        pasta: {},\r\n        imgs: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getFolder()\r\n    }\r\n\r\n    getFolder = () => {\r\n        /**\r\n            categoria: \"Saúde\"\r\n            data_criacao: \"2019-09-24T03:00:00.000Z\"\r\n            descricao: \"Ruínas de uma igreja do século 16 com placas de informações que detalham a importância histórica do local.\"\r\n            discussao: \"Mal iluminado\"\r\n            email: \"archeros.devs@gmail.com\"\r\n            escolaridade: \"Ensino Superior (Graduação)\"\r\n            homologada: 0\r\n            id_categoria: 1\r\n            id_pasta: 1\r\n            id_usuario: 2\r\n            localizacao: \"Estância Balneária Convento Velho, Peruíbe - SP, 11750-000\"\r\n            nome: \"Ruinas do Abarebebe\"\r\n            user_img: \"https://foxhugh.files.wordpress.com/2012/06/6-jeremy-renner-as-clint-barton-hawkeye.png\"\r\n            user_nome: \"Archeros Devs\"\r\n        **/\r\n        let id_pasta = this.state.id_pasta\r\n        api.get(`/pastas/${id_pasta}`)\r\n        .then(res => {\r\n            if(res.data.retorno){\r\n                console.info(res.data)\r\n                this.setState({pasta: res.data.pasta, imgs: res.data.imgs})\r\n            }else{\r\n                console.info(res.data.msg)\r\n            }\r\n            this.setState({loading: false})\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { pasta, loading } = this.state;\r\n        return (\r\n            <Aux>\r\n                <Card\r\n                    className=''\r\n                    title={<h4>{pasta.nome} <Badge variant=\"secondary\">{pasta.categoria}</Badge></h4>}\r\n                    bodyClass={'px-0 py-0'}\r\n                    isOption\r\n                    fullscreen\r\n                    reload\r\n                    loading={this.state.loading}\r\n                    onCardReload={() => {}}>\r\n                    <div className='my-container'>\r\n                        {!!pasta.nome &&\r\n                        <div className='body'>\r\n                            <div className='my-card col-left'>\r\n                                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                <h5>Descrição</h5>\r\n                                <label>{moment(pasta.data_criacao).format('DD/MM/YYYY')}</label>\r\n                                </div>\r\n                                <label className=\"text-muted mb-4\">{pasta.descricao}</label>\r\n                                <h5>Discussão</h5>\r\n                                <label className=\"text-muted mb-4\">{pasta.discussao}</label>\r\n                            </div>\r\n                            <div className='col-right'>\r\n                                <div className='my-card card-user'>\r\n                                    <ModalImage\r\n                                        images={[pasta.user_img || profile_image]}\r\n                                        displayIndex={0}\r\n                                        alt='Imagem do Usuário'\r\n                                    />\r\n                                    <div className='info'>\r\n                                        <label>{pasta.user_nome}</label>\r\n                                        <label>{pasta.email}</label>\r\n                                        <label>{pasta.escolaridade}</label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {!!this.state.imgs.length &&\r\n                                <div className='my-card card-imgs' style={{marginTop: '1em'}}>\r\n                                    <ModalImage\r\n                                        images={this.state.imgs}\r\n                                        displayIndex={0}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                </Card>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SamplePage;","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport DEMO from \"../../../store/constant\";\r\n\r\nimport Pagination from \"react-js-pagination\";\r\nrequire(\"./style.scss\");\r\n\r\n/**\r\n * Props\r\n * @param isOption {bollean} - Monstrar menu de opções\r\n *\r\n * @param loading {bollean} - Monstrar carregamento\r\n * @param onCardReload {function} - Chamada quando o botão recarregar é clicado\r\n *\r\n * @param pagination {Object} - Paginação\r\n * @param pagination.itemsCountPerPage {number} - Itens por pagina\r\n * @param pagination.totalItemsCount {number} - Total de itens\r\n * @param onPageChange {function} - Chamado quando a pagina for alterada\r\n *\r\n */\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: this.props.loading,\r\n        cardRemove: false,\r\n        activePage: 1\r\n    };\r\n\r\n    componentWillReceiveProps = (props) => {\r\n        if(this.state.loadCard !== props.loading) this.setState({loadCard: props.loading})\r\n    }\r\n\r\n    cardReloadHandler = () => {\r\n        if(this.props.onCardReload) this.props.onCardReload();\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    handlePageChange(pageNumber) {\r\n        if(pageNumber !== this.state.activePage){\r\n            if(this.props.onPageChange) this.props.onPageChange(pageNumber);\r\n            this.setState({activePage: pageNumber});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [this.props.className];\r\n\r\n        if(this.state.isOption){\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            {this.props.fullscreen &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restaurar' : 'Maximizar'} </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.expand &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expandir' : 'Diminuir'} </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.reload &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Recarregar </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.excludable &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Excluir </a>\r\n                            </Dropdown.Item>}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body className={this.props.bodyClass}>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                        {this.props.pagination &&\r\n                        <Card.Footer style={{padding: 0, paddingLeft: '1em', paddingRight: '1em', paddingTop: '1em', display: 'flex', justifyContent: 'flex-end'}}>\r\n                        <Pagination\r\n                            activePage={this.state.activePage}\r\n                            itemsCountPerPage={this.props.pagination.itemsCountPerPage}\r\n                            totalItemsCount={this.props.pagination.totalItemsCount}\r\n                            pageRangeDisplayed={5}\r\n                            onChange={(pageNumber) => this.handlePageChange(pageNumber)}\r\n                        />\r\n                        </Card.Footer>}\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n"],"sourceRoot":""}