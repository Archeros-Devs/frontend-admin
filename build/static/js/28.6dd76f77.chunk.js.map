{"version":3,"sources":["api.js","Screen/Pastas/Index.js"],"names":["api","axios","create","baseURL","document","location","hostname","defaults","headers","common","store","getState","auth","token","SamplePage","props","state","pasta_homologar","getPastaUnauthorized","a","get","res","data","retorno","setState","pastas","console","log","msg","error","avaliar","id_pasta","avaliacao","put","map","p","this","Row","Col","Card","className","Header","Title","as","Body","Table","responsive","hover","pasta","key","style","width","src","avatar2","alt","href","DEMO","BLANK_LINK","nome","discussao","moment","data_criacao","format","role","height","aria-valuenow","aria-valuemin","aria-valuemax","onClick","Component"],"mappings":"4SAGMA,EAAMC,IAAMC,OAAO,CACrBC,QAAuC,aAA9BC,SAASC,SAASC,SACrB,0BACA,wDAGVN,EAAIO,SAASC,QAAQC,OAAS,CAAC,cAAgB,UAAhB,OAA2BC,IAAMC,WAAWC,KAAKC,QAEjEb,Q,inBCGTc,E,YACF,WAAYC,GAAO,IAAD,8BAAC,4CAAMA,KAEzBC,MAAQ,CACJC,gBAAiB,IAHH,EAUlBC,qBAVkB,sBAUK,4BAAAC,EAAA,+EAEGnB,EAAIoB,IAAJ,oBAFH,QAETC,EAFS,QAGRC,KAAKC,SACR,EAAKC,SAAS,CAAEP,gBAAiBI,EAAIC,KAAKG,SAC1CC,QAAQC,IAAIN,EAAIC,KAAKG,SAErBC,QAAQC,IAAIN,EAAIC,KAAKM,KAPV,gDAUfF,QAAQG,MAAR,MAVe,yDAVL,EAwBlBC,QAxBkB,uCAwBR,WAAOC,EAAUC,GAAjB,iBAAAb,EAAA,6DACNO,QAAQC,IAAI,EAAKX,MAAMC,iBADjB,kBAGgBjB,EAAIiC,IAAJ,kBAAmBF,EAAnB,YAAuC,CACrDC,cAJF,QAGIX,EAHJ,QAOKC,KAAKC,SAERE,GADIA,EAAS,EAAKT,MAAMC,iBACRiB,KAAI,SAAAC,GAChB,OAAIA,EAAEJ,UAAYA,EAAiB,EAAP,GAAWI,EAAX,CAAcH,cACnCG,KAEX,EAAKX,SAAS,CAACP,gBAAiBQ,KAEhCC,QAAQC,IAAIN,EAAIC,KAAKM,KAfvB,gDAkBFF,QAAQG,MAAR,MAlBE,yDAxBQ,0D,iFAOdO,KAAKlB,yB,+BAuCC,IAAD,OACL,OACI,kBAAC,IAAD,KACI,kBAACmB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,UAAU,gBACZ,kBAACD,EAAA,EAAKE,OAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,CAAYC,GAAG,MAAf,kCAEJ,kBAACJ,EAAA,EAAKK,KAAN,CAAWJ,UAAU,aACjB,kBAACK,EAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,GACnB,+BAEIX,KAAKpB,MAAMC,gBAAgBiB,KAAI,SAAAc,GAAK,OAChC,wBAAIR,UAAU,SAASS,IAAKD,EAAMjB,UAC9B,4BAAI,yBAAKS,UAAU,iBAAiBU,MAAO,CAACC,MAAO,QAASC,IAAKC,IAASC,IAAI,mBAC9E,4BACI,wBAAId,UAAU,QAAO,uBAAGe,KAAMC,IAAKC,WAAYjB,UAAU,QAAQQ,EAAMU,OACvE,uBAAGlB,UAAU,OAAOQ,EAAMW,YAE9B,4BACI,wBAAInB,UAAU,cAAa,uBAAGA,UAAU,2CAA2CoB,IAAOZ,EAAMa,cAAcC,OAAO,aAIxHd,EAAMhB,UAOP,4BACI,yBAAKQ,UAAU,iCAAiCuB,KAAK,cAAcb,MAAO,CAACC,MAAO,MAAOa,OAAQ,OAAQC,gBAAc,KAAKC,gBAAc,IAAIC,gBAAc,SANhK,4BACI,4BAAQC,QAAS,kBAAM,EAAKtC,QAAQkB,EAAMjB,SAAU,IAAKS,UAAU,kCAAnE,WACA,4BAAQ4B,QAAS,kBAAM,EAAKtC,QAAQkB,EAAMjB,UAAW,IAAIS,UAAU,mCAAnE,4B,GA5E3B6B,aAiGVvD","file":"static/js/28.6dd76f77.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { store, persistor } from './store/storage'\r\n\r\nconst api = axios.create({\r\n    baseURL: document.location.hostname == 'localhost' \r\n        ? 'http://localhost:21086/'\r\n        : 'http://peruibemelhor.nodejs7605.kinghost.net:21086/',\r\n});\r\n\r\napi.defaults.headers.common = {'Authorization': `Bearer ${store.getState().auth.token}`}\r\n\r\nexport default api;\r\n","import React, {Component} from 'react';\r\nimport {Row, Col, Table, Card, Tabs, Tab} from 'react-bootstrap';\r\n\r\nimport DEMO from \"../../store/constant\";\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\nimport axios from 'axios';\r\nimport api from '../../api'\r\nimport moment from 'moment';\r\n\r\nimport avatar1 from '../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../assets/images/user/avatar-3.jpg';\r\n\r\nclass SamplePage extends Component {\r\n    constructor(props){super(props)}\r\n\r\n    state = {\r\n        pasta_homologar: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getPastaUnauthorized()\r\n    }\r\n\r\n    getPastaUnauthorized = async () => {\r\n        try {\r\n            const res = await api.get(`pastas/homologar`)\r\n            if(res.data.retorno){\r\n                this.setState({ pasta_homologar: res.data.pastas })\r\n                console.log(res.data.pastas)\r\n            }else{\r\n                console.log(res.data.msg)\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    avaliar = async (id_pasta, avaliacao) => {\r\n        console.log(this.state.pasta_homologar)\r\n        try {\r\n            const res = await api.put(`/pastas/${id_pasta}/avaliar`, {\r\n                avaliacao\r\n            })\r\n\r\n            if(res.data.retorno){\r\n                let pastas = this.state.pasta_homologar\r\n                pastas = pastas.map(p => {\r\n                    if (p.id_pasta == id_pasta) return {...p, avaliacao} \r\n                    return p\r\n                })\r\n                this.setState({pasta_homologar: pastas})\r\n            }else{\r\n                console.log(res.data.msg)\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card className='Recent-Users'>\r\n                            <Card.Header>\r\n                                <Card.Title as='h5'>Pastas para Homologação</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body className='px-0 py-2'>\r\n                                <Table responsive hover>\r\n                                    <tbody>\r\n                                        {\r\n                                        this.state.pasta_homologar.map(pasta => \r\n                                            <tr className=\"unread\" key={pasta.id_pasta}>\r\n                                                <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar2} alt=\"activity-user\"/></td>\r\n                                                <td>\r\n                                                    <h6 className=\"mb-1\"><a href={DEMO.BLANK_LINK} className=\"f-12\">{pasta.nome}</a></h6>\r\n                                                    <p className=\"m-0\">{pasta.discussao}</p>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <h6 className=\"text-muted\"><i className=\"fa fa-circle text-c-yellow f-10 m-r-15\"/>{moment(pasta.data_criacao).format('DD/MM/Y')}</h6>\r\n                                                    \r\n                                                </td>\r\n                                                {\r\n                                                !pasta.avaliacao \r\n                                                ?\r\n                                                <td>\r\n                                                    <button onClick={() => this.avaliar(pasta.id_pasta, +1)} className=\"label theme-bg text-white f-12\">Aprovar</button>\r\n                                                    <button onClick={() => this.avaliar(pasta.id_pasta, -1)} className=\"label theme-bg2 text-white f-12\">Reprovar</button>\r\n                                                </td>\r\n                                                :\r\n                                                <td>\r\n                                                    <div className=\"progress-bar progress-c-theme2\" role=\"progressbar\" style={{width: '45%', height: '6px'}} aria-valuenow=\"45\" aria-valuemin=\"0\" aria-valuemax=\"100\"/>\r\n                                                </td>\r\n                                                }\r\n                                            </tr>\r\n                                        )\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SamplePage;"],"sourceRoot":""}