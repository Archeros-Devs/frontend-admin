{"version":3,"sources":["App/components/ModalImage/Index.js","Screen/Pastas/Pasta.js","App/components/Card/Index.js","api.js"],"names":["LightboxExample","state","photoIndex","isOpen","images","props","this","alt","className","style","cursor","map","image","id","imgStyle","src","key","onClick","setState","roundedCircle","reactModalStyle","overlay","zIndex","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","Component","SamplePage","id_pasta","match","params","pasta","imgs","loading","getFolder","api","get","then","res","data","retorno","console","info","msg","catch","error","avaliar","avaliacao","put","title","nome","variant","categoria","bodyClass","isOption","fullscreen","reload","onCardReload","cardHeaderRight","background","display","justifyContent","descricao","discussao","alignItems","user_img","profile_image","displayIndex","fontSize","fontWeight","user_nome","email","escolaridade","fontStyle","moment","data_criacao","format","marginTop","require","MainCard","fullCard","collapseCard","loadCard","cardRemove","activePage","componentWillReceiveProps","cardReloadHandler","setInterval","cardRemoveHandler","pageNumber","onPageChange","fullScreenStyle","loader","cardHeader","card","cardClass","right","float","padding","position","alignRight","Toggle","Menu","as","Item","prevState","href","DEMO","BLANK_LINK","expand","excludable","Header","Title","top","left","width","windowWidth","height","windowHeight","join","in","Body","children","pagination","Footer","paddingLeft","paddingRight","paddingTop","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","handlePageChange","windowSize","token","store","getState","auth","axios","create","headers","baseURL","document","location","hostname"],"mappings":"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","file":"static/js/24.93f2d6b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport {Image} from 'react-bootstrap'\r\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\r\n \r\nexport default class LightboxExample extends Component {\r\n  state = {\r\n    photoIndex: 0,\r\n    isOpen: false,\r\n    images: this.props.images,\r\n  };\r\n \r\n  render() {\r\n    const { photoIndex, isOpen } = this.state;\r\n    const { images, alt } = this.props\r\n \r\n    return (\r\n      <div>\r\n        <div className='img-container' style={{cursor: 'pointer'}}>\r\n        {images &&\r\n            images.map((image, id) => {\r\n                return <Image\r\n                    className='img'\r\n                    style={this.props.imgStyle}\r\n                    src={image}\r\n                    alt={`${alt}#${id}`}\r\n                    key={id}\r\n                    onClick={() => this.setState({ isOpen: true, photoIndex: id })}\r\n                    roundedCircle={this.props.roundedCircle}\r\n                />\r\n            })\r\n        }\r\n        </div>\r\n        {isOpen && (\r\n          <Lightbox\r\n            reactModalStyle={{overlay: {zIndex: 9999}}}\r\n            mainSrc={images[photoIndex]}\r\n            nextSrc={images.length > 1 && images[(photoIndex + 1) % images.length]}\r\n            prevSrc={images.length > 1 && images[(photoIndex + images.length - 1) % images.length]}\r\n            onCloseRequest={() => this.setState({ isOpen: false })}\r\n            onMovePrevRequest={() =>\r\n              this.setState({\r\n                photoIndex: (photoIndex + images.length - 1) % images.length,\r\n              })\r\n            }\r\n            onMoveNextRequest={() =>\r\n              this.setState({\r\n                photoIndex: (photoIndex + 1) % images.length,\r\n              })\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {Row, Col, Badge, Spinner} from 'react-bootstrap';\r\nimport Card from '../../App/components/Card/Index'\r\n\r\nimport api from '../../api'\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\nimport ModalImage from \"../../App/components/ModalImage/Index\";\r\n\r\nimport profile_image from '../../assets/images/user/avatar-2.jpg'\r\n\r\nimport './style.scss'\r\nimport moment from 'moment';\r\n\r\nclass SamplePage extends Component {\r\n    state = {\r\n        id_pasta: this.props.match.params.id_pasta,\r\n        pasta: {},\r\n        imgs: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getFolder()\r\n    }\r\n\r\n    getFolder = () => {\r\n        /**\r\n            categoria: \"Saúde\"\r\n            data_criacao: \"2019-09-24T03:00:00.000Z\"\r\n            descricao: \"Ruínas de uma igreja do século 16 com placas de informações que detalham a importância histórica do local.\"\r\n            discussao: \"Mal iluminado\"\r\n            email: \"archeros.devs@gmail.com\"\r\n            escolaridade: \"Ensino Superior (Graduação)\"\r\n            homologada: 0\r\n            id_categoria: 1\r\n            id_pasta: 1\r\n            id_usuario: 2\r\n            localizacao: \"Estância Balneária Convento Velho, Peruíbe - SP, 11750-000\"\r\n            nome: \"Ruinas do Abarebebe\"\r\n            user_img: \"https://foxhugh.files.wordpress.com/2012/06/6-jeremy-renner-as-clint-barton-hawkeye.png\"\r\n            user_nome: \"Archeros Devs\"\r\n        **/\r\n        let id_pasta = this.state.id_pasta\r\n        api().get(`/pastas/${id_pasta}`)\r\n        .then(res => {\r\n            if(res.data.retorno){\r\n                console.info(res.data)\r\n                this.setState({pasta: res.data.pasta, imgs: res.data.imgs})\r\n            }else{\r\n                console.info(res.data.msg)\r\n            }\r\n            this.setState({loading: false})\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n        })\r\n    }\r\n\r\n    avaliar = (id_pasta, avaliacao) => {\r\n        try {\r\n            api().put(`/pastas/${id_pasta}/avaliar`, {\r\n                avaliacao\r\n            })\r\n            .then(res => {\r\n                console.info(res)\r\n                this.setState({pasta: {...this.state.pasta, avaliacao: avaliacao}})\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n            })\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { pasta, loading } = this.state;\r\n        return (\r\n            <Aux>\r\n                <Card\r\n                    className=''\r\n                    title={<h4>{pasta.nome} <Badge variant=\"secondary\">{pasta.categoria}</Badge></h4>}\r\n                    bodyClass={'px-0 py-0'}\r\n                    isOption\r\n                    fullscreen\r\n                    reload\r\n                    loading={loading}\r\n                    onCardReload={() => {}}\r\n                    cardHeaderRight={\r\n                        <div>\r\n                            <button onClick={() => this.avaliar(pasta.id_pasta, +1)} style={{...pasta.avaliacao === -1 || pasta.avaliacao === null ? {background: 'gray'} : {}}} className={`btn-peruibe btn btn-secondary btn-success text-white`}>Aprovar</button>\r\n                            <button onClick={() => this.avaliar(pasta.id_pasta, -1)} style={{...pasta.avaliacao === 1 || pasta.avaliacao === null ? {background: 'gray'} : {}}} className={`btn-peruibe btn btn-secondary btn-danger text-white`}>Reprovar</button>\r\n                        </div>\r\n                    }>\r\n                    <div className='my-container'>\r\n                        {!!pasta.nome &&\r\n                        <div className='body'>\r\n                            <div className='my-card col-left'>\r\n                                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                <h5>Descrição</h5>\r\n                                <label></label>\r\n                                </div>\r\n                                <label className=\"text-muted mb-4\">{pasta.descricao}</label>\r\n                                <h5>Discussão</h5>\r\n                                <label className=\"text-muted mb-4\">{pasta.discussao}</label>\r\n                            </div>\r\n                            <div className='col-right'>\r\n                                <div className='my-card card-user'>\r\n                                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                                        <ModalImage\r\n                                            images={[pasta.user_img || profile_image]}\r\n                                            displayIndex={0}\r\n                                            alt='Imagem do Usuário'\r\n                                        />\r\n                                    </div>\r\n                                    <div className='info'>\r\n                                        <span style={{fontSize: 12, fontWeight: 'bold'}}>Criador:</span>\r\n                                        <span style={{fontSize: 12, fontWeight: 'bold'}}>{pasta.user_nome}</span>\r\n                                        <span>{pasta.email}</span>\r\n                                        <span>{pasta.escolaridade}</span>\r\n                                        <span style={{fontSize: 12, fontStyle: 'italic'}}>Criado em: {moment(pasta.data_criacao).format('DD/MM/YYYY')}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {!!this.state.imgs.length &&\r\n                                <div className='my-card card-imgs' style={{marginTop: '1em'}}>\r\n                                    <ModalImage\r\n                                        images={this.state.imgs}\r\n                                        displayIndex={0}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                </Card>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SamplePage;","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport DEMO from \"../../../store/constant\";\r\n\r\nimport Pagination from \"react-js-pagination\";\r\nrequire(\"./style.scss\");\r\n\r\n/**\r\n * Props\r\n * @param isOption {bollean} - Monstrar menu de opções\r\n *\r\n * @param loading {bollean} - Monstrar carregamento\r\n * @param onCardReload {function} - Chamada quando o botão recarregar é clicado\r\n *\r\n * @param pagination {Object} - Paginação\r\n * @param pagination.itemsCountPerPage {number} - Itens por pagina\r\n * @param pagination.totalItemsCount {number} - Total de itens\r\n * @param onPageChange {function} - Chamado quando a pagina for alterada\r\n *\r\n */\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: this.props.loading,\r\n        cardRemove: false,\r\n        activePage: 1\r\n    };\r\n\r\n    componentWillReceiveProps = (props) => {\r\n        if(this.state.loadCard !== props.loading) this.setState({loadCard: props.loading})\r\n    }\r\n\r\n    cardReloadHandler = () => {\r\n        if(this.props.onCardReload) this.props.onCardReload();\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    handlePageChange(pageNumber) {\r\n        if(pageNumber !== this.state.activePage){\r\n            if(this.props.onPageChange) this.props.onPageChange(pageNumber);\r\n            this.setState({activePage: pageNumber});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [this.props.className];\r\n\r\n        if(this.state.isOption){\r\n            this.props.cardHeaderRight\r\n             ? cardHeaderRight =\r\n                <div style={{right: 10, display: 'inline-block', float: 'right', padding: 0, position: 'absolute'}}>\r\n                    {this.props.cardHeaderRight}\r\n                </div>\r\n            :\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            {this.props.fullscreen &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restaurar' : 'Maximizar'} </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.expand &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expandir' : 'Diminuir'} </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.reload &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Recarregar </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.excludable &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Excluir </a>\r\n                            </Dropdown.Item>}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body className={this.props.bodyClass}>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                        {this.props.pagination &&\r\n                        <Card.Footer style={{padding: 0, paddingLeft: '1em', paddingRight: '1em', paddingTop: '1em', display: 'flex', justifyContent: 'flex-end'}}>\r\n                        <Pagination\r\n                            activePage={this.state.activePage}\r\n                            itemsCountPerPage={this.props.pagination.itemsCountPerPage}\r\n                            totalItemsCount={this.props.pagination.totalItemsCount}\r\n                            pageRangeDisplayed={5}\r\n                            onChange={(pageNumber) => this.handlePageChange(pageNumber)}\r\n                        />\r\n                        </Card.Footer>}\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import axios from 'axios'\r\nimport { store } from './store/storage'\r\n\r\nconst api = () => {\r\n    let token = store.getState().auth.token\r\n\r\n    return axios.create({\r\n        headers: { 'Authorization': `Bearer ${token}` },\r\n        baseURL: document.location.hostname === 'localhost'\r\n            ? 'http://localhost:21086/'\r\n            : 'http://peruibemelhor.nodejs7605.kinghost.net:21086/',\r\n    })\r\n};\r\n\r\nexport default api;"],"sourceRoot":""}