{"version":3,"sources":["config.js","store/reducers/auth.js","store/reducers/system.js","store/reducers/reducer.js","store/storage.js","hoc/_Aux/index.js","store/actions.js","App/layout/ScrollToTop/index.js","route.js","App/index.js","serviceWorker.js","index.js","App/layout/Loader/index.js"],"names":["__webpack_exports__","defaultPath","basename","layout","preLayout","collapseMenu","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","initialState","user_name","user_email","token","Object","objectSpread","isOpen","isTrigger","config","isFullScreen","reducer","state","arguments","length","undefined","action","trigger","open","type","actionTypes","menu","triggerIndex","indexOf","id","filter","item","concat","toConsumableArray","combineReducers","auth","payload","nome","email","persistEmail","persist","axios","defaults","headers","common","system","__webpack_require__","d","store","persistor","persistConfig","key","storage","whitelist","_persistReducer","persistReducer","createStore","persistStore","Aux","props","children","AUTH_SIGNIN","AUTH_SIGNOUT","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","ScrollToTop","prevProps","this","location","window","scrollTo","React","Component","withRouter","route","path","exact","name","component","lazy","Promise","all","e","then","bind","AdminLayout","Loadable","loader","loading","Loader","App","routes","map","index","react_default","a","createElement","Route","render","_Aux","layout_ScrollToTop","react","fallback","Switch","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","app","es","integration_react","BrowserRouter","src_App","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","className"],"mappings":"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","file":"static/js/main.34f18b8f.chunk.js","sourcesContent":["export default {\r\n    defaultPath: '/auth/signin',\r\n    basename: '/admin/', // only at build time to set, like /datta-able\r\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\r\n    preLayout: null, // (not available in lite version)\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'menu-light', // menu-dark, (menu-light, dark are not available in lite version)\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\r\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\r\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\r\n    navBackImage: false, // not available in lite version\r\n    rtlLayout: false, // not available in lite version\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false, // not available in lite version\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\r\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\r\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\r\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\r\n    navListTitleHide: false, // not available in lite version\r\n    configBlock: false, // not available in lite version\r\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize : '', // used only for pre-layout = layout-6\r\n};\r\n","import * as actionTypes from '../actions';\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n  user_name: '',\r\n  user_email: '',\r\n  token: '',\r\n}\r\n\r\nexport default function auth(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_SIGNIN:\r\n      return {\r\n          ...state,\r\n          user_name: action.payload.nome,\r\n          user_email: action.payload.email,\r\n          token: action.payload.token\r\n      }\r\n    case actionTypes.AUTH_SIGNOUT:\r\n      const persistEmail = action.payload.persist\r\n      delete axios.defaults.headers.common[\"Authorization\"];\r\n\r\n      return {\r\n        ...state,\r\n        user_name: null,\r\n        user_email: persistEmail ? state.user_email : null,\r\n        token: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import * as actionTypes from '../actions';\r\nimport config from '../../config'\r\n\r\nconst initialState = {\r\n    isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false, // static can't change\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n\r\n    switch (action.type) {\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            } else {\r\n                open = state.isOpen;\r\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\r\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\r\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger,\r\n                };\r\n            }\r\n            return {...state};\r\n        case actionTypes.FULL_SCREEN :\r\n            return {\r\n                ...state,\r\n                isFullScreen: !state.isFullScreen\r\n            };\r\n        case actionTypes.FULL_SCREEN_EXIT:\r\n            return {\r\n                ...state,\r\n                isFullScreen: false\r\n            };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { combineReducers } from 'redux'\r\n\r\nimport auth from './auth'\r\nimport system from './system'\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  system\r\n})","import {createStore} from 'redux';\r\nimport {persistStore, persistReducer} from 'redux-persist';\r\nimport reducer from './reducers/reducer';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['auth']\r\n}\r\n\r\nconst _persistReducer = persistReducer(persistConfig, reducer)\r\n\r\nconst store = createStore(_persistReducer);\r\nconst persistor = persistStore(store)\r\n\r\nexport { store, persistor }","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","export const AUTH_SIGNIN = 'AUTH_SIGNIN';\r\nexport const AUTH_SIGNOUT = 'AUTH_SIGNOUT';\r\n\r\nexport const COLLAPSE_MENU = 'COLLAPSE_MENU';\r\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\r\nexport const FULL_SCREEN = 'FULL_SCREEN';\r\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\r\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\r\n\r\nconst SignUp = React.lazy(() => import('./Screen/Authentication/SignUp/SignUp'));\r\nconst Signin = React.lazy(() => import('./Screen/Authentication/SignIn/SignIn'));\r\n\r\nconst route = [\r\n    { path: '/auth/signup', exact: true, name: 'Signup', component: SignUp },\r\n    { path: '/auth/signin', exact: true, name: 'Signin', component: Signin }\r\n];\r\n\r\nexport default route;","import React, { Component, Suspense } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\n\r\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\r\n\r\nimport Loader from './layout/Loader'\r\nimport Aux from \"../hoc/_Aux\";\r\nimport ScrollToTop from './layout/ScrollToTop';\r\nimport routes from \"../route\";\r\n\r\nconst AdminLayout = Loadable({\r\n    loader: () => import('./layout/AdminLayout'),\r\n    loading: Loader\r\n});\r\n\r\nclass App extends Component {\r\n    render() {\r\n        const menu = routes.map((route, index) => {\r\n          return (route.component) ? (\r\n              <Route\r\n                  key={index}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={props => (\r\n                      <route.component {...props} />\r\n                  )} />\r\n          ) : (null);\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <ScrollToTop>\r\n                    <Suspense fallback={<Loader/>}>\r\n                        <Switch>\r\n                            {menu}\r\n                            <Route path=\"/\" component={AdminLayout} />\r\n                        </Switch>\r\n                    </Suspense>\r\n                </ScrollToTop>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport Loader from './App/layout/Loader/index'\r\n\r\nimport {Provider} from 'react-redux';\r\nimport {PersistGate} from 'redux-persist/integration/react';\r\n\r\nimport App from './App/index';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport config from './config';\r\n\r\nimport { store, persistor } from './store/storage'\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <PersistGate loading={<Loader/>} persistor={persistor}>\r\n            <BrowserRouter basename={config.basename}>\r\n                <App />\r\n            </BrowserRouter>\r\n        </PersistGate>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import React from 'react';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader-bg\">\r\n            <div className=\"loader-track\">\r\n                <div className=\"loader-fill\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default loader;"],"sourceRoot":""}