{"version":3,"sources":["../node_modules/react-bootstrap/es/Col.js","../node_modules/react-bootstrap/es/Row.js","../node_modules/react-nvd3/dist/react-nvd3.min.js","../node_modules/d3/d3.js","../node_modules/nvd3/build/nv.d3.js","../node_modules/react-bootstrap/es/CardContext.js","../node_modules/react-bootstrap/es/utils/divWithClassName.js","../node_modules/react-bootstrap/es/CardImg.js","../node_modules/react-bootstrap/es/Card.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","n","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__","DEVICE_SIZES","Col","_React$Component","apply","this","arguments","Object","prototype","render","_this$props","props","bsPrefix","className","Component","as","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","a","createElement","concat","defaultProps","__webpack_exports__","Row","noGutters","t","e","module","exports","r","o","id","loaded","call","m","c","p","__esModule","default","defineProperty","value","i","u","s","f","l","d","h","y","v","b","g","_","x","O","j","w","S","P","F","key","addGraph","renderChart","bind","isCallable","ready","resizeHandler","clear","chart","rendering","models","type","renderStart","parsedProps","bindFunctions","context","getValueFunction","margin","options","pick","propsByPrefix","configureComponents","without","configure","selection","select","refs","svg","datum","utils","windowResize","update","pie","dispatch","lines","renderEnd","on","isPlainObject","chartOptions","containerStyle","ref","style","hasOwnProperty","assign","G","B","W","_e","Function","window","Math","self","__g","version","__e","TypeError","Symbol","split","keys","join","getKeys","getSymbols","isEnum","create","getProto","getPrototypeOf","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","defineProperties","getNames","getOwnPropertyNames","getOwnPropertySymbols","each","toString","slice","enumerable","configurable","writable","ReferenceError","constructor","get","JSON","E","stringify","M","k","C","D","N","T","q","z","_k","set","A","V","H","I","J","R","U","for","keyFor","useSetter","useSimple","_e2","random","Array","isArray","__proto__","setPrototypeOf","check","indexOf","includes","negate","filterObject","name","console","warn","reduce","substr","replace","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","d3_arraySlice","d3_array","list","d3_document","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","array","Date","now","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","ascending","descending","min","max","extent","sum","mean","quantile","values","floor","median","numbers","sort","variance","deviation","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","map","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","range","start","stop","step","Infinity","Error","d3_range_integerScale","object","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","listeners","listenerByName","event","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","_d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","enter","exit","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","position","top","padding","border","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","parseRows","eol","EOL","EOF","rows","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","String","fromCharCode","_x","X","toPrecision","toExponential","toFixed","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","dt","times","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","L","Z","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","_d","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","interval","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","names","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","rejoin","d3_geo_clipAntimeridian","_clean","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","ρ0","forward","ρ0_y","clipExtent","_stream","output","valid","conicEqualArea","raw","albers","albersUsa","_point","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","_pointRadius","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","_clean2","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","d3_geo_pathProjectStream","transform","methods","_stream2","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","d3_geo_mercator","d3_geo_conicEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","undefined","nv","dev","tooltip","charts","logs","dom","oThis","aArgs","fToBind","fNOP","fBound","startTime","endTime","totalTime","deprecated","info","render_start","renderLoop","graph","generate","render_end","obj","write","fastdom","mutate","read","measure","interactiveGuideline","height","xScale","showGuideLine","svgContainer","isMSIE","ActiveXObject","layer","availableWidth","availableHeight","mouseHandler","mouseX","mouseY","subtractMargin","mouseOutAnyReason","offsetX","offsetY","tagName","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","pointXValue","elementIndex","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","guideLine","NaNtoZero","hideDelay","interactiveBisect","searchVal","xAccessor","_xAccessor","currentValue","nextIndex","nextValue","nearestValueIndex","yDistMax","indexToHighlight","delta","snapDistance","lastPosition","enabled","headerEnabled","valueFormatter","headerFormatter","keyFormatter","contentGenerator","elem","table","trowEnter","highlight","total","percent","opacityScale","outerHTML","footer","pos","client","dataSeriesExists","isObject","positionTooltip","gravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","clientHeight","calcGravityOffset","old_translate","new_translate","translateInterpolator","is_hidden","nvtooltip","newContent","optionsFunc","_options","chartContainer","fixedTop","initOptions","windowSize","innerWidth","innerHeight","compatMode","isFunction","isDate","isNumber","handler","getColor","defaultColor","color_scale","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","content","href","fragment","replaceChild","history","pushState","state","calcApproxTextWidth","svgTextElem","fontSize","textLength","watchTransition","renderWatch","_duration","renderStack","model","__rendered","arg","every","deepExtend","dst","srcObj","_setState","_getState","init","getter","fn","settings","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","calls","inheritOptionsD3","oplist","_d3options","item","arrayUnique","symbolMap","inheritOptions","inherited","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","noData","opt","noDataText","wrapTicks","word","words","lineNumber","tspan","getComputedTextLength","arrayEquals","array1","array2","pointIsInArc","pt","ptData","d3Arc","r2","theta1","dist","tickFormatMaxMin","axisLabelText","showMaxMin","rotateLabels","rotateYLabel","staggerLabels","isOrdinal","axisLabelDistance","fmt","xLabelMargin","axisMaxMin","axisLabel","maxTextWidth","textHeight","xTicks","rotateLabelsRule","box","maxMinRange","boxPlot","xDomain","xRange","yDomain","yRange","xScale0","yScale0","yScale","getX","label","getQ1","Q1","getQ2","Q2","getQ3","Q3","getWl","whisker_low","getWh","whisker_high","getOlItems","outliers","getOlValue","getOlLabel","getOlColor","maxBoxWidth","yData","q3","wl","wh","olItems","boxplots","boxEnter","hover","box_width","box_left","box_right","endpoint","elementMouseover","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","xAxis","yAxis","showXAxis","showYAxis","rightAlignYAxis","beforeUpdate","gEnter","defsEnter","disabled","evt","tooltipContent","bullet","markers","markerLines","measures","rangeLabels","markerLabels","markerLineLabels","measureLabels","forceX","defaultRangeLabels","legacyRangeClassNames","sortLabels","labels","lz","iA","iB","rangez","markerz","markerLinez","measurez","rangeLabelz","markerLabelz","markerLineLabelz","measureLabelz","il","rangeClassNames","xp1","h3","markerData","marker","markerLinesData","bulletChart","title","subtitle","bulletWrap","candlestickBar","getY","getOpen","getClose","close","getHigh","high","getLow","low","forceY","padData","clipEdge","interactive","barWidth","wrapEnter","chartClick","tickGroups","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","legend","controls","interactiveLayer","marginTop","showLegend","showControls","useInteractiveGuideline","rescaleY","defaultState","average","noErrorCheck","updateState","currentYDomain","stateGetter","stateSetter","indexDrag","updateZero","stateChange","idx","indexifyYGetter","indexValue","tempDisabled","display","indexify","getCurrentYDomain","interactivePointerEvents","controlsData","rightAlign","linesWrap","seriesIndex","avgLineData","avgLines","getAvgLineY","yVal","indexLine","oldDuration","_ticks","newState","singlePoint","pointXLocation","allData","yValue","xValue","seriesDomains","useVoronoi","discreteBar","showValues","valueFormat","rectClass","seriesData","bars","barsEnter","element","stopPropagation","elementDblClick","discreteBarChart","discretebar","wrapLabels","distribution","getData","naxis","distWrap","focus","brushExtent","syncBrushing","pointActive","contentWrap","onBrush","brushBG","brushBGenter","gBrush","shouldDispatch","leftWidth","rightWidth","xTickFormat","yTickFormat","forceDirectedGraph","linkDist","nodeExtras","linkExtras","nodeFieldSet","Set","nodeColor","furiousLegend","maxKeyLength","radioButtonMode","expanded","vers","setTextColor","disengaged","setBGColor","seriesShape","seriesEnter","versPadding","seriesText","legendMouseover","legendMouseout","legendClick","userDisabled","legendDblclick","seriesWidths","legendText","nodeTextLength","trimmedKey","seriesPerRow","legendWidth","columnWidths","prev","cur","xPositions","curX","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","enableDoubleClick","setBGOpacity","scatter","strokeWidth","isArea","pointSize","pointDomain","scatterWrap","fillOpacity","areaPaths","linePaths","lineChart","legendPosition","focusEnable","focusEnter","updateXAxis","updateYAxis","disableTooltip","currentValues","pointYValue","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","y4","lines2","bars2","y1Axis","y3Axis","y4Axis","margin2","legendLeftAxisHint","legendRightAxisHint","switchYAxisOrder","allDisabled","availableHeight1","availableHeight2","dataBars","bar","dataLines","series1","series2","contextEnter","legendXPosition","originalKey","bars2Wrap","lines2Wrap","dataLine","focusBarsWrap","focusLinesWrap","barsOpacity","linesOpacity","y1Opacity","y2Opacity","main","getLinesAxis","getBarsAxis","multiBar","stacked","stackOffset","hideable","barColor","groupSpacing","last_datalength","nonStackableCount","parsed","nonStackable","nonStackableSeries","posBase","negBase","exitTransition","barSelection","multiBarChart","multibar","controlLabels","reduceXTicks","controlWidth","grouped","getTranslate","totalInBetweenTicks","multiBarHorizontal","getYerr","yErr","showBarLabels","valuePadding","xerr","yerr","multiBarHorizontalChart","controlsPosition","multiChart","yDomain1","yDomain2","yScale1","yScale2","lines1","scatters1","scatters2","bars1","stack1","stackedArea","stack2","yAxis1","yAxis2","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1BarStacked","aVal","extraValue2BarStacked","mouseover_line","yaxis","mouseover_scatter","mouseover_stack","mouseover_bar","serieIndex","parallelCoordinates","foreground","dimensions","undefinedValuesLabel","dimensionData","enabledDimensions","dimensionNames","displayBrush","filters","axisWithUndefinedValues","lineTension","newData","val","dataValues","currentPosition","oldDomainMaxValue","displayMissingValuesline","currentTicks","onlyUndefinedValues","hasOnlyNaN","hasNaN","missingValuesline","missingValueslineText","axisDrag","__origin__","dimensionPosition","dimensionsOrder","lineData","dimensionsEnter","restoreBrush","actives","extents","formerActive","newscale","brushDomain","updateTicks","isActive","hasActiveBrush","brushEnd","activeChanged","dimensionFormats","parallelCoordinatesChart","nanValue","originalPosition","isSorted","str","tp","dim","dd","showLabels","labelsOutside","labelType","labelThreshold","hideOverlapLabels","donut","growOnHover","titleOffset","labelSunbeamLayout","donutRatio","arcsRadius","arcsOver","arcsRadiusOuter","arcsRadiusInner","outer","inner","g_pie","arcOver","slices","pieLabels","ae","_current","labelsArc","rotateAngle","labelLocationHash","createHashKey","getSlicePercentage","hashKey","getBBox","topLeft","topRight","bottomLeft","bottomRight","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","showTooltipPercent","pieWrap","sankey","nodeWidth","nodePadding","sinksRight","iterations","sourceLinks","targetLinks","nextNodes","remainingNodes","moveSinksRight","computeNodeBreadths","nodesByBreadth","initializeNodeDepth","resolveCollisions","computeLinkDepths","relaxRightToLeft","relaxLeftToRight","weightedSource","breadth","weightedTarget","ty","ascendingDepth","computeNodeDepths","curvature","ascendingSourceDepth","ascendingTargetDepth","sankeyChart","units","formatNumber","linkTitle","nodeFillColor","nodeStrokeColor","nodeTitle","showError","message","testData","isDataValid","dataAvailable","nodeStyle","fillColor","strokeColor","xDom","yDom","width0","height0","timeoutID","pointBorderColor","getSize","getShape","shape","forceSize","notActive","padDataOuter","clipVoronoi","showVoronoi","clipRadius","sizeDomain","sizeRange","interactiveUpdateDelay","needsUpdate","_sizeRange_def","_cache","delCache","getDiffs","cache","getCache","diffs","logScale","scaleDiff","sizeDiff","domainDiff","updateInteractiveLayer","pX","pY","pointArray","pointPaths","vPointPaths","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","titles","pointScale","pointRange","forcePoint","pointShape","scatterChart","distX","distY","showDistX","showDistY","regWrap","regLine","intercept","slope","sparkline","animate","showMinMaxPoints","showCurrentPoint","yValues","maxPoint","minPoint","currentPoint","sparklinePlus","paused","showLastValue","alignValue","rightAlignValue","sparklineWrap","updateValueLine","hoverValue","hoverEnter","closestIndex","getClosestIndex","dataRaw","aseries","dataFiltered","zeroArea","areaMouseover","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","stackedAreaChart","showTotalInTooltip","totalLabel","controlOptions","oldYTickFormat","oldValueFormatter","percentFormatter","xAxisHeight","legendTop","metaKey","stack_percent","requiredTop","stackedWrap","currentFormat","valueSum","allNullValues","atleastOnePoint","tooltipValue","stackedY0","stackedY","stackedAreaWithFocusChart","sunburst","modes","groupColorByParent","prevPositions","rotationToAvoidUpsideDown","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","storeRetrievePrevPositions","pP","updatePrevPosition","zoomClick","centerAngle","cG","sunburstChart","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","divWithClassName","react_default","forwardRef","esm_extends","classnames_default","CardImg_CardImg","CardImg","inheritsLoose","variant","objectWithoutPropertiesLoose","baseClass","es_CardImg","ThemeProvider","CardBody","createWithBsPrefix","Card_Card","Card","_this","_len","_key","getDerivedStateFromProps","_ref","cardContext","cardHeaderBsPrefix","CardContext","Provider","DivStyledAsH5","DivStyledAsH6","DecoratedCard","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"mappings":"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","file":"static/js/14.8f1ead9f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\n\nvar Col =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Col, _React$Component);\n\n  function Col() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Col.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\"]);\n\n    var spans = [];\n    var classes = [];\n    DEVICE_SIZES.forEach(function (brkPoint) {\n      var propValue = props[brkPoint];\n      delete props[brkPoint];\n      var span, offset, order;\n\n      if (propValue != null && typeof propValue === 'object') {\n        var _propValue$span = propValue.span;\n        span = _propValue$span === void 0 ? true : _propValue$span;\n        offset = propValue.offset;\n        order = propValue.order;\n      } else {\n        span = propValue;\n      }\n\n      var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n      if (span != null) spans.push(span === true ? \"\" + bsPrefix + infix : \"\" + bsPrefix + infix + \"-\" + span);\n      if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n      if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n    });\n\n    if (!spans.length) {\n      spans.push(bsPrefix); // plain 'col'\n    }\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames.apply(void 0, [className].concat(spans, classes))\n    }));\n  };\n\n  return Col;\n}(React.Component);\n\nCol.defaultProps = {\n  as: 'div'\n};\nexport default createBootstrapComponent(Col, 'col');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Row, _React$Component);\n\n  function Row() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Row.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        noGutters = _this$props.noGutters,\n        Component = _this$props.as,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix, noGutters && 'no-gutters')\n    }));\n  };\n\n  return Row;\n}(React.Component);\n\nRow.defaultProps = {\n  as: 'div',\n  noGutters: false\n};\nexport default createBootstrapComponent(Row, 'row');","!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : \"function\" == typeof define && define.amd ? define([\"react\", \"d3\", \"nvd3\"], e) : \"object\" == typeof exports ? exports.NVD3Chart = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : t.NVD3Chart = e(t.React, t.d3, t.nv);\n}(this, function (t, e, n) {\n  return function (t) {\n    function e(r) {\n      if (n[r]) return n[r].exports;\n      var o = n[r] = {\n        exports: {},\n        id: r,\n        loaded: !1\n      };\n      return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;\n    }\n\n    var n = {};\n    return e.m = t, e.c = n, e.p = \"\", e(0);\n  }([function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var o = n(1),\n        i = r(o),\n        u = n(2),\n        c = r(u),\n        s = n(17),\n        a = r(s),\n        f = n(21),\n        p = r(f),\n        l = n(22),\n        d = r(l),\n        h = n(25),\n        y = r(h),\n        v = n(48),\n        b = r(v),\n        g = n(55),\n        m = r(g),\n        _ = n(56),\n        x = r(_),\n        O = n(57),\n        j = r(O),\n        w = n(58),\n        S = [\"x\", \"y\", \"type\", \"datum\", \"configure\"],\n        P = [\"width\", \"height\"],\n        E = \"margin\",\n        M = \"containerStyle\",\n        k = \"renderStart\",\n        C = \"renderEnd\",\n        D = \"ready\",\n        F = function (t) {\n      function e() {\n        return (0, p[\"default\"])(this, e), (0, y[\"default\"])(this, (0, a[\"default\"])(e).apply(this, arguments));\n      }\n\n      return (0, b[\"default\"])(e, t), (0, d[\"default\"])(e, [{\n        key: \"componentDidMount\",\n        value: function value() {\n          var t = this;\n          j[\"default\"].addGraph(this.renderChart.bind(this), function (e) {\n            (0, w.isCallable)(t.props.ready) && t.props.ready(e, D);\n          });\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function value() {\n          this.renderChart();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          this.resizeHandler && this.resizeHandler.clear();\n        }\n      }, {\n        key: \"renderChart\",\n        value: function value() {\n          var t = void 0;\n\n          switch (this.chart = this.chart && !this.rendering ? this.chart : j[\"default\"].models[this.props.type](), (0, w.isCallable)(this.props.renderStart) && this.props.renderStart(this.chart, k), this.parsedProps = (0, w.bindFunctions)(this.props, this.props.context), this.chart.x && this.chart.x((0, w.getValueFunction)(this.parsedProps.x, \"x\")), this.chart.y && this.chart.y((0, w.getValueFunction)(this.parsedProps.y, \"y\")), this.props.margin && this.chart.margin(this.options(E, w.pick).margin || (0, w.propsByPrefix)(\"margin\", this.props) || {}), this.configureComponents(this.chart, this.options(S.concat(M), w.without)), !this.props.configure || this.props.configure(this.chart), this.selection = x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart), this.resizeHandler || (this.resizeHandler = j[\"default\"].utils.windowResize(this.chart.update)), this.props.type) {\n            case \"pieChart\":\n              t = this.chart.pie.dispatch;\n              break;\n\n            case \"lineChart\":\n              t = this.chart.lines.dispatch;\n              break;\n\n            default:\n              t = this.chart.dispatch;\n          }\n\n          return t.renderEnd && t.on(\"renderEnd\", this.renderEnd.bind(this)), this.rendering = !0, this.chart;\n        }\n      }, {\n        key: \"renderEnd\",\n        value: function value(t) {\n          (0, w.isCallable)(this.props.renderEnd) && this.props.renderEnd(this.chart, C), this.rendering = !1;\n        }\n      }, {\n        key: \"configureComponents\",\n        value: function value(t, e) {\n          for (var n in e) {\n            var r = e[n];\n            t && ((0, w.isPlainObject)(r) ? this.configureComponents(t[n], r) : \"function\" == typeof t[n] && t[n](r));\n          }\n        }\n      }, {\n        key: \"options\",\n        value: function value(t, e) {\n          var n = this.parsedProps.options || this.parsedProps || this.props.chartOptions;\n          return (e = e || w.pick)(n, t);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = (0, w.pick)(this.props, P),\n              e = (0, c[\"default\"])({}, t, this.props.containerStyle);\n          return m[\"default\"].createElement(\"div\", {\n            ref: \"root\",\n            className: \"nv-chart\",\n            style: e\n          }, m[\"default\"].createElement(\"svg\", (0, i[\"default\"])({\n            ref: \"svg\"\n          }, t)));\n        }\n      }]), e;\n    }(m[\"default\"].Component);\n\n    e[\"default\"] = F, t.exports = F;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(2)[\"default\"];\n    e[\"default\"] = r || function (t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var n = arguments[e];\n\n        for (var r in n) {\n          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n        }\n      }\n\n      return t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(3),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(4), t.exports = n(7).Object.assign;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S + r.F, \"Object\", {\n      assign: n(10)\n    });\n  }, function (t, e, n) {\n    var r = n(6),\n        o = n(7),\n        i = n(8),\n        u = \"prototype\",\n        c = function c(t, e, n) {\n      var s,\n          a,\n          f,\n          p = t & c.F,\n          l = t & c.G,\n          d = t & c.S,\n          h = t & c.P,\n          y = t & c.B,\n          v = t & c.W,\n          b = l ? o : o[e] || (o[e] = {}),\n          g = l ? r : d ? r[e] : (r[e] || {})[u];\n      l && (n = e);\n\n      for (s in n) {\n        a = !p && g && s in g, a && s in b || (f = a ? g[s] : n[s], b[s] = l && \"function\" != typeof g[s] ? n[s] : y && a ? i(f, r) : v && g[s] == f ? function (t) {\n          var e = function e(_e) {\n            return this instanceof t ? new t(_e) : t(_e);\n          };\n\n          return e[u] = t[u], e;\n        }(f) : h && \"function\" == typeof f ? i(Function.call, f) : f, h && ((b[u] || (b[u] = {}))[s] = f));\n      }\n    };\n\n    c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, t.exports = c;\n  }, function (t, e) {\n    var n = t.exports = \"undefined\" != typeof window && window.Math == Math ? window : \"undefined\" != typeof self && self.Math == Math ? self : Function(\"return this\")();\n    \"number\" == typeof __g && (__g = n);\n  }, function (t, e) {\n    var n = t.exports = {\n      version: \"1.2.6\"\n    };\n    \"number\" == typeof __e && (__e = n);\n  }, function (t, e, n) {\n    var r = n(9);\n\n    t.exports = function (t, e, n) {\n      if (r(t), void 0 === e) return t;\n\n      switch (n) {\n        case 1:\n          return function (n) {\n            return t.call(e, n);\n          };\n\n        case 2:\n          return function (n, r) {\n            return t.call(e, n, r);\n          };\n\n        case 3:\n          return function (n, r, o) {\n            return t.call(e, n, r, o);\n          };\n      }\n\n      return function () {\n        return t.apply(e, arguments);\n      };\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (\"function\" != typeof t) throw TypeError(t + \" is not a function!\");\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(12),\n        i = n(14);\n    t.exports = n(16)(function () {\n      var t = Object.assign,\n          e = {},\n          n = {},\n          r = Symbol(),\n          o = \"abcdefghijklmnopqrst\";\n      return e[r] = 7, o.split(\"\").forEach(function (t) {\n        n[t] = t;\n      }), 7 != t({}, e)[r] || Object.keys(t({}, n)).join(\"\") != o;\n    }) ? function (t, e) {\n      for (var n = o(t), u = arguments, c = u.length, s = 1, a = r.getKeys, f = r.getSymbols, p = r.isEnum; c > s;) {\n        for (var l, d = i(u[s++]), h = f ? a(d).concat(f(d)) : a(d), y = h.length, v = 0; y > v;) {\n          p.call(d, l = h[v++]) && (n[l] = d[l]);\n        }\n      }\n\n      return n;\n    } : Object.assign;\n  }, function (t, e) {\n    var n = Object;\n    t.exports = {\n      create: n.create,\n      getProto: n.getPrototypeOf,\n      isEnum: {}.propertyIsEnumerable,\n      getDesc: n.getOwnPropertyDescriptor,\n      setDesc: n.defineProperty,\n      setDescs: n.defineProperties,\n      getKeys: n.keys,\n      getNames: n.getOwnPropertyNames,\n      getSymbols: n.getOwnPropertySymbols,\n      each: [].forEach\n    };\n  }, function (t, e, n) {\n    var r = n(13);\n\n    t.exports = function (t) {\n      return Object(r(t));\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (void 0 == t) throw TypeError(\"Can't call method on  \" + t);\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n    t.exports = Object(\"z\").propertyIsEnumerable(0) ? Object : function (t) {\n      return \"String\" == r(t) ? t.split(\"\") : Object(t);\n    };\n  }, function (t, e) {\n    var n = {}.toString;\n\n    t.exports = function (t) {\n      return n.call(t).slice(8, -1);\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      try {\n        return !!t();\n      } catch (e) {\n        return !0;\n      }\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(18),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(19), t.exports = n(7).Object.getPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"getPrototypeOf\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }, function (t, e, n) {\n    var r = n(5),\n        o = n(7),\n        i = n(16);\n\n    t.exports = function (t, e) {\n      var n = (o.Object || {})[t] || Object[t],\n          u = {};\n      u[t] = e(n), r(r.S + r.F * i(function () {\n        n(1);\n      }), \"Object\", u);\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    e[\"default\"] = function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(23),\n        i = r(o);\n    e[\"default\"] = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var r = e[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), (0, i[\"default\"])(t, r.key, r);\n        }\n      }\n\n      return function (e, n, r) {\n        return n && t(e.prototype, n), r && t(e, r), e;\n      };\n    }(), e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(24),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e, n) {\n      return r.setDesc(t, e, n);\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(26),\n        i = r(o);\n    e[\"default\"] = function (t, e) {\n      if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" !== (\"undefined\" == typeof e ? \"undefined\" : (0, i[\"default\"])(e)) && \"function\" != typeof e ? t : e;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(27)[\"default\"];\n    e[\"default\"] = function (t) {\n      return t && t.constructor === r ? \"symbol\" : typeof t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(28),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(29), n(47), t.exports = n(7).Symbol;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(11),\n        o = n(6),\n        i = n(30),\n        u = n(31),\n        c = n(5),\n        s = n(32),\n        a = n(16),\n        f = n(35),\n        p = n(36),\n        l = n(38),\n        d = n(37),\n        h = n(39),\n        y = n(41),\n        v = n(42),\n        b = n(43),\n        g = n(44),\n        m = n(40),\n        _ = n(34),\n        x = r.getDesc,\n        O = r.setDesc,\n        j = r.create,\n        w = y.get,\n        S = o.Symbol,\n        P = o.JSON,\n        E = P && P.stringify,\n        M = !1,\n        k = d(\"_hidden\"),\n        C = r.isEnum,\n        D = f(\"symbol-registry\"),\n        F = f(\"symbols\"),\n        N = \"function\" == typeof S,\n        T = Object.prototype,\n        q = u && a(function () {\n      return 7 != j(O({}, \"a\", {\n        get: function get() {\n          return O(this, \"a\", {\n            value: 7\n          }).a;\n        }\n      })).a;\n    }) ? function (t, e, n) {\n      var r = x(T, e);\n      r && delete T[e], O(t, e, n), r && t !== T && O(T, e, r);\n    } : O,\n        z = function z(t) {\n      var e = F[t] = j(S.prototype);\n      return e._k = t, u && M && q(T, t, {\n        configurable: !0,\n        set: function set(e) {\n          i(this, k) && i(this[k], t) && (this[k][t] = !1), q(this, t, _(1, e));\n        }\n      }), e;\n    },\n        A = function A(t) {\n      return \"symbol\" == typeof t;\n    },\n        V = function V(t, e, n) {\n      return n && i(F, e) ? (n.enumerable ? (i(t, k) && t[k][e] && (t[k][e] = !1), n = j(n, {\n        enumerable: _(0, !1)\n      })) : (i(t, k) || O(t, k, _(1, {})), t[k][e] = !0), q(t, e, n)) : O(t, e, n);\n    },\n        W = function W(t, e) {\n      g(t);\n\n      for (var n, r = v(e = m(e)), o = 0, i = r.length; i > o;) {\n        V(t, n = r[o++], e[n]);\n      }\n\n      return t;\n    },\n        B = function B(t, e) {\n      return void 0 === e ? j(t) : W(j(t), e);\n    },\n        G = function G(t) {\n      var e = C.call(this, t);\n      return e || !i(this, t) || !i(F, t) || i(this, k) && this[k][t] ? e : !0;\n    },\n        H = function H(t, e) {\n      var n = x(t = m(t), e);\n      return !n || !i(F, e) || i(t, k) && t[k][e] || (n.enumerable = !0), n;\n    },\n        I = function I(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) || e == k || r.push(e);\n      }\n\n      return r;\n    },\n        J = function J(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) && r.push(F[e]);\n      }\n\n      return r;\n    },\n        K = function K(t) {\n      if (void 0 !== t && !A(t)) {\n        for (var e, n, r = [t], o = 1, i = arguments; i.length > o;) {\n          r.push(i[o++]);\n        }\n\n        return e = r[1], \"function\" == typeof e && (n = e), (n || !b(e)) && (e = function e(t, _e2) {\n          return n && (_e2 = n.call(this, t, _e2)), A(_e2) ? void 0 : _e2;\n        }), r[1] = e, E.apply(P, r);\n      }\n    },\n        R = a(function () {\n      var t = S();\n      return \"[null]\" != E([t]) || \"{}\" != E({\n        a: t\n      }) || \"{}\" != E(Object(t));\n    });\n\n    N || (S = function S() {\n      if (A(this)) throw TypeError(\"Symbol is not a constructor\");\n      return z(l(arguments.length > 0 ? arguments[0] : void 0));\n    }, s(S.prototype, \"toString\", function () {\n      return this._k;\n    }), A = function A(t) {\n      return t instanceof S;\n    }, r.create = B, r.isEnum = G, r.getDesc = H, r.setDesc = V, r.setDescs = W, r.getNames = y.get = I, r.getSymbols = J, u && !n(46) && s(T, \"propertyIsEnumerable\", G, !0));\n    var U = {\n      \"for\": function _for(t) {\n        return i(D, t += \"\") ? D[t] : D[t] = S(t);\n      },\n      keyFor: function keyFor(t) {\n        return h(D, t);\n      },\n      useSetter: function useSetter() {\n        M = !0;\n      },\n      useSimple: function useSimple() {\n        M = !1;\n      }\n    };\n    r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"), function (t) {\n      var e = d(t);\n      U[t] = N ? e : z(e);\n    }), M = !0, c(c.G + c.W, {\n      Symbol: S\n    }), c(c.S, \"Symbol\", U), c(c.S + c.F * !N, \"Object\", {\n      create: B,\n      defineProperty: V,\n      defineProperties: W,\n      getOwnPropertyDescriptor: H,\n      getOwnPropertyNames: I,\n      getOwnPropertySymbols: J\n    }), P && c(c.S + c.F * (!N || R), \"JSON\", {\n      stringify: K\n    }), p(S, \"Symbol\"), p(Math, \"Math\", !0), p(o.JSON, \"JSON\", !0);\n  }, function (t, e) {\n    var n = {}.hasOwnProperty;\n\n    t.exports = function (t, e) {\n      return n.call(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = !n(16)(function () {\n      return 7 != Object.defineProperty({}, \"a\", {\n        get: function get() {\n          return 7;\n        }\n      }).a;\n    });\n  }, function (t, e, n) {\n    t.exports = n(33);\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(34);\n    t.exports = n(31) ? function (t, e, n) {\n      return r.setDesc(t, e, o(1, n));\n    } : function (t, e, n) {\n      return t[e] = n, t;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      return {\n        enumerable: !(1 & t),\n        configurable: !(2 & t),\n        writable: !(4 & t),\n        value: e\n      };\n    };\n  }, function (t, e, n) {\n    var r = n(6),\n        o = \"__core-js_shared__\",\n        i = r[o] || (r[o] = {});\n\n    t.exports = function (t) {\n      return i[t] || (i[t] = {});\n    };\n  }, function (t, e, n) {\n    var r = n(11).setDesc,\n        o = n(30),\n        i = n(37)(\"toStringTag\");\n\n    t.exports = function (t, e, n) {\n      t && !o(t = n ? t : t.prototype, i) && r(t, i, {\n        configurable: !0,\n        value: e\n      });\n    };\n  }, function (t, e, n) {\n    var r = n(35)(\"wks\"),\n        o = n(38),\n        i = n(6).Symbol;\n\n    t.exports = function (t) {\n      return r[t] || (r[t] = i && i[t] || (i || o)(\"Symbol.\" + t));\n    };\n  }, function (t, e) {\n    var n = 0,\n        r = Math.random();\n\n    t.exports = function (t) {\n      return \"Symbol(\".concat(void 0 === t ? \"\" : t, \")_\", (++n + r).toString(36));\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(40);\n\n    t.exports = function (t, e) {\n      for (var n, i = o(t), u = r.getKeys(i), c = u.length, s = 0; c > s;) {\n        if (i[n = u[s++]] === e) return n;\n      }\n    };\n  }, function (t, e, n) {\n    var r = n(14),\n        o = n(13);\n\n    t.exports = function (t) {\n      return r(o(t));\n    };\n  }, function (t, e, n) {\n    var r = n(40),\n        o = n(11).getNames,\n        i = {}.toString,\n        u = \"object\" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],\n        c = function c(t) {\n      try {\n        return o(t);\n      } catch (e) {\n        return u.slice();\n      }\n    };\n\n    t.exports.get = function (t) {\n      return u && \"[object Window]\" == i.call(t) ? c(t) : o(r(t));\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t) {\n      var e = r.getKeys(t),\n          n = r.getSymbols;\n      if (n) for (var o, i = n(t), u = r.isEnum, c = 0; i.length > c;) {\n        u.call(t, o = i[c++]) && e.push(o);\n      }\n      return e;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n\n    t.exports = Array.isArray || function (t) {\n      return \"Array\" == r(t);\n    };\n  }, function (t, e, n) {\n    var r = n(45);\n\n    t.exports = function (t) {\n      if (!r(t)) throw TypeError(t + \" is not an object!\");\n      return t;\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      return \"object\" == typeof t ? null !== t : \"function\" == typeof t;\n    };\n  }, function (t, e) {\n    t.exports = !0;\n  }, function (t, e) {}, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(49)[\"default\"],\n        o = n(51)[\"default\"];\n    e[\"default\"] = function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n      t.prototype = r(e && e.prototype, {\n        constructor: {\n          value: t,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (o ? o(t, e) : t.__proto__ = e);\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(50),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e) {\n      return r.create(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(52),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(53), t.exports = n(7).Object.setPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S, \"Object\", {\n      setPrototypeOf: n(54).set\n    });\n  }, function (t, e, n) {\n    var r = n(11).getDesc,\n        o = n(45),\n        i = n(44),\n        u = function u(t, e) {\n      if (i(t), !o(e) && null !== e) throw TypeError(e + \": can't set as prototype!\");\n    };\n\n    t.exports = {\n      set: Object.setPrototypeOf || (\"__proto__\" in {} ? function (t, e, o) {\n        try {\n          o = n(8)(Function.call, r(Object.prototype, \"__proto__\").set, 2), o(t, []), e = !(t instanceof Array);\n        } catch (i) {\n          e = !0;\n        }\n\n        return function (t, n) {\n          return u(t, n), e ? t.__proto__ = n : o(t, n), t;\n        };\n      }({}, !1) : void 0),\n      check: u\n    };\n  }, function (e, n) {\n    e.exports = t;\n  }, function (t, n) {\n    t.exports = e;\n  }, function (t, e) {\n    t.exports = n;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    function o(t, e) {\n      return t.indexOf(e) >= 0;\n    }\n\n    function i(t) {\n      return function () {\n        return !t.apply(this, arguments);\n      };\n    }\n\n    function u(t, e, n) {\n      for (var r = {}, o = (0, m[\"default\"])(t), i = 0, u = o.length; u > i; i++) {\n        var c = o[i],\n            s = t[c];\n        n(e, c) && (r[c] = s);\n      }\n\n      return r;\n    }\n\n    function c(t, e) {\n      return u(t, e, o);\n    }\n\n    function s(t, e) {\n      return u(t, e, i(o));\n    }\n\n    function a(t) {\n      if (\"object\" == (\"undefined\" == typeof t ? \"undefined\" : (0, b[\"default\"])(t)) && null !== t) {\n        if (\"function\" == typeof y[\"default\"]) {\n          var e = (0, y[\"default\"])(t);\n          return e === Object.prototype || null === e;\n        }\n\n        return \"[object Object]\" == Object.prototype.toString.call(t);\n      }\n\n      return !1;\n    }\n\n    function f(t, e) {\n      var n, r, o;\n      n = Array.isArray(t) ? [] : {};\n\n      for (o in t) {\n        r = t[o], null != r && (\"object\" === (\"undefined\" == typeof r ? \"undefined\" : (0, b[\"default\"])(r)) && null !== r && \"function\" !== r.type ? n[o] = f(r, e) : \"function\" === r.type ? n[o] = e[r.name] : n[o] = r);\n      }\n\n      return n;\n    }\n\n    function p(t, e) {\n      return \"function\" == typeof t ? t : function (n) {\n        return \"undefined\" != typeof n[t] ? n[t] : n[e];\n      };\n    }\n\n    function l(t, e) {\n      return console.warn(\"Set margin with prefixes is deprecated use an object instead\"), t += \"-\", (0, m[\"default\"])(e).reduce(function (n, r) {\n        return r.substr(0, t.length) === t && (n[r.replace(t, \"\")] = e[r]), n;\n      }, {});\n    }\n\n    function d(t) {\n      return t && \"function\" == typeof t;\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.includes = o, e.negate = i, e.filterObject = u, e.pick = c, e.without = s, e.isPlainObject = a, e.bindFunctions = f, e.getValueFunction = p, e.propsByPrefix = l, e.isCallable = d;\n    var h = n(17),\n        y = r(h),\n        v = n(26),\n        b = r(v),\n        g = n(59),\n        m = r(g);\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(60),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(61), t.exports = n(7).Object.keys;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"keys\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }]);\n});","!function () {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n\n  var d3_arraySlice = [].slice,\n      d3_array = function d3_array(list) {\n    return d3_arraySlice.call(list);\n  };\n\n  var d3_document = this.document;\n\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function d3_array(list) {\n        var i = list.length,\n            array = new Array(i);\n\n        while (i--) {\n          array[i] = list[i];\n        }\n\n        return array;\n      };\n    }\n  }\n\n  if (!Date.now) Date.now = function () {\n    return +new Date();\n  };\n\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype,\n          d3_element_setAttribute = d3_element_prototype.setAttribute,\n          d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,\n          d3_style_prototype = this.CSSStyleDeclaration.prototype,\n          d3_style_setProperty = d3_style_prototype.setProperty;\n\n      d3_element_prototype.setAttribute = function (name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n\n      d3_element_prototype.setAttributeNS = function (space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n\n      d3_style_prototype.setProperty = function (name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n\n  d3.ascending = d3_ascending;\n\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  d3.descending = function (a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n\n  d3.min = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && a > b) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.max = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && b > a) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.extent = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    }\n\n    return [a, c];\n  };\n\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n\n  d3.sum = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = +array[i])) s += a;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n      }\n    }\n\n    return s;\n  };\n\n  d3.mean = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;\n      }\n    }\n\n    if (j) return s / j;\n  };\n\n  d3.quantile = function (values, p) {\n    var H = (values.length - 1) * p + 1,\n        h = Math.floor(H),\n        v = +values[h - 1],\n        e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n\n  d3.median = function (array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n      }\n    }\n\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n\n  d3.variance = function (array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  };\n\n  d3.deviation = function () {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n\n  function d3_bisector(compare) {\n    return {\n      left: function left(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n\n  d3.bisector = function (f) {\n    return d3_bisector(f.length === 1 ? function (d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n\n  d3.shuffle = function (array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n\n    var m = i1 - i0,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n\n    return array;\n  };\n\n  d3.permute = function (array, indexes) {\n    var i = indexes.length,\n        permutes = new Array(i);\n\n    while (i--) {\n      permutes[i] = array[indexes[i]];\n    }\n\n    return permutes;\n  };\n\n  d3.pairs = function (array) {\n    var i = 0,\n        n = array.length - 1,\n        p0,\n        p1 = array[0],\n        pairs = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      pairs[i] = [p0 = p1, p1 = array[++i]];\n    }\n\n    return pairs;\n  };\n\n  d3.transpose = function (matrix) {\n    if (!(n = matrix.length)) return [];\n\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n\n    return transpose;\n  };\n\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n\n  d3.zip = function () {\n    return d3.transpose(arguments);\n  };\n\n  d3.keys = function (map) {\n    var keys = [];\n\n    for (var key in map) {\n      keys.push(key);\n    }\n\n    return keys;\n  };\n\n  d3.values = function (map) {\n    var values = [];\n\n    for (var key in map) {\n      values.push(map[key]);\n    }\n\n    return values;\n  };\n\n  d3.entries = function (map) {\n    var entries = [];\n\n    for (var key in map) {\n      entries.push({\n        key: key,\n        value: map[key]\n      });\n    }\n\n    return entries;\n  };\n\n  d3.merge = function (arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) {\n      j += arrays[i].length;\n    }\n\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  };\n\n  var abs = Math.abs;\n\n  d3.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [],\n        k = d3_range_integerScale(abs(step)),\n        i = -1,\n        j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) {\n      range.push(j / k);\n    } else while ((j = start + step * ++i) < stop) {\n      range.push(j / k);\n    }\n    return range;\n  };\n\n  function d3_range_integerScale(x) {\n    var k = 1;\n\n    while (x * k % 1) {\n      k *= 10;\n    }\n\n    return k;\n  }\n\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n\n  d3.map = function (object, f) {\n    var map = new d3_Map();\n\n    if (object instanceof d3_Map) {\n      object.forEach(function (key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (arguments.length === 1) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f.call(object, o = object[i], i), o);\n      }\n    } else {\n      for (var key in object) {\n        map.set(key, object[key]);\n      }\n    }\n\n    return map;\n  };\n\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n\n  var d3_map_proto = \"__proto__\",\n      d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function get(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function set(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function values() {\n      var values = [];\n\n      for (var key in this._) {\n        values.push(this._[key]);\n      }\n\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n\n      for (var key in this._) {\n        entries.push({\n          key: d3_map_unescape(key),\n          value: this._[key]\n        });\n      }\n\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key), this._[key]);\n      }\n    }\n  });\n\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n\n  function d3_map_keys() {\n    var keys = [];\n\n    for (var key in this._) {\n      keys.push(d3_map_unescape(key));\n    }\n\n    return keys;\n  }\n\n  function d3_map_size() {\n    var size = 0;\n\n    for (var key in this._) {\n      ++size;\n    }\n\n    return size;\n  }\n\n  function d3_map_empty() {\n    for (var key in this._) {\n      return false;\n    }\n\n    return true;\n  }\n\n  d3.nest = function () {\n    var nest = {},\n        keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup;\n\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          object,\n          setter,\n          valuesByKey = new d3_Map(),\n          values;\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [object]);\n        }\n      }\n\n      if (mapType) {\n        object = mapType();\n\n        setter = function setter(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n\n        setter = function setter(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n\n      valuesByKey.forEach(setter);\n      return object;\n    }\n\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [],\n          sortKey = sortKeys[depth++];\n      map.forEach(function (key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function (a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n\n    nest.map = function (array, mapType) {\n      return map(mapType, array, 0);\n    };\n\n    nest.entries = function (array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n\n    nest.key = function (d) {\n      keys.push(d);\n      return nest;\n    };\n\n    nest.sortKeys = function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n\n    nest.sortValues = function (order) {\n      sortValues = order;\n      return nest;\n    };\n\n    nest.rollup = function (f) {\n      rollup = f;\n      return nest;\n    };\n\n    return nest;\n  };\n\n  d3.set = function (array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) {\n      set.add(array[i]);\n    }\n    return set;\n  };\n\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function add(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key));\n      }\n    }\n  });\n  d3.behavior = {};\n\n  function d3_identity(d) {\n    return d;\n  }\n\n  d3.rebind = function (target, source) {\n    var i = 1,\n        n = arguments.length,\n        method;\n\n    while (++i < n) {\n      target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    }\n\n    return target;\n  };\n\n  function d3_rebind(target, source, method) {\n    return function () {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n\n  var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n  function d3_noop() {}\n\n  d3.dispatch = function () {\n    var dispatch = new d3_dispatch(),\n        i = -1,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    return dispatch;\n  };\n\n  function d3_dispatch() {}\n\n  d3_dispatch.prototype.on = function (type, listener) {\n    var i = type.indexOf(\".\"),\n        name = \"\";\n\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n\n  function d3_dispatch_event(dispatch) {\n    var listeners = [],\n        listenerByName = new d3_Map();\n\n    function event() {\n      var z = listeners,\n          i = -1,\n          n = z.length,\n          l;\n\n      while (++i < n) {\n        if (l = z[i].on) l.apply(this, arguments);\n      }\n\n      return dispatch;\n    }\n\n    event.on = function (name, listener) {\n      var l = listenerByName.get(name),\n          i;\n      if (arguments.length < 2) return l && l.on;\n\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n\n    return event;\n  }\n\n  d3.event = null;\n\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n\n  function d3_eventSource() {\n    var e = d3.event,\n        s;\n\n    while (s = e.sourceEvent) {\n      e = s;\n    }\n\n    return e;\n  }\n\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(),\n        i = 0,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    dispatch.of = function (thiz, argumentz) {\n      return function (e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    return dispatch;\n  }\n\n  d3.requote = function (s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    for (var property in prototype) {\n      object[property] = prototype[property];\n    }\n  };\n\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n\n  var d3_select = function d3_select(s, n) {\n    return n.querySelector(s);\n  },\n      d3_selectAll = function d3_selectAll(s, n) {\n    return n.querySelectorAll(s);\n  },\n      _d3_selectMatches = function d3_selectMatches(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\n    _d3_selectMatches = function d3_selectMatches(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n\n    return _d3_selectMatches(n, s);\n  };\n\n  if (typeof Sizzle === \"function\") {\n    d3_select = function d3_select(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n\n    d3_selectAll = Sizzle;\n    _d3_selectMatches = Sizzle.matchesSelector;\n  }\n\n  d3.selection = function () {\n    return d3.select(d3_document.documentElement);\n  };\n\n  var d3_selectionPrototype = d3.selection.prototype = [];\n\n  d3_selectionPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        group,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_select(selector, this);\n    };\n  }\n\n  d3_selectionPrototype.selectAll = function (selector) {\n    var subgroups = [],\n        subgroup,\n        node;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_selectAll(selector, this);\n    };\n  }\n\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function qualify(name) {\n      var i = name.indexOf(\":\"),\n          prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n\n  d3_selectionPrototype.attr = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n\n      for (value in name) {\n        this.each(d3_selection_attr(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_attr(name, value));\n  };\n\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);\n    }\n\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);\n    }\n\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n\n  d3_selectionPrototype.classed = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(),\n            n = (name = d3_selection_classes(name)).length,\n            i = -1;\n\n        if (value = node.classList) {\n          while (++i < n) {\n            if (!value.contains(name[i])) return false;\n          }\n        } else {\n          value = node.getAttribute(\"class\");\n\n          while (++i < n) {\n            if (!d3_selection_classedRe(name[i]).test(value)) return false;\n          }\n        }\n\n        return true;\n      }\n\n      for (value in name) {\n        this.each(d3_selection_classed(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_classed(name, value));\n  };\n\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n\n    function classedConstant() {\n      var i = -1;\n\n      while (++i < n) {\n        name[i](this, value);\n      }\n    }\n\n    function classedFunction() {\n      var i = -1,\n          x = value.apply(this, arguments);\n\n      while (++i < n) {\n        name[i](this, x);\n      }\n    }\n\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function (node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n\n  d3_selectionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.each(d3_selection_style(priority, name[priority], value));\n        }\n\n        return this;\n      }\n\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n\n      priority = \"\";\n    }\n\n    return this.each(d3_selection_style(name, value, priority));\n  };\n\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);\n    }\n\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n\n  d3_selectionPrototype.property = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n\n      for (value in name) {\n        this.each(d3_selection_property(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_property(name, value));\n  };\n\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n\n    function propertyConstant() {\n      this[name] = value;\n    }\n\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name];else this[name] = x;\n    }\n\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n\n  d3_selectionPrototype.text = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.textContent = \"\";\n    } : function () {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n\n  d3_selectionPrototype.html = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.innerHTML = \"\";\n    } : function () {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n\n  d3_selectionPrototype.append = function (name) {\n    name = d3_selection_creator(name);\n    return this.select(function () {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument,\n          namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n\n  d3_selectionPrototype.insert = function (name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function () {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n\n  d3_selectionPrototype.remove = function () {\n    return this.each(d3_selectionRemove);\n  };\n\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  d3_selectionPrototype.data = function (value, key) {\n    var i = -1,\n        n = this.length,\n        group,\n        node;\n\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n\n      return value;\n    }\n\n    function bind(group, groupData) {\n      var i,\n          n = group.length,\n          m = groupData.length,\n          n0 = Math.min(n, m),\n          updateNodes = new Array(m),\n          enterNodes = new Array(m),\n          exitNodes = new Array(n),\n          node,\n          nodeData;\n\n      if (key) {\n        var nodeByKeyValue = new d3_Map(),\n            keyValues = new Array(n),\n            keyValue;\n\n        for (i = -1; ++i < n;) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n\n            keyValues[i] = keyValue;\n          }\n        }\n\n        for (i = -1; ++i < m;) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n\n          nodeByKeyValue.set(keyValue, true);\n        }\n\n        for (i = -1; ++i < n;) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0;) {\n          node = group[i];\n          nodeData = groupData[i];\n\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n\n        for (; i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n\n    var enter = d3_selection_enter([]),\n        update = d3_selection([]),\n        exit = d3_selection([]);\n\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n\n    update.enter = function () {\n      return enter;\n    };\n\n    update.exit = function () {\n      return exit;\n    };\n\n    return update;\n  };\n\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n\n  d3_selectionPrototype.datum = function (value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n\n  d3_selectionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_filter(selector) {\n    return function () {\n      return _d3_selectMatches(this, selector);\n    };\n  }\n\n  d3_selectionPrototype.order = function () {\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  d3_selectionPrototype.sort = function (comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      this[j].sort(comparator);\n    }\n\n    return this.order();\n  };\n\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function (a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n\n  d3_selectionPrototype.each = function (callback) {\n    return d3_selection_each(this, function (node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n\n    return groups;\n  }\n\n  d3_selectionPrototype.call = function (callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n\n  d3_selectionPrototype.empty = function () {\n    return !this.node();\n  };\n\n  d3_selectionPrototype.node = function () {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  };\n\n  d3_selectionPrototype.size = function () {\n    var n = 0;\n    d3_selection_each(this, function () {\n      ++n;\n    });\n    return n;\n  };\n\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\n  d3_selection_enterPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        upgroup,\n        group,\n        node;\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  d3_selection_enterPrototype.insert = function (name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function (d, i, j) {\n      var group = enter[j].update,\n          n = group.length,\n          node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n\n      while (!(node = group[i0]) && ++i0 < n) {\n        ;\n      }\n\n      return node;\n    };\n  }\n\n  d3.select = function (node) {\n    var group;\n\n    if (typeof node === \"string\") {\n      group = [d3_select(node, d3_document)];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [node];\n      group.parentNode = d3_documentElement(node);\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3.selectAll = function (nodes) {\n    var group;\n\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3_selectionPrototype.on = function (type, listener, capture) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n\n        for (capture in type) {\n          this.each(d3_selection_on(capture, type[capture], listener));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type,\n        i = type.indexOf(\".\"),\n        wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n\n    function onRemove() {\n      var l = this[name];\n\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\n          match;\n\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function (k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n\n  function d3_selection_onListener(listener, argumentz) {\n    return function (e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function (e) {\n      var target = this,\n          related = e.relatedTarget;\n\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n\n  var d3_event_dragSelect,\n      d3_event_dragId = 0;\n\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId,\n        click = \"click\" + name,\n        w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style,\n          select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n\n    return function (suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\n      if (suppressClick) {\n        var off = function off() {\n          w.on(click, null);\n        };\n\n        w.on(click, function () {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n\n  d3.mouse = function (container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = container.getBoundingClientRect();\n    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n  }\n\n  d3.touch = function (container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n\n  d3.behavior.drag = function () {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\n        origin = null,\n        mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"),\n        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n\n    function dragstart(id, position, subject, move, end) {\n      return function () {\n        var that = this,\n            target = d3.event.target.correspondingElement || d3.event.target,\n            parent = that.parentNode,\n            dispatch = event.of(that, arguments),\n            dragged = 0,\n            dragId = id(),\n            dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\n            dragOffset,\n            dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended),\n            dragRestore = d3_event_dragSuppress(target),\n            position0 = position(parent, dragId);\n\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\n        } else {\n          dragOffset = [0, 0];\n        }\n\n        dispatch({\n          type: \"dragstart\"\n        });\n\n        function moved() {\n          var position1 = position(parent, dragId),\n              dx,\n              dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n\n    drag.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n\n    return d3.rebind(drag, event, \"on\");\n  };\n\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n\n  d3.touches = function (container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function (touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n\n  var ε = 1e-6,\n      ε2 = ε * ε,\n      π = Math.PI,\n      τ = 2 * π,\n      τε = τ - ε,\n      halfπ = π / 2,\n      d3_radians = π / 180,\n      d3_degrees = 180 / π;\n\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n\n  var ρ = Math.SQRT2,\n      ρ2 = 2,\n      ρ4 = 4;\n\n  d3.interpolateZoom = function (p0, p1) {\n    var ux0 = p0[0],\n        uy0 = p0[1],\n        w0 = p0[2],\n        ux1 = p1[0],\n        uy1 = p1[1],\n        w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n\n      i = function i(t) {\n        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];\n      };\n    } else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = d3_cosh(r0),\n            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n      };\n    }\n\n    i.duration = S * 1e3;\n    return i;\n  };\n\n  d3.behavior.zoom = function () {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    },\n        translate0,\n        center0,\n        center,\n        size = [960, 500],\n        scaleExtent = d3_behavior_zoomInfinity,\n        duration = 250,\n        zooming = 0,\n        mousedown = \"mousedown.zoom\",\n        mousemove = \"mousemove.zoom\",\n        mouseup = \"mouseup.zoom\",\n        mousewheelTimer,\n        touchstart = \"touchstart.zoom\",\n        touchtime,\n        event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\n        x0,\n        x1,\n        y0,\n        y1;\n\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n\n    zoom.event = function (g) {\n      g.each(function () {\n        var dispatch = event.of(this, arguments),\n            view1 = view;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function () {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function () {\n            var dx = size[0],\n                dy = size[1],\n                cx = center0 ? center0[0] : dx / 2,\n                cy = center0 ? center0[1] : dy / 2,\n                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n            return function (t) {\n              var l = i(t),\n                  k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function () {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function () {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n\n    zoom.translate = function (_) {\n      if (!arguments.length) return [view.x, view.y];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scale = function (_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n\n    zoom.scaleExtent = function (_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.center = function (_) {\n      if (!arguments.length) return center;\n      center = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.size = function (_) {\n      if (!arguments.length) return size;\n      size = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n\n    zoom.x = function (z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    zoom.y = function (z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    function location(p) {\n      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n    }\n\n    function point(l) {\n      return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n    }\n\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function (x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function (y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [view.x, view.y]\n      });\n    }\n\n    function zoomended(dispatch) {\n      if (! --zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n\n    function mousedowned() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          dragged = 0,\n          subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended),\n          location0 = location(d3.mouse(that)),\n          dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n\n    function touchstarted() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          locations0 = {},\n          distance0 = 0,\n          scale0,\n          zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier,\n          touchmove = \"touchmove\" + zoomName,\n          touchend = \"touchend\" + zoomName,\n          targets = [],\n          subject = d3.select(that),\n          dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function (t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n\n        var touches = relocate(),\n            now = Date.now();\n\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0],\n              q = touches[1],\n              dx = p[0] - q[0],\n              dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n\n      function moved() {\n        var touches = d3.touches(that),\n            p0,\n            l0,\n            p1,\n            l1;\n        d3_selection_interrupt.call(that);\n\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,\n              scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n          scaleTo(scale1 * scale0);\n        }\n\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function () {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n\n    function dblclicked() {\n      var p = d3.mouse(this),\n          k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n\n    return d3.rebind(zoom, event, \"on\");\n  };\n\n  var d3_behavior_zoomInfinity = [0, Infinity],\n      d3_behavior_zoomDelta,\n      d3_behavior_zoomWheel;\n  d3.color = d3_color;\n\n  function d3_color() {}\n\n  d3_color.prototype.toString = function () {\n    return this.rgb() + \"\";\n  };\n\n  d3.hsl = d3_hsl;\n\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\n  d3_hslPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n\n  d3_hslPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n\n  d3_hslPrototype.rgb = function () {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n\n    function v(h) {\n      if (h > 360) h -= 360;else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n\n  d3.hcl = d3_hcl;\n\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\n  d3_hclPrototype.brighter = function (k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.darker = function (k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.rgb = function () {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n\n  d3.lab = d3_lab;\n\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047,\n      d3_lab_Y = 1,\n      d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\n  d3_labPrototype.brighter = function (k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.darker = function (k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.rgb = function () {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116,\n        x = y + a / 500,\n        z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n\n  d3.rgb = d3_rgb;\n\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\n  d3_rgbPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r,\n        g = this.g,\n        b = this.b,\n        i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n\n  d3_rgbPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n\n  d3_rgbPrototype.hsl = function () {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n\n  d3_rgbPrototype.toString = function () {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0,\n        g = 0,\n        b = 0,\n        m1,\n        m2,\n        color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\n    if (m1) {\n      m2 = m1[2].split(\",\");\n\n      switch (m1[1]) {\n        case \"hsl\":\n          {\n            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n          }\n\n        case \"rgb\":\n          {\n            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n          }\n      }\n    }\n\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n\n    return rgb(r, g, b);\n  }\n\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255),\n        max = Math.max(r, g, b),\n        d = max - min,\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new d3_hsl(h, s, l);\n  }\n\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function (key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n\n  function d3_xhrType(response) {\n    return function (url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {},\n        dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        headers = {},\n        request = new XMLHttpRequest(),\n        responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n      request.readyState > 3 && respond();\n    };\n\n    function respond() {\n      var status = request.status,\n          result;\n\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n\n    request.onprogress = function (event) {\n      var o = d3.event;\n      d3.event = event;\n\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n\n    xhr.header = function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name];else headers[name] = value + \"\";\n      return xhr;\n    };\n\n    xhr.mimeType = function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n\n    xhr.responseType = function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n\n    xhr.response = function (value) {\n      response = value;\n      return xhr;\n    };\n\n    [\"get\", \"post\"].forEach(function (method) {\n      xhr[method] = function () {\n        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n      };\n    });\n\n    xhr.send = function (method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) {\n        request.setRequestHeader(name, headers[name]);\n      }\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n\n    xhr.abort = function () {\n      request.abort();\n      return xhr;\n    };\n\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function (error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n\n  d3.dsv = function (delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\n      xhr.row = function (_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n\n      return xhr;\n    }\n\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n\n    function typedResponse(f) {\n      return function (request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n\n    dsv.parse = function (text, f) {\n      var o;\n      return dsv.parseRows(text, function (row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function (row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n\n    dsv.parseRows = function (text, f) {\n      var EOL = {},\n          EOF = {},\n          rows = [],\n          N = text.length,\n          I = 0,\n          n = 0,\n          t,\n          eol;\n\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n\n        while (I < N) {\n          var c = text.charCodeAt(I++),\n              k = 1;\n          if (c === 10) eol = true;else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    };\n\n    dsv.format = function (rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(),\n          fields = [];\n      rows.forEach(function (row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n        return fields.map(function (field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    dsv.formatRows = function (rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n\n    return dsv;\n  };\n\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\n  var d3_timer_queueHead,\n      d3_timer_queueTail,\n      d3_timer_interval,\n      d3_timer_timeout,\n      d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function (callback) {\n    setTimeout(callback, 17);\n  };\n\n  d3.timer = function () {\n    d3_timer.apply(this, arguments);\n  };\n\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay,\n        timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n\n    return timer;\n  }\n\n  function d3_timer_step() {\n    var now = d3_timer_mark(),\n        delay = d3_timer_sweep() - now;\n\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n\n  d3.timer.flush = function () {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n\n  function d3_timer_mark() {\n    var now = Date.now(),\n        timer = d3_timer_queueHead;\n\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n\n    return now;\n  }\n\n  function d3_timer_sweep() {\n    var t0,\n        t1 = d3_timer_queueHead,\n        time = Infinity;\n\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n\n    d3_timer_queueTail = t0;\n    return time;\n  }\n\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n\n  d3.round = function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n\n  var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n\n  d3.formatPrefix = function (value, precision) {\n    var i = 0;\n\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n\n    return d3_formatPrefixes[8 + i / 3];\n  };\n\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function (d) {\n        return d / k;\n      } : function (d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal,\n        locale_thousands = locale.thousands,\n        locale_grouping = locale.grouping,\n        locale_currency = locale.currency,\n        formatGroup = locale_grouping && locale_thousands ? function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = locale_grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function (specifier) {\n      var match = d3_format_re.exec(specifier),\n          fill = match[1] || \" \",\n          align = match[2] || \">\",\n          sign = match[3] || \"-\",\n          symbol = match[4] || \"\",\n          zfill = match[5],\n          width = +match[6],\n          comma = match[7],\n          precision = match[8],\n          type = match[9],\n          scale = 1,\n          prefix = \"\",\n          suffix = \"\",\n          integer = false,\n          exponent = true;\n      if (precision) precision = +precision.substring(1);\n\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n\n      switch (type) {\n        case \"n\":\n          comma = true;\n          type = \"g\";\n          break;\n\n        case \"%\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"f\";\n          break;\n\n        case \"p\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"r\";\n          break;\n\n        case \"b\":\n        case \"o\":\n        case \"x\":\n        case \"X\":\n          if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n        case \"c\":\n          exponent = false;\n\n        case \"d\":\n          integer = true;\n          precision = 0;\n          break;\n\n        case \"s\":\n          scale = -1;\n          type = \"r\";\n          break;\n      }\n\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision));else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function (value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"),\n            before,\n            after;\n\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\";else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\n            padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function b(x) {\n      return x.toString(2);\n    },\n    c: function c(x) {\n      return String.fromCharCode(x);\n    },\n    o: function o(x) {\n      return x.toString(8);\n    },\n    x: function x(_x) {\n      return _x.toString(16);\n    },\n    X: function X(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function g(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function e(x, p) {\n      return x.toExponential(p);\n    },\n    f: function f(x, p) {\n      return x.toFixed(p);\n    },\n    r: function r(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n\n  var d3_time = d3.time = {},\n      d3_date = Date;\n\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n\n  d3_date_utc.prototype = {\n    getDate: function getDate() {\n      return this._.getUTCDate();\n    },\n    getDay: function getDay() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function getFullYear() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function getHours() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function getMilliseconds() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function getMinutes() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function getMonth() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function getSeconds() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function getTime() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function getTimezoneOffset() {\n      return 0;\n    },\n    valueOf: function valueOf() {\n      return this._.valueOf();\n    },\n    setDate: function setDate() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function setDay() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function setFullYear() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function setHours() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function setMilliseconds() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function setMinutes() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function setMonth() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function setSeconds() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function setTime() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date),\n          d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n\n    function range(t0, t1, dt) {\n      var time = ceil(t0),\n          times = [];\n\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) {\n          times.push(new Date(+time)), step(time, 1);\n        }\n      }\n\n      return times;\n    }\n\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n\n  function d3_time_interval_utc(method) {\n    return function (date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n\n  d3_time.year = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function (date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function (date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function (date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function (date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n\n  d3_time.dayOfYear = function (date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n\n  [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function (date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function (date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n\n    d3_time[day + \"OfYear\"] = function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_days = locale.days,\n        locale_shortDays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    function d3_time_format(template) {\n      var n = template.length;\n\n      function format(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            c,\n            p,\n            f;\n\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n\n      format.parse = function (string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        },\n            i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc,\n            date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j);else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n\n      format.toString = function () {\n        return template;\n      };\n\n      return format;\n    }\n\n    function d3_time_parse(date, template, string, j) {\n      var c,\n          p,\n          t,\n          i = 0,\n          n = template.length,\n          m = string.length;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    d3_time_format.utc = function (template) {\n      var local = d3_time_format(template);\n\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n\n      format.parse = function (string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n\n      format.toString = local.toString;\n      return format;\n    };\n\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(),\n        d3_time_dayRe = d3_time_formatRe(locale_days),\n        d3_time_dayLookup = d3_time_formatLookup(locale_days),\n        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\n        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\n        d3_time_monthRe = d3_time_formatRe(locale_months),\n        d3_time_monthLookup = d3_time_formatLookup(locale_months),\n        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\n        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function (p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function a(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function A(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function b(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function B(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function d(_d, p) {\n        return d3_time_formatPad(_d.getDate(), p, 2);\n      },\n      e: function e(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function H(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function I(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function j(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function L(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function m(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function M(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function p(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function S(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function U(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function w(d) {\n        return d.getDay();\n      },\n      W: function W(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function Y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function _() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n\n    return d3_time_format;\n  }\n\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  },\n      d3_time_numberRe = /^\\s*\\d+/,\n      d3_time_percentRe = /^%/;\n\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map.set(names[i].toLowerCase(), i);\n    }\n\n    return map;\n  }\n\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;\n  }\n\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(),\n        zs = z > 0 ? \"-\" : \"+\",\n        zh = abs(z) / 60 | 0,\n        zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function d3_time_formatMulti(formats) {\n    var n = formats.length,\n        i = -1;\n\n    while (++i < n) {\n      formats[i][0] = this(formats[i][0]);\n    }\n\n    return function (date) {\n      var i = 0,\n          f = formats[i];\n\n      while (!f[1](date)) {\n        f = formats[++i];\n      }\n\n      return f[0](date);\n    };\n  }\n\n  d3.locale = function (locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n\n  function d3_adder() {}\n\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function add(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;\n    },\n    reset: function reset() {\n      this.s = this.t = 0;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n\n  d3.geo.stream = function (object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n\n  var d3_geo_streamObjectType = {\n    Feature: function Feature(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function FeatureCollection(object, listener) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(features[i].geometry, listener);\n      }\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function Sphere(object, listener) {\n      listener.sphere();\n    },\n    Point: function Point(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], listener.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function MultiLineString(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamLine(coordinates[i], listener, 0);\n      }\n    },\n    Polygon: function Polygon(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function MultiPolygon(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamPolygon(coordinates[i], listener);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, listener) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(geometries[i], listener);\n      }\n    }\n  };\n\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    listener.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    listener.lineEnd();\n  }\n\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1,\n        n = coordinates.length;\n    listener.polygonStart();\n\n    while (++i < n) {\n      d3_geo_streamLine(coordinates[i], listener, 1);\n    }\n\n    listener.polygonEnd();\n  }\n\n  d3.geo.area = function (object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n\n  var d3_geo_areaSum,\n      d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function sphere() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n\n    d3_geo_area.point = function (λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0,\n          sdλ = dλ >= 0 ? 1 : -1,\n          adλ = sdλ * dλ,\n          cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          k = sinφ0 * sinφ,\n          u = cosφ0 * cosφ + k * Math.cos(adλ),\n          v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n\n    d3_geo_area.lineEnd = function () {\n      nextPoint(λ00, φ00);\n    };\n  }\n\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0],\n        φ = spherical[1],\n        cosφ = Math.cos(φ);\n    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n  }\n\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function d3_geo_cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n\n  function d3_geo_cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n\n  function d3_geo_spherical(cartesian) {\n    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n  }\n\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n\n  d3.geo.bounds = function () {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n\n    function point(λ, φ) {\n      ranges.push(range = [λ0 = λ, λ1 = λ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p),\n            equatorial = [normal[1], -normal[0], 0],\n            inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_,\n            s = dλ > 0 ? 1 : -1,\n            λi = inflection[0] * d3_degrees * s,\n            antimeridian = abs(dλ) > 180;\n\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n\n      p0 = p, λ_ = λ;\n    }\n\n    function lineStart() {\n      bound.point = linePoint;\n    }\n\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n\n    return function (feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n\n      if (n) {\n        ranges.sort(compareRanges);\n\n        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n          b = ranges[i];\n\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n\n        var best = -Infinity,\n            dλ;\n\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n    };\n  }();\n\n  d3.geo.centroid = function (object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2,\n        y = d3_geo_centroidY2,\n        z = d3_geo_centroidZ2,\n        m = x * x + y * y + z * z;\n\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [NaN, NaN];\n    }\n\n    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n  };\n\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    d3_geo_centroid.lineEnd = function () {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          cx = y0 * z - z0 * y,\n          cy = z0 * x - x0 * z,\n          cz = x0 * y - y0 * x,\n          m = Math.sqrt(cx * cx + cy * cy + cz * cz),\n          u = x0 * x + y0 * y + z0 * z,\n          v = m && -d3_acos(u) / m,\n          w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function d3_true() {\n    return true;\n  }\n\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [],\n        clip = [];\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n];\n\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n\n        for (var i = 0; i < n; ++i) {\n          listener.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        listener.lineEnd();\n        return;\n      }\n\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\n          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      listener.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (var i = points.length - 1; i >= 0; --i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      listener.lineEnd();\n    }\n  }\n\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function (rotate, listener) {\n      var line = clipLine(listener),\n          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      var segments;\n      var buffer = d3_geo_clipBufferListener(),\n          ringListener = clipLine(buffer),\n          polygonStarted = false,\n          polygon,\n          ring;\n\n      function pointRing(λ, φ) {\n        ring.push([λ, φ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(),\n            ringSegments = buffer.buffer(),\n            segment,\n            n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1,\n              i = -1,\n              point;\n\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n\n            while (++i < n) {\n              listener.point((point = segment[i])[0], point[1]);\n            }\n\n            listener.lineEnd();\n          }\n\n          return;\n        }\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n\n      return clip;\n    };\n  }\n\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n\n  function d3_geo_clipBufferListener() {\n    var lines = [],\n        line;\n    return {\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      point: function point(λ, φ) {\n        line.push([λ, φ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function buffer() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN,\n        φ0 = NaN,\n        sλ0 = NaN,\n        _clean;\n\n    return {\n      lineStart: function lineStart() {\n        listener.lineStart();\n        _clean = 1;\n      },\n      point: function point(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π,\n            dλ = abs(λ1 - λ0);\n\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          _clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          _clean = 0;\n        }\n\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function lineEnd() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean;\n      }\n    };\n  }\n\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0,\n        cosφ1,\n        sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0],\n        parallel = point[1],\n        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\n        polarAngle = 0,\n        winding = 0;\n    d3_geo_areaRingSum.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i],\n          m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0],\n          λ0 = point0[0],\n          φ0 = point0[1] / 2 + π / 4,\n          sinφ0 = Math.sin(φ0),\n          cosφ0 = Math.cos(φ0),\n          j = 1;\n\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0],\n            φ = point[1] / 2 + π / 4,\n            sinφ = Math.sin(φ),\n            cosφ = Math.cos(φ),\n            dλ = λ - λ0,\n            sdλ = dλ >= 0 ? 1 : -1,\n            adλ = sdλ * dλ,\n            antimeridian = adλ > π,\n            k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > ε,\n        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n\n    function clipLine(listener) {\n      var point0, c0, v0, v00, _clean2;\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(λ, φ) {\n          var point1 = [λ, φ],\n              point2,\n              v = visible(λ, φ),\n              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a),\n          pb = d3_geo_cartesian(b);\n      var n1 = [1, 0, 0],\n          n2 = d3_geo_cartesianCross(pa, pb),\n          n2n2 = d3_geo_cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = d3_geo_cartesianCross(n1, n2),\n          A = d3_geo_cartesianScale(n1, c1),\n          B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2,\n          w = d3_geo_cartesianDot(A, u),\n          uu = d3_geo_cartesianDot(u, u),\n          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2),\n          q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0],\n          λ1 = b[0],\n          φ0 = a[1],\n          φ1 = b[1],\n          z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0,\n          polar = abs(δλ - π) < ε,\n          meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [q, d3_geo_spherical(q1)];\n      }\n    }\n\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius,\n          code = 0;\n      if (λ < -r) code |= 1;else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4;else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function (line) {\n      var a = line.a,\n          b = line.b,\n          ax = a.x,\n          ay = a.y,\n          bx = b.x,\n          by = b.y,\n          t0 = 0,\n          t1 = 1,\n          dx = bx - ax,\n          dy = by - ay,\n          r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n\n  var d3_geo_clipExtentMAX = 1e9;\n\n  d3.geo.clipExtent = function () {\n    var x0,\n        y0,\n        x1,\n        y1,\n        _stream,\n        clip,\n        clipExtent = {\n      stream: function stream(output) {\n        if (_stream) _stream.valid = false;\n        _stream = clip(output);\n        _stream.valid = true;\n        return _stream;\n      },\n      extent: function extent(_) {\n        if (!arguments.length) return [[x0, y0], [x1, y1]];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (_stream) _stream.valid = false, _stream = null;\n        return clipExtent;\n      }\n    };\n\n    return clipExtent.extent([[0, 0], [960, 500]]);\n  };\n\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function (listener) {\n      var listener_ = listener,\n          bufferListener = d3_geo_clipBufferListener(),\n          clipLine = d3_geom_clipLine(x0, y0, x1, y1),\n          segments,\n          polygon,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function polygonEnd() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([x0, y1]),\n              inside = clean && clipStartInside,\n              visible = segments.length;\n\n          if (inside || visible) {\n            listener.polygonStart();\n\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n\n            listener.polygonEnd();\n          }\n\n          segments = polygon = ring = null;\n        }\n      };\n\n      function insidePolygon(p) {\n        var wn = 0,\n            n = polygon.length,\n            y = p[1];\n\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n\n            a = b;\n          }\n        }\n\n        return wn !== 0;\n      }\n\n      function interpolate(from, to, direction, listener) {\n        var a = 0,\n            a1 = 0;\n\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n\n      var x__, y__, v__, x_, y_, v_, first, clean;\n\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y);else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clip;\n    };\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n\n    function comparePoints(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0,\n        φ1 = π / 3,\n        m = d3_geo_projectionMutator(projectAt),\n        p = m(φ0, φ1);\n\n    p.parallels = function (_) {\n      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n\n    return p;\n  }\n\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0),\n        n = (sinφ0 + Math.sin(φ1)) / 2,\n        C = 1 + sinφ0 * (2 * n - sinφ0),\n        ρ0 = Math.sqrt(C) / n;\n\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = ρ0 - y;\n      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEqualArea = function () {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n\n  d3.geo.albers = function () {\n    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n  };\n\n  d3.geo.albersUsa = function () {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n\n    var _point,\n        pointStream = {\n      point: function point(x, y) {\n        _point = [x, y];\n      }\n    },\n        lower48Point,\n        alaskaPoint,\n        hawaiiPoint;\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      _point = null;\n      (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);\n      return _point;\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      var lower48Stream = lower48.stream(stream),\n          alaskaStream = alaska.stream(stream),\n          hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function point(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function sphere() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function lineStart() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function lineEnd() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function polygonStart() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function polygonEnd() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  };\n\n  var d3_geo_pathAreaSum,\n      d3_geo_pathAreaPolygon,\n      d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathArea.point = function (x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n\n    d3_geo_pathArea.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5),\n        buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function result() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n\n    d3_geo_pathCentroid.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  function d3_geo_pathContext(context) {\n    var _pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        _pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n\n    function point(x, y) {\n      context.moveTo(x + _pointRadius, y);\n      context.arc(x, y, _pointRadius, 0, τ);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function d3_geo_resample(project) {\n    var δ2 = .5,\n        cosMinDistance = Math.cos(30 * d3_radians),\n        maxDepth = 16;\n\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function (x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([λ, φ]),\n            p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resample;\n    }\n\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = Math.sqrt(a * a + b * b + c * c),\n            φ2 = Math.asin(c /= m),\n            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\n            p = project(λ2, φ2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    resample.precision = function (_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n\n    return resample;\n  }\n\n  d3.geo.path = function () {\n    var pointRadius = 4.5,\n        projection,\n        context,\n        projectStream,\n        contextStream,\n        cacheStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n\n    path.centroid = function (object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n    };\n\n    path.bounds = function (object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n    };\n\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function (x, y) {\n      return project([x * d3_degrees, y * d3_degrees]);\n    });\n    return function (stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n\n  d3.geo.transform = function (methods) {\n    return {\n      stream: function stream(_stream2) {\n        var transform = new d3_geo_transform(_stream2);\n\n        for (var k in methods) {\n          transform[k] = methods[k];\n        }\n\n        return transform;\n      }\n    };\n  };\n\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n\n  d3_geo_transform.prototype = {\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function sphere() {\n        stream.sphere();\n      },\n      lineStart: function lineStart() {\n        stream.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n      }\n    };\n  }\n\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function d3_geo_projectionMutator(projectAt) {\n    var project,\n        rotate,\n        projectRotate,\n        projectResample = d3_geo_resample(function (x, y) {\n      x = project(x, y);\n      return [x[0] * k + δx, δy - x[1] * k];\n    }),\n        k = 150,\n        x = 480,\n        y = 250,\n        λ = 0,\n        φ = 0,\n        δλ = 0,\n        δφ = 0,\n        δγ = 0,\n        δx,\n        δy,\n        preclip = d3_geo_clipAntimeridian,\n        postclip = d3_identity,\n        clipAngle = null,\n        clipExtent = null,\n        stream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [point[0] * k + δx, δy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n    }\n\n    projection.stream = function (output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n\n    projection.clipAngle = function (_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n\n    projection.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n\n    projection.scale = function (_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n\n    projection.translate = function (_) {\n      if (!arguments.length) return [x, y];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n\n    projection.center = function (_) {\n      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n\n    projection.rotate = function (_) {\n      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n\n    d3.rebind(projection, projectResample, \"precision\");\n\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function (x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n\n  function d3_geo_equirectangular(λ, φ) {\n    return [λ, φ];\n  }\n\n  (d3.geo.equirectangular = function () {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\n  d3.geo.rotation = function (rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n\n    return forward;\n  };\n\n  function d3_geo_identityRotation(λ, φ) {\n    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n  }\n\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n\n  function d3_geo_forwardRotationλ(δλ) {\n    return function (λ, φ) {\n      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    };\n  }\n\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ),\n        sinδφ = Math.sin(δφ),\n        cosδγ = Math.cos(δγ),\n        sinδγ = Math.sin(δγ);\n\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδφ + x * sinδφ;\n      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n    }\n\n    rotation.invert = function (λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδγ - y * sinδγ;\n      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n    };\n\n    return rotation;\n  }\n\n  d3.geo.circle = function () {\n    var origin = [0, 0],\n        angle,\n        precision = 6,\n        interpolate;\n\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\n          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\n          ring = [];\n      interpolate(null, null, 1, {\n        point: function point(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n    }\n\n    circle.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n\n    circle.angle = function (x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n\n    circle.precision = function (_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n\n    return circle.angle(90);\n  };\n\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius),\n        sr = Math.sin(radius);\n    return function (from, to, direction, listener) {\n      var step = direction * precision;\n\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n      }\n    };\n  }\n\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n\n  d3.geo.distance = function (a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians,\n        φ0 = a[1] * d3_radians,\n        φ1 = b[1] * d3_radians,\n        sinΔλ = Math.sin(Δλ),\n        cosΔλ = Math.cos(Δλ),\n        sinφ0 = Math.sin(φ0),\n        cosφ0 = Math.cos(φ0),\n        sinφ1 = Math.sin(φ1),\n        cosφ1 = Math.cos(φ1),\n        t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n\n  d3.geo.graticule = function () {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n\n    graticule.majorExtent = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.minorExtent = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n\n    graticule.majorStep = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.minorStep = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n  };\n\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_source(d) {\n    return d.source;\n  }\n\n  function d3_target(d) {\n    return d.target;\n  }\n\n  d3.geo.greatArc = function () {\n    var source = d3_source,\n        source_,\n        target = d3_target,\n        target_;\n\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n      };\n    }\n\n    greatArc.distance = function () {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n\n    greatArc.source = function (_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.target = function (_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.precision = function () {\n      return arguments.length ? greatArc : 0;\n    };\n\n    return greatArc;\n  };\n\n  d3.geo.interpolate = function (source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0),\n        sy0 = Math.sin(y0),\n        cy1 = Math.cos(y1),\n        sy1 = Math.sin(y1),\n        kx0 = cy0 * Math.cos(x0),\n        ky0 = cy0 * Math.sin(x0),\n        kx1 = cy1 * Math.cos(x1),\n        ky1 = cy1 * Math.sin(x1),\n        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),\n        k = 1 / Math.sin(d);\n    var interpolate = d ? function (t) {\n      var B = Math.sin(t *= d) * k,\n          A = Math.sin(d - t) * k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n    } : function () {\n      return [x0 * d3_degrees, y0 * d3_degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  d3.geo.length = function (object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n\n    d3_geo_length.point = function (λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n\n    d3_geo_length.lineEnd = function () {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians),\n          cosφ = Math.cos(φ),\n          t = abs((λ *= d3_radians) - λ0),\n          cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ),\n          cosφ = Math.cos(φ),\n          k = scale(cosλ * cosφ);\n      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n    }\n\n    azimuthal.invert = function (x, y) {\n      var ρ = Math.sqrt(x * x + y * y),\n          c = angle(ρ),\n          sinc = Math.sin(c),\n          cosc = Math.cos(c);\n      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n    };\n\n    return azimuthal;\n  }\n\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function (ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function () {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function () {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        t = function t(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    },\n        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),\n        F = cosφ0 * Math.pow(t(φ0), n) / n;\n\n    if (!n) return d3_geo_mercator;\n\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n\n      var ρ = F / Math.pow(t(φ), n);\n      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = F - y,\n          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicConformal = function () {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),\n        G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = G - y;\n      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEquidistant = function () {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function () {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n\n  function d3_geo_mercator(λ, φ) {\n    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n  }\n\n  d3_geo_mercator.invert = function (x, y) {\n    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n  };\n\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function () {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.translate = function () {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.clipExtent = function (_) {\n      var v = clipExtent.apply(m, arguments);\n\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(),\n              t = translate();\n          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n\n      return v;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  (d3.geo.mercator = function () {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function () {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function () {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function (ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function () {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n\n  function d3_geo_transverseMercator(λ, φ) {\n    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n  }\n\n  d3_geo_transverseMercator.invert = function (x, y) {\n    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n  };\n\n  (d3.geo.transverseMercator = function () {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),\n        center = projection.center,\n        rotate = projection.rotate;\n\n    projection.center = function (_) {\n      return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    projection.rotate = function (_) {\n      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n\n  d3.geom.hull = function (vertices) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x),\n          fy = d3_functor(y),\n          i,\n          n = data.length,\n          points = [],\n          flippedPoints = [];\n\n      for (i = 0; i < n; i++) {\n        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n      }\n\n      points.sort(d3_geom_hullOrder);\n\n      for (i = 0; i < n; i++) {\n        flippedPoints.push([points[i][0], -points[i][1]]);\n      }\n\n      var upper = d3_geom_hullUpper(points),\n          lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0],\n          skipRight = lower[lower.length - 1] === upper[upper.length - 1],\n          polygon = [];\n\n      for (i = upper.length - 1; i >= 0; --i) {\n        polygon.push(data[points[upper[i]][2]]);\n      }\n\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) {\n        polygon.push(data[points[lower[i]][2]]);\n      }\n\n      return polygon;\n    }\n\n    hull.x = function (_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n\n    hull.y = function (_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n\n    return hull;\n  };\n\n  function d3_geom_hullUpper(points) {\n    var n = points.length,\n        hull = [0, 1],\n        hs = 2;\n\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {\n        --hs;\n      }\n\n      hull[hs++] = i;\n    }\n\n    return hull.slice(0, hs);\n  }\n\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  d3.geom.polygon = function (coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\n  d3_geom_polygonPrototype.area = function () {\n    var i = -1,\n        n = this.length,\n        a,\n        b = this[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area * .5;\n  };\n\n  d3_geom_polygonPrototype.centroid = function (k) {\n    var i = -1,\n        n = this.length,\n        x = 0,\n        y = 0,\n        a,\n        b = this[n - 1],\n        c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return [x * k, y * k];\n  };\n\n  d3_geom_polygonPrototype.clip = function (subject) {\n    var input,\n        closed = d3_geom_polygonClosed(subject),\n        i = -1,\n        n = this.length - d3_geom_polygonClosed(this),\n        j,\n        m,\n        a = this[n - 1],\n        b,\n        c,\n        d;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  };\n\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  }\n\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n\n  var d3_geom_voronoiEdges,\n      d3_geom_voronoiCells,\n      d3_geom_voronoiBeaches,\n      d3_geom_voronoiBeachPool = [],\n      d3_geom_voronoiFirstCircle,\n      d3_geom_voronoiCircles,\n      d3_geom_voronoiCirclePool = [];\n\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = {\n      x: x,\n      y: y\n    },\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length,\n        iArc;\n\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x,\n        directrix = site.y,\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = d3_geom_voronoiBeaches._;\n\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L;else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site,\n        ax = lSite.x,\n        ay = lSite.y,\n        bx = site.x - ax,\n        by = site.y - ay,\n        rSite = rArc.site,\n        cx = rSite.x - ax,\n        cy = rSite.y - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site.x,\n        rfocy = site.y,\n        pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x,\n        lfocy = site.y,\n        plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n\n  d3_geom_voronoiCell.prototype.prepare = function () {\n    var halfEdges = this.edges,\n        iHalfEdge = halfEdges.length,\n        edge;\n\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        x2,\n        y2,\n        x3,\n        y3,\n        cells = d3_geom_voronoiCells,\n        iCell = cells.length,\n        cell,\n        iHalfEdge,\n        halfEdges,\n        nHalfEdges,\n        start,\n        end;\n\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x,\n        by = cSite.y,\n        ax = lSite.x - bx,\n        ay = lSite.y - by,\n        cx = rSite.x - bx,\n        cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d,\n        cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null,\n        node = d3_geom_voronoiCircles._;\n\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L;else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R;else {\n          before = node;\n          break;\n        }\n      }\n    }\n\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges,\n        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),\n        i = edges.length,\n        e;\n\n    while (i--) {\n      e = edges[i];\n\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a,\n        x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        lSite = edge.l,\n        rSite = edge.r,\n        lx = lSite.x,\n        ly = lSite.y,\n        rx = rSite.x,\n        ry = rSite.y,\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        };else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        };else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          };else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          };else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a,\n        vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function start() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function end() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function insert(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n\n        if (after.R) {\n          after = after.R;\n\n          while (after.L) {\n            after = after.L;\n          }\n\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n\n      while (parent && parent.C) {\n        grandpa = parent.U;\n\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n\n        parent = after.U;\n      }\n\n      this._.C = false;\n    },\n    remove: function remove(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n\n      do {\n        if (node === this._) break;\n\n        if (node === parent.L) {\n          sibling = parent.R;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) {\n      node = node.L;\n    }\n\n    return node;\n  }\n\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),\n        x0,\n        y0,\n        circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n\n  d3.geom.voronoi = function (points) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        fx = x,\n        fy = y,\n        clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n\n    function voronoi(data) {\n      var polygons = new Array(data.length),\n          x0 = clipExtent[0][0],\n          y0 = clipExtent[0][1],\n          x1 = clipExtent[1][0],\n          y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n        var edges = cell.edges,\n            site = cell.site,\n            polygon = polygons[i] = edges.length ? edges.map(function (e) {\n          var s = e.start();\n          return [s.x, s.y];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n\n    function sites(data) {\n      return data.map(function (d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n\n    voronoi.links = function (data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n        return edge.l && edge.r;\n      }).map(function (edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n\n    voronoi.triangles = function (data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n        var site = cell.site,\n            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),\n            j = -1,\n            m = edges.length,\n            e0,\n            s0,\n            e1 = edges[m - 1].edge,\n            s1 = e1.l === site ? e1.r : e1.l;\n\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([data[i], data[s0.i], data[s1.i]]);\n          }\n        }\n      });\n      return triangles;\n    };\n\n    voronoi.x = function (_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n\n    voronoi.y = function (_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n\n    voronoi.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n\n    voronoi.size = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [[0, 0], _]);\n    };\n\n    return voronoi;\n  };\n\n  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n\n  d3.geom.delaunay = function (vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n\n  d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        compat;\n\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n\n      return quadtree(points);\n    }\n\n    function quadtree(data) {\n      var d,\n          fx = d3_functor(x),\n          fy = d3_functor(y),\n          xs,\n          ys,\n          i,\n          n,\n          x1_,\n          y1_,\n          x2_,\n          y2_;\n\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i),\n              y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n\n      var dx = x2_ - x1_,\n          dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;\n\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n\n        if (n.leaf) {\n          var nx = n.x,\n              ny = n.y;\n\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5,\n            ym = (y1 + y2) * .5,\n            right = x >= xm,\n            below = y >= ym,\n            i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm;else x2 = xm;\n        if (below) y1 = ym;else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n\n      var root = d3_geom_quadtreeNode();\n\n      root.add = function (d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n\n      root.visit = function (f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n\n      root.find = function (point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n\n      i = -1;\n\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n\n        --i;\n      } else data.forEach(root.add);\n\n      xs = ys = data = d = null;\n      return root;\n    }\n\n    quadtree.x = function (_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n\n    quadtree.y = function (_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n\n    quadtree.extent = function (_) {\n      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n      return quadtree;\n    };\n\n    quadtree.size = function (_) {\n      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n\n    return quadtree;\n  };\n\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5,\n          sy = (y1 + y2) * .5,\n          children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity,\n        closestPoint;\n\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n      if (point = node.point) {\n        var point,\n            dx = x - node.x,\n            dy = y - node.y,\n            distance2 = dx * dx + dy * dy;\n\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n\n      var children = node.nodes,\n          xm = (x1 + x2) * .5,\n          ym = (y1 + y2) * .5,\n          right = x >= xm,\n          below = y >= ym;\n\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n          case 0:\n            find(node, x1, y1, xm, ym);\n            break;\n\n          case 1:\n            find(node, xm, y1, x2, ym);\n            break;\n\n          case 2:\n            find(node, x1, ym, xm, y2);\n            break;\n\n          case 3:\n            find(node, xm, ym, x2, y2);\n            break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n\n    return closestPoint;\n  }\n\n  d3.interpolateRgb = d3_interpolateRgb;\n\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function (t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n\n  d3.interpolateObject = d3_interpolateObject;\n\n  function d3_interpolateObject(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  d3.interpolateNumber = d3_interpolateNumber;\n\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function (t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n\n  d3.interpolateString = d3_interpolateString;\n\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,\n        am,\n        bm,\n        bs,\n        i = -1,\n        s = [],\n        q = [];\n    a = a + \"\", b = b + \"\";\n\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs;else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm;else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs;else s[++i] = bs;\n    }\n\n    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {\n      return b(t) + \"\";\n    }) : function () {\n      return b;\n    } : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length,\n        f;\n\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {\n      ;\n    }\n\n    return f;\n  }\n\n  d3.interpolators = [function (a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  }];\n  d3.interpolateArray = d3_interpolateArray;\n\n  function d3_interpolateArray(a, b) {\n    var x = [],\n        c = [],\n        na = a.length,\n        nb = b.length,\n        n0 = Math.min(a.length, b.length),\n        i;\n\n    for (i = 0; i < n0; ++i) {\n      x.push(d3_interpolate(a[i], b[i]));\n    }\n\n    for (; i < na; ++i) {\n      c[i] = a[i];\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < n0; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  var d3_ease_default = function d3_ease_default() {\n    return d3_identity;\n  };\n\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function quad() {\n      return d3_ease_quad;\n    },\n    cubic: function cubic() {\n      return d3_ease_cubic;\n    },\n    sin: function sin() {\n      return d3_ease_sin;\n    },\n    exp: function exp() {\n      return d3_ease_exp;\n    },\n    circle: function circle() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function bounce() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function outIn(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n\n  d3.ease = function (name) {\n    var i = name.indexOf(\"-\"),\n        t = i >= 0 ? name.slice(0, i) : name,\n        m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n\n  function d3_ease_clamp(f) {\n    return function (t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n\n  function d3_ease_reverse(f) {\n    return function (t) {\n      return 1 - f(1 - t);\n    };\n  }\n\n  function d3_ease_reflect(f) {\n    return function (t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t,\n        t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n\n  function d3_ease_poly(e) {\n    return function (t) {\n      return Math.pow(t, e);\n    };\n  }\n\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;\n    return function (t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n\n  d3.interpolateHcl = d3_interpolateHcl;\n\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h,\n        ac = a.c,\n        al = a.l,\n        bh = b.h - ah,\n        bc = b.c - ac,\n        bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateHsl = d3_interpolateHsl;\n\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h,\n        as = a.s,\n        al = a.l,\n        bh = b.h - ah,\n        bs = b.s - as,\n        bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateLab = d3_interpolateLab;\n\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function (t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n\n  d3.interpolateRound = d3_interpolateRound;\n\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  d3.transform = function (string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function (string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n\n  function d3_transform(m) {\n    var r0 = [m.a, m.b],\n        r1 = [m.c, m.d],\n        kx = d3_transformNormalize(r0),\n        kz = d3_transformDot(r0, r1),\n        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [m.e, m.f];\n    this.scale = [kx, ky];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n\n  d3_transform.prototype.toString = function () {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n\n    return k;\n  }\n\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n\n  function d3_interpolateTransform(a, b) {\n    var s = [],\n        q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  }\n\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return (x - a) / b;\n    };\n  }\n\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n\n  d3.layout = {};\n\n  d3.layout.bundle = function () {\n    return function (links) {\n      var paths = [],\n          i = -1,\n          n = links.length;\n\n      while (++i < n) {\n        paths.push(d3_layout_bundlePath(links[i]));\n      }\n\n      return paths;\n    };\n  };\n\n  function d3_layout_bundlePath(link) {\n    var start = link.source,\n        end = link.target,\n        lca = d3_layout_bundleLeastCommonAncestor(start, end),\n        points = [start];\n\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n\n    var k = points.length;\n\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return points;\n  }\n\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [],\n        parent = node.parent;\n\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n\n    ancestors.push(node);\n    return ancestors;\n  }\n\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a),\n        bNodes = d3_layout_bundleAncestors(b),\n        aNode = aNodes.pop(),\n        bNode = bNodes.pop(),\n        sharedNode = null;\n\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n\n    return sharedNode;\n  }\n\n  d3.layout.chord = function () {\n    var chord = {},\n        chords,\n        groups,\n        matrix,\n        n,\n        padding = 0,\n        sortGroups,\n        sortSubgroups,\n        sortChords;\n\n    function relayout() {\n      var subgroups = {},\n          groupSums = [],\n          groupIndex = d3.range(n),\n          subgroupIndex = [],\n          k,\n          x,\n          x0,\n          i,\n          j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n\n      while (++i < n) {\n        x = 0, j = -1;\n\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n\n      while (++i < n) {\n        x0 = x, j = -1;\n\n        while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        j = i - 1;\n\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j],\n              target = subgroups[j + \"-\" + i];\n\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) resort();\n    }\n\n    function resort() {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n\n    chord.matrix = function (x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.padding = function (x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortGroups = function (x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n\n    chord.sortChords = function (x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n\n    chord.chords = function () {\n      if (!chords) relayout();\n      return chords;\n    };\n\n    chord.groups = function () {\n      if (!groups) relayout();\n      return groups;\n    };\n\n    return chord;\n  };\n\n  d3.layout.force = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        timer,\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = .9,\n        linkDistance = d3_layout_forceLinkDistance,\n        linkStrength = d3_layout_forceLinkStrength,\n        charge = -30,\n        chargeDistance2 = d3_layout_forceChargeDistance2,\n        gravity = .1,\n        theta2 = .64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x,\n              dy = quad.cy - node.y,\n              dw = x2 - x1,\n              dn = dx * dx + dy * dy;\n\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n          m = links.length,\n          q,\n          i,\n          o,\n          s,\n          t,\n          l,\n          k,\n          x,\n          y;\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        o = nodes[i];\n\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.distance = force.linkDistance;\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n          n = nodes.length,\n          m = links.length,\n          w = size[0],\n          h = size[1],\n          neighbors,\n          o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) {\n        distances[i] = +linkDistance.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        distances[i] = linkDistance;\n      }\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) {\n        strengths[i] = +linkStrength.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        strengths[i] = linkStrength;\n      }\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) {\n        charges[i] = +charge.call(this, nodes[i], i);\n      } else for (i = 0; i < n; ++i) {\n        charges[i] = charge;\n      }\n\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n            j = -1,\n            l = candidates.length,\n            x;\n\n        while (++j < l) {\n          if (!isNaN(x = candidates[j][dimension])) return x;\n        }\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0,\n        cy = 0;\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n          n = nodes.length,\n          i = -1,\n          c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  var d3_layout_forceLinkDistance = 20,\n      d3_layout_forceLinkStrength = 1,\n      d3_layout_forceChargeDistance2 = Infinity;\n\n  d3.layout.hierarchy = function () {\n    var sort = d3_layout_hierarchySort,\n        children = d3_layout_hierarchyChildren,\n        value = d3_layout_hierarchyValue;\n\n    function hierarchy(root) {\n      var stack = [root],\n          nodes = [],\n          node;\n      root.depth = 0;\n\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n\n    hierarchy.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n\n    hierarchy.children = function (x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n\n    hierarchy.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n\n    hierarchy.revalue = function (root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function (node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function (node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n\n      return root;\n    };\n\n    return hierarchy;\n  };\n\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [node];\n\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n\n        while (--n >= 0) {\n          nodes.push(children[n]);\n        }\n      }\n    }\n  }\n\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [node],\n        nodes2 = [];\n\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1,\n            n,\n            children;\n\n        while (++i < n) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function (parent) {\n      return (parent.children || []).map(function (child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n\n  d3.layout.partition = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        size = [1, 1];\n\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n,\n            c,\n            d;\n        dx = node.value ? dx / node.value : 0;\n\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n\n    function depth(node) {\n      var children = node.children,\n          d = 0;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n;\n\n        while (++i < n) {\n          d = Math.max(d, depth(children[i]));\n        }\n      }\n\n      return 1 + d;\n    }\n\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n\n    partition.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n\n  d3.layout.pie = function () {\n    var value = Number,\n        sort = d3_layout_pieSortByValue,\n        startAngle = 0,\n        endAngle = τ,\n        padAngle = 0;\n\n    function pie(data) {\n      var n = data.length,\n          values = data.map(function (d, i) {\n        return +value.call(pie, d, i);\n      }),\n          a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle),\n          da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a,\n          p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)),\n          pa = p * (da < 0 ? -1 : 1),\n          sum = d3.sum(values),\n          k = sum ? (da - n * pa) / sum : 0,\n          index = d3.range(n),\n          arcs = [],\n          v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n        return values[j] - values[i];\n      } : function (i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function (i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n\n    pie.value = function (_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n\n    pie.sort = function (_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n\n    pie.startAngle = function (_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n\n    pie.endAngle = function (_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n\n    pie.padAngle = function (_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n\n    return pie;\n  };\n\n  var d3_layout_pieSortByValue = {};\n\n  d3.layout.stack = function () {\n    var values = d3_identity,\n        order = d3_layout_stackOrderDefault,\n        offset = d3_layout_stackOffsetZero,\n        out = d3_layout_stackOut,\n        x = d3_layout_stackX,\n        y = d3_layout_stackY;\n\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function (d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function (d) {\n        return d.map(function (v, i) {\n          return [x.call(stack, v, i), y.call(stack, v, i)];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length,\n          n,\n          i,\n          j,\n          o;\n\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n\n      return data;\n    }\n\n    stack.values = function (x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n\n    stack.order = function (x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n\n    stack.offset = function (x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n\n    stack.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n\n    stack.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n\n    stack.out = function (z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n\n    return stack;\n  };\n\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function insideOut(data) {\n      var n = data.length,\n          i,\n          j,\n          max = data.map(d3_layout_stackMaxIndex),\n          sums = data.map(d3_layout_stackReduceSum),\n          index = d3.range(n).sort(function (a, b) {\n        return max[a] - max[b];\n      }),\n          top = 0,\n          bottom = 0,\n          tops = [],\n          bottoms = [];\n\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function reverse(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function silhouette(data) {\n      var n = data.length,\n          m = data[0].length,\n          sums = [],\n          max = 0,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o > max) max = o;\n        sums.push(o);\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n\n      return y0;\n    },\n    wiggle: function wiggle(data) {\n      var n = data.length,\n          x = data[0],\n          m = x.length,\n          i,\n          j,\n          k,\n          s1,\n          s2,\n          s3,\n          dx,\n          o,\n          o0,\n          y0 = [];\n      y0[0] = o = o0 = 0;\n\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) {\n          s1 += data[i][j][1];\n        }\n\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n\n          s2 += s3 * data[i][j][1];\n        }\n\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] -= o0;\n      }\n\n      return y0;\n    },\n    expand: function expand(data) {\n      var n = data.length,\n          m = data[0].length,\n          k = 1 / n,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o) for (i = 0; i < n; i++) {\n          data[i][j][1] /= o;\n        } else for (i = 0; i < n; i++) {\n          data[i][j][1] = k;\n        }\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = 0;\n      }\n\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1,\n        m = data[0].length,\n        y0 = [];\n\n    while (++j < m) {\n      y0[j] = 0;\n    }\n\n    return y0;\n  }\n\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1,\n        j = 0,\n        v = array[0][1],\n        k,\n        n = array.length;\n\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n\n    return j;\n  }\n\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n\n  d3.layout.histogram = function () {\n    var frequency = true,\n        valuer = Number,\n        ranger = d3_layout_histogramRange,\n        binner = d3_layout_histogramBinSturges;\n\n    function histogram(data, i) {\n      var bins = [],\n          values = data.map(valuer, this),\n          range = ranger.call(this, values, i),\n          thresholds = binner.call(this, range, values, i),\n          bin,\n          i = -1,\n          n = values.length,\n          m = thresholds.length - 1,\n          k = frequency ? 1 : 1 / n,\n          x;\n\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n\n      if (m > 0) {\n        i = -1;\n\n        while (++i < n) {\n          x = values[i];\n\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n\n    histogram.range = function (x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n\n    histogram.bins = function (x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function (range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n\n    histogram.frequency = function (x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n\n    return histogram;\n  };\n\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1,\n        b = +range[0],\n        m = (range[1] - b) / n,\n        f = [];\n\n    while (++x <= n) {\n      f[x] = m * x + b;\n    }\n\n    return f;\n  }\n\n  function d3_layout_histogramRange(values) {\n    return [d3.min(values), d3.max(values)];\n  }\n\n  d3.layout.pack = function () {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),\n        padding = 0,\n        size = [1, 1],\n        radius;\n\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          w = size[0],\n          h = size[1],\n          r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function (d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r -= dr;\n        });\n      }\n\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n\n    pack.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n\n    pack.radius = function (_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n\n    pack.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes,\n        xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity,\n        a,\n        b,\n        c,\n        i,\n        j,\n        k,\n        n;\n\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0,\n              s1 = 1,\n              s2 = 1;\n\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n\n    var cx = (xMin + xMax) / 2,\n        cy = (yMin + yMax) / 2,\n        cr = 0;\n\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n\n    if (children) {\n      var i = -1,\n          n = children.length;\n\n      while (++i < n) {\n        d3_layout_packTransform(children[i], x, y, k);\n      }\n    }\n  }\n\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n\n    if (db && (dx || dy)) {\n      var da = b.r + c.r,\n          dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n\n  d3.layout.tree = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = null;\n\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root0 = nodes[0],\n          root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {\n        var left = root0,\n            right = root0,\n            bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x,\n            kx = size[0] / (right.x + separation(right, left) / 2 + tx),\n            ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [root0]\n      },\n          queue = [root1],\n          node1;\n\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n\n      return root1.children[0];\n    }\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n\n    tree.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n\n    tree.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n\n    tree.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n\n  function d3_layout_treeRight(v) {\n    var children = v.children,\n        n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  function d3_layout_treeShift(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  d3.layout.cluster = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = false;\n\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          previousNode,\n          x = 0;\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var children = node.children;\n\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root),\n          right = d3_layout_clusterRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n\n    cluster.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n\n    cluster.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n\n    cluster.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function (child) {\n      return child.y;\n    });\n  }\n\n  function d3_layout_clusterX(children) {\n    return children.reduce(function (x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n\n  function d3_layout_clusterRight(node) {\n    var children = node.children,\n        n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n\n  d3.layout.treemap = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        round = Math.round,\n        size = [1, 1],\n        padding = null,\n        pad = d3_layout_treemapPadNull,\n        sticky = false,\n        stickies,\n        mode = \"squarify\",\n        ratio = .5 * (1 + Math.sqrt(5));\n\n    function scale(children, k) {\n      var i = -1,\n          n = children.length,\n          child,\n          area;\n\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n\n    function squarify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            row = [],\n            remaining = children.slice(),\n            child,\n            best = Infinity,\n            score,\n            u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),\n            n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n\n        children.forEach(squarify);\n      }\n    }\n\n    function stickify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            remaining = children.slice(),\n            child,\n            row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n\n        children.forEach(stickify);\n      }\n    }\n\n    function worst(row, u) {\n      var s = row.area,\n          r,\n          rmax = 0,\n          rmin = Infinity,\n          i = -1,\n          n = row.length;\n\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n\n    function position(row, u, rect, flush) {\n      var i = -1,\n          n = row.length,\n          x = rect.x,\n          y = rect.y,\n          v = u ? round(row.area / u) : 0,\n          o;\n\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d),\n          root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1];else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([root], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n\n    treemap.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n\n    treemap.padding = function (x) {\n      if (!arguments.length) return padding;\n\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n      }\n\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x], padConstant) : padConstant;\n      return treemap;\n    };\n\n    treemap.round = function (x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n\n    treemap.sticky = function (x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n\n    treemap.ratio = function (x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n\n    treemap.mode = function (x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3],\n        y = node.y + padding[0],\n        dx = node.dx - padding[1] - padding[3],\n        dy = node.dy - padding[0] - padding[2];\n\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  d3.random = {\n    normal: function normal(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function () {\n        var x, y, r;\n\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function logNormal() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function () {\n        return Math.exp(random());\n      };\n    },\n    bates: function bates(m) {\n      var random = d3.random.irwinHall(m);\n      return function () {\n        return random() / m;\n      };\n    },\n    irwinHall: function irwinHall(m) {\n      return function () {\n        for (var s = 0, j = 0; j < m; j++) {\n          s += Math.random();\n        }\n\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n\n  function d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  }\n\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]),\n        i = interpolate(range[0], range[1]);\n    return function (x) {\n      return i(u(x));\n    };\n  }\n\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        dx;\n\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function floor(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function ceil(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [],\n        i = [],\n        j = 0,\n        k = Math.min(domain.length, range.length) - 1;\n\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n\n    return function (x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n\n  d3.scale.linear = function () {\n    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n  };\n\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,\n          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n\n    function scale(x) {\n      return output(x);\n    }\n\n    scale.invert = function (y) {\n      return input(y);\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.rangeRound = function (x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n\n    scale.clamp = function (x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n\n    scale.interpolate = function (x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n\n    scale.copy = function () {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n\n    return rescale();\n  }\n\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain),\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step;\n    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function (d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n\n    return d3.format(format);\n  }\n\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n\n  d3.scale.log = function () {\n    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n  };\n\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n\n    function scale(x) {\n      return linear(log(x));\n    }\n\n    scale.invert = function (x) {\n      return pow(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n\n    scale.base = function (_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n\n    scale.nice = function () {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n\n    scale.ticks = function () {\n      var extent = d3_scaleExtent(domain),\n          ticks = [],\n          u = extent[0],\n          v = extent[1],\n          i = Math.floor(log(u)),\n          j = Math.ceil(log(v)),\n          n = base % 1 ? 2 : base;\n\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (; i < j; i++) {\n            for (var k = 1; k < n; k++) {\n              ticks.push(pow(i) * k);\n            }\n          }\n\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n\n          for (; i++ < j;) {\n            for (var k = n - 1; k > 0; k--) {\n              ticks.push(pow(i) * k);\n            }\n          }\n        }\n\n        for (i = 0; ticks[i] < u; i++) {}\n\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\n        ticks = ticks.slice(i, j);\n      }\n\n      return ticks;\n    };\n\n    scale.tickFormat = function (n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function (d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n\n    scale.copy = function () {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  var d3_scale_logFormat = d3.format(\".0e\"),\n      d3_scale_logNiceNegative = {\n    floor: function floor(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function ceil(x) {\n      return -Math.floor(-x);\n    }\n  };\n\n  d3.scale.pow = function () {\n    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n  };\n\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent),\n        powb = d3_scale_powPow(1 / exponent);\n\n    function scale(x) {\n      return linear(powp(x));\n    }\n\n    scale.invert = function (x) {\n      return powb(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n\n    scale.exponent = function (x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n\n    scale.copy = function () {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_scale_powPow(e) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n\n  d3.scale.sqrt = function () {\n    return d3.scale.pow().exponent(.5);\n  };\n\n  d3.scale.ordinal = function () {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [[]]\n    });\n  };\n\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n\n    function steps(start, step) {\n      return d3.range(domain.length).map(function (i) {\n        return start + step * i;\n      });\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1,\n          n = x.length,\n          xi;\n\n      while (++i < n) {\n        if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      }\n\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangePoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundPoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBand = function () {\n      return rangeBand;\n    };\n\n    scale.rangeExtent = function () {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n\n    scale.copy = function () {\n      return d3_scale_ordinal(domain, ranger);\n    };\n\n    return scale.domain(domain);\n  }\n\n  d3.scale.category10 = function () {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n\n  d3.scale.category20 = function () {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n\n  d3.scale.category20b = function () {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n\n  d3.scale.category20c = function () {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n\n  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n\n  d3.scale.quantile = function () {\n    return d3_scale_quantile([], []);\n  };\n\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n\n    function rescale() {\n      var k = 0,\n          q = range.length;\n      thresholds = [];\n\n      while (++k < q) {\n        thresholds[k - 1] = d3.quantile(domain, k / q);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.quantiles = function () {\n      return thresholds;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantile(domain, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.quantize = function () {\n    return d3_scale_quantize(0, 1, [0, 1]);\n  };\n\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return [x0, x1];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [y, y + 1 / kx];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantize(x0, x1, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.threshold = function () {\n    return d3_scale_threshold([.5], [0, 1]);\n  };\n\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n\n    scale.range = function (_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return [domain[y - 1], domain[y]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_threshold(domain, range);\n    };\n\n    return scale;\n  }\n\n  d3.scale.identity = function () {\n    return d3_scale_identity([0, 1]);\n  };\n\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n\n    identity.invert = identity;\n\n    identity.domain = identity.range = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n\n    identity.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    identity.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    identity.copy = function () {\n      return d3_scale_identity(domain);\n    };\n\n    return identity;\n  }\n\n  d3.svg = {};\n\n  function d3_zero() {\n    return 0;\n  }\n\n  d3.svg.arc = function () {\n    var innerRadius = d3_svg_arcInnerRadius,\n        outerRadius = d3_svg_arcOuterRadius,\n        cornerRadius = d3_zero,\n        padRadius = d3_svg_arcAuto,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle,\n        padAngle = d3_svg_arcPadAngle;\n\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)),\n          r1 = Math.max(0, +outerRadius.apply(this, arguments)),\n          a0 = startAngle.apply(this, arguments) - halfπ,\n          a1 = endAngle.apply(this, arguments) - halfπ,\n          da = Math.abs(a1 - a0),\n          cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc,\n          cr,\n          rp,\n          ap,\n          p0 = 0,\n          p1 = 0,\n          x0,\n          y0,\n          x1,\n          y1,\n          x2,\n          y2,\n          x3,\n          y3,\n          path = [];\n\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc,\n            rc0 = rc;\n\n        if (da < π) {\n          var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),\n              ax = x0 - oc[0],\n              ay = y0 - oc[1],\n              bx = x1 - oc[0],\n              by = y1 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),\n              t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);\n\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),\n              t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);\n\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n\n    arc.innerRadius = function (v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.outerRadius = function (v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.cornerRadius = function (v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.padRadius = function (v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n\n    arc.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.padAngle = function (v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.centroid = function () {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    return arc;\n  };\n\n  var d3_svg_arcAuto = \"auto\";\n\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0],\n        y01 = p0[1] - p1[1],\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x1 = p0[0] + ox,\n        y1 = p0[1] + oy,\n        x2 = p1[0] + ox,\n        y2 = p1[1] + oy,\n        x3 = (x1 + x2) / 2,\n        y3 = (y1 + y2) / 2,\n        dx = x2 - x1,\n        dy = y2 - y1,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x1 * y2 - x2 * y1,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x3,\n        dy0 = cy0 - y3,\n        dx1 = cx1 - x3,\n        dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];\n  }\n\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        tension = .7;\n\n    function line(data) {\n      var segments = [],\n          points = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx = d3_functor(x),\n          fy = d3_functor(y);\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    line.x = function (_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n\n    line.y = function (_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n\n    line.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n\n    line.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n\n    line.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n\n    return line;\n  }\n\n  d3.svg.line = function () {\n    return d3_svg_line(d3_identity);\n  };\n\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function (key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n\n  function d3_svg_lineStep(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    }\n\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepBefore(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepAfter(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n  }\n\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n\n    var quad = points.length != tangents.length,\n        path = \"\",\n        p0 = points[0],\n        p = points[1],\n        t0 = tangents[0],\n        t = t0,\n        pi = 1;\n\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n\n    return path;\n  }\n\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [],\n        a = (1 - tension) / 2,\n        p0,\n        p1 = points[0],\n        p2 = points[1],\n        i = 1,\n        n = points.length;\n\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1,\n        n = points.length,\n        pi = points[0],\n        x0 = pi[0],\n        y0 = pi[1],\n        px = [x0, x0, x0, (pi = points[1])[0]],\n        py = [y0, y0, y0, pi[1]],\n        path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    points.push(points[n - 1]);\n\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [],\n        i = -1,\n        n = points.length,\n        pi,\n        px = [0],\n        py = [0];\n\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisClosed(points) {\n    var path,\n        i = -1,\n        n = points.length,\n        m = n + 4,\n        pi,\n        px = [],\n        py = [];\n\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    --i;\n\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n\n    if (n) {\n      var x0 = points[0][0],\n          y0 = points[0][1],\n          dx = points[n][0] - x0,\n          dy = points[n][1] - y0,\n          i = -1,\n          p,\n          t;\n\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n\n    return d3_svg_lineBasis(points);\n  }\n\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n\n  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],\n      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],\n      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0,\n        j = points.length - 1,\n        m = [],\n        p0 = points[0],\n        p1 = points[1],\n        d = m[0] = d3_svg_lineSlope(p0, p1);\n\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n\n    m[i] = d;\n    return m;\n  }\n\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [],\n        d,\n        a,\n        b,\n        s,\n        m = d3_svg_lineFiniteDifferences(points),\n        i = -1,\n        j = points.length - 1;\n\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n\n    i = -1;\n\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([s || 0, m[i] * s || 0]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n\n  d3.svg.line.radial = function () {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n\n  function d3_svg_lineRadial(points) {\n    var point,\n        i = -1,\n        n = points.length,\n        r,\n        a;\n\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n\n    return points;\n  }\n\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX,\n        x1 = d3_geom_pointX,\n        y0 = 0,\n        y1 = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        interpolateReverse = interpolate,\n        L = \"L\",\n        tension = .7;\n\n    function area(data) {\n      var segments = [],\n          points0 = [],\n          points1 = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx0 = d3_functor(x0),\n          fy0 = d3_functor(y0),\n          fx1 = x0 === x1 ? function () {\n        return x;\n      } : d3_functor(x1),\n          fy1 = y0 === y1 ? function () {\n        return y;\n      } : d3_functor(y1),\n          x,\n          y;\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    area.x = function (_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n\n    area.x0 = function (_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n\n    area.x1 = function (_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n\n    area.y = function (_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n\n    area.y0 = function (_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n\n    area.y1 = function (_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n\n    area.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n\n    area.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n\n    area.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n\n    return area;\n  }\n\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\n  d3.svg.area = function () {\n    return d3_svg_area(d3_identity);\n  };\n\n  d3.svg.area.radial = function () {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n\n  d3.svg.chord = function () {\n    var source = d3_source,\n        target = d3_target,\n        radius = d3_svg_chordRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i),\n          t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i),\n          r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) - halfπ,\n          a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [r * Math.cos(a0), r * Math.sin(a0)],\n        p1: [r * Math.cos(a1), r * Math.sin(a1)]\n      };\n    }\n\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n\n    chord.radius = function (v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n\n    chord.source = function (v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n\n    chord.target = function (v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n\n    chord.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n\n    chord.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n\n    return chord;\n  };\n\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n\n  d3.svg.diagonal = function () {\n    var source = d3_source,\n        target = d3_target,\n        projection = d3_svg_diagonalProjection;\n\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i),\n          p3 = target.call(this, d, i),\n          m = (p0.y + p3.y) / 2,\n          p = [p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n\n    diagonal.source = function (x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.target = function (x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.projection = function (x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalProjection(d) {\n    return [d.x, d.y];\n  }\n\n  d3.svg.diagonal.radial = function () {\n    var diagonal = d3.svg.diagonal(),\n        projection = d3_svg_diagonalProjection,\n        projection_ = diagonal.projection;\n\n    diagonal.projection = function (x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function () {\n      var d = projection.apply(this, arguments),\n          r = d[0],\n          a = d[1] - halfπ;\n      return [r * Math.cos(a), r * Math.sin(a)];\n    };\n  }\n\n  d3.svg.symbol = function () {\n    var type = d3_svg_symbolType,\n        size = d3_svg_symbolSize;\n\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n\n    symbol.type = function (x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n\n    symbol.size = function (x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n\n    return symbol;\n  };\n\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function cross(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function diamond(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),\n          rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function square(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function triangleDown(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function triangleUp(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3),\n      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n  d3_selectionPrototype.transition = function (name) {\n    var id = d3_transitionInheritId || ++d3_transitionId,\n        ns = d3_transitionNamespace(name),\n        subgroups = [],\n        subgroup,\n        node,\n        transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_selectionPrototype.interrupt = function (name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\n  function d3_selection_interruptNS(ns) {\n    return function () {\n      var lock, activeId, active;\n\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId];else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n\n  var d3_transitionPrototype = [],\n      d3_transitionId = 0,\n      d3_transitionInheritId,\n      d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\n  d3.transition = function (selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n\n  d3.transition.prototype = d3_transitionPrototype;\n\n  d3_transitionPrototype.select = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnode,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.selectAll = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnodes,\n        node,\n        subnode,\n        transition;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n\n          for (var k = -1, o = subnodes.length; ++k < o;) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n\n  d3_transitionPrototype.tween = function (name, tween) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function (node) {\n      node[ns][id].tween.remove(name);\n    } : function (node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id,\n        ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function (node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n\n  d3_transitionPrototype.attr = function (nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) {\n        this.attr(value, nameNS[value]);\n      }\n\n      return this;\n    }\n\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\n        name = d3.ns.qualify(nameNS);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function () {\n        var a = this.getAttribute(name),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function () {\n        var a = this.getAttributeNS(name.space, name.local),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.attrTween = function (nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function (t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function (t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.style(priority, name[priority], value);\n        }\n\n        return this;\n      }\n\n      priority = \"\";\n    }\n\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function () {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name),\n            i;\n        return a !== b && (i = d3_interpolate(a, b), function (t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n\n  d3_transitionPrototype.styleTween = function (name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function (t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n\n    return this.tween(\"style.\" + name, styleTween);\n  };\n\n  d3_transitionPrototype.text = function (value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function () {\n      this.textContent = b;\n    };\n  }\n\n  d3_transitionPrototype.remove = function () {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function () {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n\n  d3_transitionPrototype.ease = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function (node) {\n      node[ns][id].ease = value;\n    });\n  };\n\n  d3_transitionPrototype.delay = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function (node) {\n      node[ns][id].delay = value;\n    }));\n  };\n\n  d3_transitionPrototype.duration = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function (node) {\n      node[ns][id].duration = value;\n    }));\n  };\n\n  d3_transitionPrototype.each = function (type, listener) {\n    var id = this.id,\n        ns = this.namespace;\n\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit,\n          inheritId = d3_transitionInheritId;\n\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function (node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function (node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n\n    return this;\n  };\n\n  d3_transitionPrototype.transition = function () {\n    var id0 = this.id,\n        id1 = ++d3_transitionId,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        group,\n        node,\n        transition;\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id1);\n  };\n\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }),\n        transition = lock[id],\n        time,\n        timer,\n        duration,\n        ease,\n        tweens;\n\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n\n    function start(elapsed) {\n      var activeId = lock.active,\n          active = lock[activeId];\n\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n\n      timer.c = tick;\n      d3_timer(function () {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function (key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed / duration,\n          e = ease(t),\n          n = tweens.length;\n\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id];else delete node[ns];\n        return 1;\n      }\n    }\n\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n\n  d3.svg.axis = function () {\n    var scale = d3.scale.linear(),\n        orient = d3_svg_axisDefaultOrient,\n        innerTickSize = 6,\n        outerTickSize = 6,\n        tickPadding = 3,\n        tickArguments_ = [10],\n        tickValues = null,\n        tickFormat_;\n\n    function axis(g) {\n      g.each(function () {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale,\n            scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,\n            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε),\n            tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(),\n            tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1),\n            tickSpacing = Math.max(innerTickSize, 0) + tickPadding,\n            tickTransform;\n        var range = d3_scaleRange(scale1),\n            path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"),\n            lineUpdate = tickUpdate.select(\"line\"),\n            text = tick.select(\"text\").text(tickFormat),\n            textEnter = tickEnter.select(\"text\"),\n            textUpdate = tickUpdate.select(\"text\"),\n            sign = orient === \"top\" || orient === \"left\" ? -1 : 1,\n            x1,\n            x2,\n            y1,\n            y2;\n\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n\n    axis.tickFormat = function (x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n\n    axis.tickSize = function (x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n\n    axis.innerTickSize = function (x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n\n    axis.outerTickSize = function (x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n\n    axis.tickPadding = function (x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n\n    axis.tickSubdivide = function () {\n      return arguments.length && axis;\n    };\n\n    return axis;\n  };\n\n  var d3_svg_axisDefaultOrient = \"bottom\",\n      d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n\n  d3.svg.brush = function () {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"),\n        x = null,\n        y = null,\n        xExtent = [0, 0],\n        yExtent = [0, 0],\n        xExtentDomain,\n        yExtentDomain,\n        xClamp = true,\n        yClamp = true,\n        resizes = d3_svg_brushResizes[0];\n\n    function brush(g) {\n      g.each(function () {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([0]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function (d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function (d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function (d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function (d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g),\n            backgroundUpdate = d3.transition(background),\n            range;\n\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n\n        redraw(gUpdate);\n      });\n    }\n\n    brush.event = function (g) {\n      g.each(function () {\n        var event_ = event.of(this, arguments),\n            extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        },\n            extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function () {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function () {\n            var xi = d3_interpolateArray(xExtent, extent1.x),\n                yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function (t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function () {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function (d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n\n    function brushstart() {\n      var target = this,\n          eventTarget = d3.select(d3.event.target),\n          event_ = event.of(target, arguments),\n          g = d3.select(target),\n          resizing = eventTarget.datum(),\n          resizingX = !/^(n|s)$/.test(resizing) && x,\n          resizingY = !/^(e|w)$/.test(resizing) && y,\n          dragging = eventTarget.classed(\"extent\"),\n          dragRestore = d3_event_dragSuppress(target),\n          center,\n          origin = d3.mouse(target),\n          offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n\n      g.interrupt().selectAll(\"*\").interrupt();\n\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing),\n            ey = +/^n/.test(resizing);\n        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n\n          d3_eventPreventDefault();\n        }\n      }\n\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n\n      function brushmove() {\n        var point = d3.mouse(target),\n            moved = false;\n\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale),\n            r0 = range[0],\n            r1 = range[1],\n            position = origin[i],\n            extent = i ? yExtent : xExtent,\n            size = extent[1] - extent[0],\n            min,\n            max;\n\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null;else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n\n    brush.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.clamp = function (z) {\n      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;\n      return brush;\n    };\n\n    brush.extent = function (z) {\n      var x0, x1, y0, y1, t;\n\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n\n        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n      }\n\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [x0, x1];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n      }\n\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [y0, y1];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n      }\n\n      return brush;\n    };\n\n    brush.clear = function () {\n      if (!brush.empty()) {\n        xExtent = [0, 0], yExtent = [0, 0];\n        xExtentDomain = yExtentDomain = null;\n      }\n\n      return brush;\n    };\n\n    brush.empty = function () {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n\n    return d3.rebind(brush, event, \"on\");\n  };\n\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  d3_time_formatIsoNative.parse = function (string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function (date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function (date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function (date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function (date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function (date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function (date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n\n    scale.invert = function (x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0],\n          target = span / count,\n          i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n        return d / 31536e6;\n      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n\n    scale.nice = function (interval, skip) {\n      var domain = scale.domain(),\n          extent = d3_scaleExtent(domain),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function floor(date) {\n          while (skipped(date = interval.floor(date))) {\n            date = d3_time_scaleDate(date - 1);\n          }\n\n          return date;\n        },\n        ceil: function ceil(date) {\n          while (skipped(date = interval.ceil(date))) {\n            date = d3_time_scaleDate(+date + 1);\n          }\n\n          return date;\n        }\n      } : interval));\n    };\n\n    scale.ticks = function (interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n        range: interval\n      }, skip];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n\n    scale.tickFormat = function () {\n      return format;\n    };\n\n    scale.copy = function () {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n\n  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n    return d.getMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getHours();\n  }], [\"%a %d\", function (d) {\n    return d.getDay() && d.getDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getMonth();\n  }], [\"%Y\", d3_true]]);\n  var d3_time_scaleMilliseconds = {\n    range: function range(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n\n  d3_time.scale = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n    return [m[0].utc, m[1]];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n    return d.getUTCMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getUTCSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getUTCMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getUTCHours();\n  }], [\"%a %d\", function (d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getUTCDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getUTCMonth();\n  }], [\"%Y\", d3_true]]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\n  d3_time.scale.utc = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n\n  d3.text = d3_xhrType(function (request) {\n    return request.responseText;\n  });\n\n  d3.json = function (url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n\n  d3.html = function (url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n\n  d3.xml = d3_xhrType(function (request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3);else if (typeof module === \"object\" && module.exports) module.exports = d3;else this.d3 = d3;\n}();","/* nvd3 version 1.8.6 (https://github.com/novus/nvd3) 2017-08-23 */\n(function () {\n  // set up main nv object\n  var nv = {}; // the major global objects under the nv namespace\n\n  nv.dev = false; //set false when in production\n\n  nv.tooltip = nv.tooltip || {}; // For the tooltip system\n\n  nv.utils = nv.utils || {}; // Utility subsystem\n\n  nv.models = nv.models || {}; //stores all the possible models/components\n\n  nv.charts = {}; //stores all the ready to use charts\n\n  nv.logs = {}; //stores some statistics and potential error messages\n\n  nv.dom = {}; //DOM manipulation functions\n  // Node/CommonJS - require D3\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined' && typeof d3 == 'undefined') {\n    d3 = require('d3');\n  }\n\n  nv.dispatch = d3.dispatch('render_start', 'render_end'); // Function bind polyfill\n  // Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n  // https://github.com/ariya/phantomjs/issues/10522\n  // http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n  // phantomJS is used for running the test suite\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== \"function\") {\n        // closest thing possible to the ECMAScript 5 internal IsCallable function\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  } //  Development render timers - disabled if dev = false\n\n\n  if (nv.dev) {\n    nv.dispatch.on('render_start', function (e) {\n      nv.logs.startTime = +new Date();\n    });\n    nv.dispatch.on('render_end', function (e) {\n      nv.logs.endTime = +new Date();\n      nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n      nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n  } // Logs all arguments, and returns the last so you can test things in place\n  // Note: in IE8 console.log is an object not a function, and if modernizr is used\n  // then calling Function.prototype.bind with with anything other than a function\n  // causes a TypeError to be thrown.\n\n\n  nv.log = function () {\n    if (nv.dev && window.console && console.log && console.log.apply) console.log.apply(console, arguments);else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n      var log = Function.prototype.bind.call(console.log, console);\n      log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n  }; // print console warning, should be used by deprecated functions\n\n\n  nv.deprecated = function (name, info) {\n    if (console && console.warn) {\n      console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n  }; // The nv.render function is used to queue up chart rendering\n  // in non-blocking async functions.\n  // When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\n\n  nv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function renderLoop() {\n      var chart, graph;\n\n      for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n        chart = graph.generate();\n        if (typeof graph.callback == typeof Function) graph.callback(chart);\n      }\n\n      nv.render.queue.splice(0, i);\n\n      if (nv.render.queue.length) {\n        setTimeout(renderLoop);\n      } else {\n        nv.dispatch.render_end();\n        nv.render.active = false;\n      }\n    };\n\n    setTimeout(renderLoop);\n  };\n\n  nv.render.active = false;\n  nv.render.queue = [];\n  /*\n  Adds a chart to the async rendering queue. This method can take arguments in two forms:\n  nv.addGraph({\n      generate: <Function>\n      callback: <Function>\n  })\n  \n  or\n  \n  nv.addGraph(<generate Function>, <callback Function>)\n  \n  The generate function should contain code that creates the NVD3 model, sets options\n  on it, adds data to an SVG element, and invokes the chart model. The generate function\n  should return the chart model.  See examples/lineChart.html for a usage example.\n  \n  The callback function is optional, and it is called when the generate function completes.\n  */\n\n  nv.addGraph = function (obj) {\n    if (typeof arguments[0] === typeof Function) {\n      obj = {\n        generate: arguments[0],\n        callback: arguments[1]\n      };\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n      nv.render();\n    }\n  }; // Node/CommonJS exports\n\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = nv;\n  }\n\n  if (typeof window !== 'undefined') {\n    window.nv = nv;\n  }\n  /* Facade for queueing DOM write operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.write = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.mutate(callback);\n    }\n\n    return callback();\n  };\n  /* Facade for queueing DOM read operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.read = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.measure(callback);\n    }\n\n    return callback();\n  };\n  /* Utility class to handle creation of an interactive layer.\n   This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n   containing the X-coordinate. It can also render a vertical line where the mouse is located.\n  \n   dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n   the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n   It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n   */\n\n\n  nv.interactiveGuideline = function () {\n    \"use strict\";\n\n    var margin = {\n      left: 0,\n      top: 0 //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\n    },\n        width = null,\n        height = null,\n        xScale = d3.scale.linear(),\n        dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp'),\n        showGuideLine = true,\n        svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n    ,\n        tooltip = nv.models.tooltip(),\n        isMSIE = window.ActiveXObject // Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n    tooltip.duration(0).hideDelay(0).hidden(false);\n\n    function layer(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this);\n        var availableWidth = width || 960,\n            availableHeight = height || 400;\n        var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\").data([data]);\n        var wrapEnter = wrap.enter().append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n        wrapEnter.append(\"g\").attr(\"class\", \"nv-interactiveGuideLine\");\n\n        if (!svgContainer) {\n          return;\n        }\n\n        function mouseHandler() {\n          var mouseX = d3.event.clientX - this.getBoundingClientRect().left;\n          var mouseY = d3.event.clientY - this.getBoundingClientRect().top;\n          var subtractMargin = true;\n          var mouseOutAnyReason = false;\n\n          if (isMSIE) {\n            /*\n             D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n             d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n             over a rect in IE 10.\n             However, d3.event.offsetX/Y also returns the mouse coordinates\n             relative to the triggering <rect>. So we use offsetX/Y on IE.\n             */\n            mouseX = d3.event.offsetX;\n            mouseY = d3.event.offsetY;\n            /*\n             On IE, if you attach a mouse event listener to the <svg> container,\n             it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n             When this happens on IE, the offsetX/Y is set to where ever the child element\n             is located.\n             As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n             position under this scenario. Removing the line below *will* cause\n             the interactive layer to not work right on IE.\n             */\n\n            if (d3.event.target.tagName !== \"svg\") {\n              subtractMargin = false;\n            }\n\n            if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n              mouseOutAnyReason = true;\n            }\n          }\n\n          if (subtractMargin) {\n            mouseX -= margin.left;\n            mouseY -= margin.top;\n          }\n          /* If mouseX/Y is outside of the chart's bounds,\n           trigger a mouseOut event.\n           */\n\n\n          if (d3.event.type === 'mouseout' || mouseX < 0 || mouseY < 0 || mouseX > availableWidth || mouseY > availableHeight || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || mouseOutAnyReason) {\n            if (isMSIE) {\n              if (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && (d3.event.relatedTarget.className === undefined || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n                return;\n              }\n            }\n\n            dispatch.elementMouseout({\n              mouseX: mouseX,\n              mouseY: mouseY\n            });\n            layer.renderGuideLine(null); //hide the guideline\n\n            tooltip.hidden(true);\n            return;\n          } else {\n            tooltip.hidden(false);\n          }\n\n          var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n          var pointXValue = undefined; // Ordinal scale has no invert method\n\n          if (scaleIsOrdinal) {\n            var elementIndex = d3.bisect(xScale.range(), mouseX) - 1; // Check if mouseX is in the range band\n\n            if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n              pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n            } else {\n              dispatch.elementMouseout({\n                mouseX: mouseX,\n                mouseY: mouseY\n              });\n              layer.renderGuideLine(null); //hide the guideline\n\n              tooltip.hidden(true);\n              return;\n            }\n          } else {\n            pointXValue = xScale.invert(mouseX);\n          }\n\n          dispatch.elementMousemove({\n            mouseX: mouseX,\n            mouseY: mouseY,\n            pointXValue: pointXValue\n          }); //If user double clicks the layer, fire a elementDblclick\n\n          if (d3.event.type === \"dblclick\") {\n            dispatch.elementDblclick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user single clicks the layer, fire elementClick\n\n\n          if (d3.event.type === 'click') {\n            dispatch.elementClick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseDown\n\n\n          if (d3.event.type === 'mousedown') {\n            dispatch.elementMouseDown({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseUp\n\n\n          if (d3.event.type === 'mouseup') {\n            dispatch.elementMouseUp({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          }\n        }\n\n        svgContainer.on(\"touchmove\", mouseHandler).on(\"mousemove\", mouseHandler, true).on(\"mouseout\", mouseHandler, true).on(\"mousedown\", mouseHandler, true).on(\"mouseup\", mouseHandler, true).on(\"dblclick\", mouseHandler).on(\"click\", mouseHandler);\n        layer.guideLine = null; //Draws a vertical guideline at the given X postion.\n\n        layer.renderGuideLine = function (x) {\n          if (!showGuideLine) return;\n          if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n          nv.dom.write(function () {\n            var line = wrap.select(\".nv-interactiveGuideLine\").selectAll(\"line\").data(x != null ? [nv.utils.NaNtoZero(x)] : [], String);\n            line.enter().append(\"line\").attr(\"class\", \"nv-guideline\").attr(\"x1\", function (d) {\n              return d;\n            }).attr(\"x2\", function (d) {\n              return d;\n            }).attr(\"y1\", availableHeight).attr(\"y2\", 0);\n            line.exit().remove();\n          });\n        };\n      });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return layer;\n    };\n\n    layer.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return layer;\n    };\n\n    layer.height = function (_) {\n      if (!arguments.length) return height;\n      height = _;\n      return layer;\n    };\n\n    layer.xScale = function (_) {\n      if (!arguments.length) return xScale;\n      xScale = _;\n      return layer;\n    };\n\n    layer.showGuideLine = function (_) {\n      if (!arguments.length) return showGuideLine;\n      showGuideLine = _;\n      return layer;\n    };\n\n    layer.svgContainer = function (_) {\n      if (!arguments.length) return svgContainer;\n      svgContainer = _;\n      return layer;\n    };\n\n    return layer;\n  };\n  /* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n   This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n  \n   For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n   Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n   because 28 is closer to 30 than 10.\n  \n   Unit tests can be found in: interactiveBisectTest.html\n  \n   Has the following known issues:\n   * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n   * Won't work if there are duplicate x coordinate values.\n   */\n\n\n  nv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n\n    if (!(values instanceof Array)) {\n      return null;\n    }\n\n    var _xAccessor;\n\n    if (typeof xAccessor !== 'function') {\n      _xAccessor = function _xAccessor(d) {\n        return d.x;\n      };\n    } else {\n      _xAccessor = xAccessor;\n    }\n\n    var _cmp = function _cmp(d, v) {\n      // Accessors are no longer passed the index of the element along with\n      // the element itself when invoked by d3.bisector.\n      //\n      // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n      // function passed to determine if it should consider it an accessor\n      // or a comparator. This meant that accessors that take two arguments\n      // (expecting an index as the second parameter) are treated as\n      // comparators where the second argument is the search value against\n      // which the first argument is compared.\n      return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values, searchVal) - 1]);\n\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n      currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n      return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index + 1, values.length - 1]);\n\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n      nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n      return index;\n    } else {\n      return nextIndex;\n    }\n  };\n  /*\n   Returns the index in the array \"values\" that is closest to searchVal.\n   Only returns an index if searchVal is within some \"threshold\".\n   Otherwise, returns null.\n   */\n\n\n  nv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n\n    var yDistMax = Infinity,\n        indexToHighlight = null;\n    values.forEach(function (d, i) {\n      var delta = Math.abs(searchVal - d);\n\n      if (d != null && delta <= yDistMax && delta < threshold) {\n        yDistMax = delta;\n        indexToHighlight = i;\n      }\n    });\n    return indexToHighlight;\n  };\n  /* Model which can be instantiated to handle tooltip rendering.\n   Example usage:\n   var tip = nv.models.tooltip().gravity('w').distance(23)\n   .data(myDataObject);\n  \n   tip();    //just invoke the returned function to render tooltip.\n   */\n\n\n  nv.models.tooltip = function () {\n    \"use strict\";\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n    ,\n        data = null,\n        gravity = 'w' // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n    ,\n        distance = 25 // Distance to offset tooltip from the mouse location.\n    ,\n        snapDistance = 0 // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n    ,\n        classes = null // Attaches additional CSS classes to the tooltip DIV that is created.\n    ,\n        hidden = true // Start off hidden, toggle with hide/show functions below.\n    ,\n        hideDelay = 200 // Delay (in ms) before the tooltip hides after calling hide().\n    ,\n        tooltip = null // d3 select of the tooltip div.\n    ,\n        lastPosition = {\n      left: null,\n      top: null // Last position the tooltip was in.\n\n    },\n        enabled = true // True -> tooltips are rendered. False -> don't render tooltips.\n    ,\n        duration = 100 // Tooltip movement duration, in ms.\n    ,\n        headerEnabled = true // If is to show the tooltip header.\n    ,\n        nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ; // Format function for the tooltip values column.\n    // d is value,\n    // i is series index\n    // p is point containing the value\n\n    var valueFormatter = function valueFormatter(d, i, p) {\n      return d;\n    }; // Format function for the tooltip header value.\n\n\n    var headerFormatter = function headerFormatter(d) {\n      return d;\n    };\n\n    var keyFormatter = function keyFormatter(d, i) {\n      return d;\n    }; // By default, the tooltip model renders a beautiful table inside a DIV, returned as HTML\n    // You can override this function if a custom tooltip is desired. For instance, you could directly manipulate\n    // the DOM by accessing elem and returning false.\n\n\n    var contentGenerator = function contentGenerator(d, elem) {\n      if (d === null) {\n        return '';\n      }\n\n      var table = d3.select(document.createElement(\"table\"));\n\n      if (headerEnabled) {\n        var theadEnter = table.selectAll(\"thead\").data([d]).enter().append(\"thead\");\n        theadEnter.append(\"tr\").append(\"td\").attr(\"colspan\", 3).append(\"strong\").classed(\"x-value\", true).html(headerFormatter(d.value));\n      }\n\n      var tbodyEnter = table.selectAll(\"tbody\").data([d]).enter().append(\"tbody\");\n      var trowEnter = tbodyEnter.selectAll(\"tr\").data(function (p) {\n        return p.series;\n      }).enter().append(\"tr\").classed(\"highlight\", function (p) {\n        return p.highlight;\n      });\n      trowEnter.append(\"td\").classed(\"legend-color-guide\", true).append(\"div\").style(\"background-color\", function (p) {\n        return p.color;\n      });\n      trowEnter.append(\"td\").classed(\"key\", true).classed(\"total\", function (p) {\n        return !!p.total;\n      }).html(function (p, i) {\n        return keyFormatter(p.key, i);\n      });\n      trowEnter.append(\"td\").classed(\"value\", true).html(function (p, i) {\n        return valueFormatter(p.value, i, p);\n      });\n      trowEnter.filter(function (p, i) {\n        return p.percent !== undefined;\n      }).append(\"td\").classed(\"percent\", true).html(function (p, i) {\n        return \"(\" + d3.format('%')(p.percent) + \")\";\n      });\n      trowEnter.selectAll(\"td\").each(function (p) {\n        if (p.highlight) {\n          var opacityScale = d3.scale.linear().domain([0, 1]).range([\"#fff\", p.color]);\n          var opacity = 0.6;\n          d3.select(this).style(\"border-bottom-color\", opacityScale(opacity)).style(\"border-top-color\", opacityScale(opacity));\n        }\n      });\n      var html = table.node().outerHTML;\n      if (d.footer !== undefined) html += \"<div class='footer'>\" + d.footer + \"</div>\";\n      return html;\n    };\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n\n\n    var position = function position() {\n      var pos = {\n        left: d3.event !== null ? d3.event.clientX : 0,\n        top: d3.event !== null ? d3.event.clientY : 0\n      };\n\n      if (getComputedStyle(document.body).transform != 'none') {\n        // Take the offset into account, as now the tooltip is relative\n        // to document.body.\n        var client = document.body.getBoundingClientRect();\n        pos.left -= client.left;\n        pos.top -= client.top;\n      }\n\n      return pos;\n    };\n\n    var dataSeriesExists = function dataSeriesExists(d) {\n      if (d && d.series) {\n        if (nv.utils.isArray(d.series)) {\n          return true;\n        } // if object, it's okay just convert to array of the object\n\n\n        if (nv.utils.isObject(d.series)) {\n          d.series = [d.series];\n          return true;\n        }\n      }\n\n      return false;\n    }; // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n\n\n    var calcGravityOffset = function calcGravityOffset(pos) {\n      var height = tooltip.node().offsetHeight,\n          width = tooltip.node().offsetWidth,\n          clientWidth = document.documentElement.clientWidth,\n          // Don't want scrollbars.\n      clientHeight = document.documentElement.clientHeight,\n          // Don't want scrollbars.\n      left,\n          top,\n          tmp; // calculate position based on gravity\n\n      switch (gravity) {\n        case 'e':\n          left = -width - distance;\n          top = -(height / 2);\n          if (pos.left + left < 0) left = distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'w':\n          left = distance;\n          top = -(height / 2);\n          if (pos.left + left + width > clientWidth) left = -width - distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'n':\n          left = -(width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\n          top = distance;\n          if (pos.top + top + height > clientHeight) top = -height - distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 's':\n          left = -(width / 2);\n          top = -height - distance;\n          if (pos.top + top < 0) top = distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 'center':\n          left = -(width / 2);\n          top = -(height / 2);\n          break;\n\n        default:\n          left = 0;\n          top = 0;\n          break;\n      }\n\n      return {\n        'left': left,\n        'top': top\n      };\n    };\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n\n\n    var positionTooltip = function positionTooltip() {\n      nv.dom.read(function () {\n        var pos = position(),\n            gravityOffset = calcGravityOffset(pos),\n            left = pos.left + gravityOffset.left,\n            top = pos.top + gravityOffset.top; // delay hiding a bit to avoid flickering\n\n        if (hidden) {\n          tooltip.interrupt().transition().delay(hideDelay).duration(0).style('opacity', 0);\n        } else {\n          // using tooltip.style('transform') returns values un-usable for tween\n          var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n          var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n          var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n          var is_hidden = tooltip.style('opacity') < 0.1;\n          tooltip.interrupt() // cancel running transitions\n          .transition().duration(is_hidden ? 0 : duration) // using tween since some versions of d3 can't auto-tween a translate on a div\n          .styleTween('transform', function (d) {\n            return translateInterpolator;\n          }, 'important') // Safari has its own `-webkit-transform` and does not support `transform`\n          .styleTween('-webkit-transform', function (d) {\n            return translateInterpolator;\n          }).style('-ms-transform', new_translate).style('opacity', 1);\n        }\n\n        lastPosition.left = left;\n        lastPosition.top = top;\n      });\n    }; // Creates new tooltip container, or uses existing one on DOM.\n\n\n    function initTooltip() {\n      if (!tooltip || !tooltip.node()) {\n        // Create new tooltip div if it doesn't exist on DOM.\n        var data = [1];\n        tooltip = d3.select(document.body).select('#' + id).data(data);\n        tooltip.enter().append('div').attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\")).attr(\"id\", id).style(\"top\", 0).style(\"left\", 0).style('opacity', 0).style('position', 'fixed').selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true).classed(nvPointerEventsClass, true);\n        tooltip.exit().remove();\n      }\n    } // Draw the tooltip onto the DOM.\n\n\n    function nvtooltip() {\n      if (!enabled) return;\n      if (!dataSeriesExists(data)) return;\n      nv.dom.write(function () {\n        initTooltip(); // Generate data and set it into tooltip.\n        // Bonus - If you override contentGenerator and return false, you can use something like\n        //         Angular, React or Knockout to bind the data for your tooltip directly to the DOM.\n\n        var newContent = contentGenerator(data, tooltip.node());\n\n        if (newContent) {\n          tooltip.node().innerHTML = newContent;\n        }\n\n        positionTooltip();\n      });\n      return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n    nvtooltip._options = Object.create({}, {\n      // simple read/write options\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      distance: {\n        get: function get() {\n          return distance;\n        },\n        set: function set(_) {\n          distance = _;\n        }\n      },\n      snapDistance: {\n        get: function get() {\n          return snapDistance;\n        },\n        set: function set(_) {\n          snapDistance = _;\n        }\n      },\n      classes: {\n        get: function get() {\n          return classes;\n        },\n        set: function set(_) {\n          classes = _;\n        }\n      },\n      enabled: {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(_) {\n          enabled = _;\n        }\n      },\n      hideDelay: {\n        get: function get() {\n          return hideDelay;\n        },\n        set: function set(_) {\n          hideDelay = _;\n        }\n      },\n      contentGenerator: {\n        get: function get() {\n          return contentGenerator;\n        },\n        set: function set(_) {\n          contentGenerator = _;\n        }\n      },\n      valueFormatter: {\n        get: function get() {\n          return valueFormatter;\n        },\n        set: function set(_) {\n          valueFormatter = _;\n        }\n      },\n      headerFormatter: {\n        get: function get() {\n          return headerFormatter;\n        },\n        set: function set(_) {\n          headerFormatter = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      headerEnabled: {\n        get: function get() {\n          return headerEnabled;\n        },\n        set: function set(_) {\n          headerEnabled = _;\n        }\n      },\n      position: {\n        get: function get() {\n          return position;\n        },\n        set: function set(_) {\n          position = _;\n        }\n      },\n      // Deprecated options\n      chartContainer: {\n        get: function get() {\n          return document.body;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.3\n          nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }\n      },\n      fixedTop: {\n        get: function get() {\n          return null;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }\n      },\n      offset: {\n        get: function get() {\n          return {\n            left: 0,\n            top: 0\n          };\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }\n      },\n      // options with extra logic\n      hidden: {\n        get: function get() {\n          return hidden;\n        },\n        set: function set(_) {\n          if (hidden != _) {\n            hidden = !!_;\n            nvtooltip();\n          }\n        }\n      },\n      data: {\n        get: function get() {\n          return data;\n        },\n        set: function set(_) {\n          // if showing a single data point, adjust data format with that\n          if (_.point) {\n            _.value = _.point.x;\n            _.series = _.series || {};\n            _.series.value = _.point.y;\n            _.series.color = _.point.color || _.series.color;\n          }\n\n          data = _;\n        }\n      },\n      // read only properties\n      node: {\n        get: function get() {\n          return tooltip.node();\n        },\n        set: function set(_) {}\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {}\n      }\n    });\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n  };\n  /*\n  Gets the browser window size\n  \n  Returns object with height and width properties\n   */\n\n\n  nv.utils.windowSize = function () {\n    // Sane defaults\n    var size = {\n      width: 640,\n      height: 480\n    }; // Most recent browsers use\n\n    if (window.innerWidth && window.innerHeight) {\n      size.width = window.innerWidth;\n      size.height = window.innerHeight;\n      return size;\n    } // IE can use depending on mode it is in\n\n\n    if (document.compatMode == 'CSS1Compat' && document.documentElement && document.documentElement.offsetWidth) {\n      size.width = document.documentElement.offsetWidth;\n      size.height = document.documentElement.offsetHeight;\n      return size;\n    } // Earlier IE uses Doc.body\n\n\n    if (document.body && document.body.offsetWidth) {\n      size.width = document.body.offsetWidth;\n      size.height = document.body.offsetHeight;\n      return size;\n    }\n\n    return size;\n  };\n  /* handle dumb browser quirks...  isinstance breaks if you use frames\n  typeof returns 'object' for null, NaN is a number, etc.\n   */\n\n\n  nv.utils.isArray = Array.isArray;\n\n  nv.utils.isObject = function (a) {\n    return a !== null && typeof a === 'object';\n  };\n\n  nv.utils.isFunction = function (a) {\n    return typeof a === 'function';\n  };\n\n  nv.utils.isDate = function (a) {\n    return toString.call(a) === '[object Date]';\n  };\n\n  nv.utils.isNumber = function (a) {\n    return !isNaN(a) && typeof a === 'number';\n  };\n  /*\n  Binds callback function to run when window is resized\n   */\n\n\n  nv.utils.windowResize = function (handler) {\n    if (window.addEventListener) {\n      window.addEventListener('resize', handler);\n    } else {\n      nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    } // return object with clear function to remove the single added callback.\n\n\n    return {\n      callback: handler,\n      clear: function clear() {\n        window.removeEventListener('resize', handler);\n      }\n    };\n  };\n  /*\n  Backwards compatible way to implement more d3-like coloring of graphs.\n  Can take in nothing, an array, or a function/scale\n  To use a normal scale, get the range and pass that because we must be able\n  to take two arguments and use the index to keep backward compatibility\n  */\n\n\n  nv.utils.getColor = function (color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n      return nv.utils.defaultColor(); //if passed an array, turn it into a color scale\n    } else if (nv.utils.isArray(color)) {\n      var color_scale = d3.scale.ordinal().range(color);\n      return function (d, i) {\n        var key = i === undefined ? d : i;\n        return d.color || color_scale(key);\n      }; //if passed a function or scale, return it, or whatever it may be\n      //external libs, such as angularjs-nvd3-directives use this\n    } else {\n      //can't really help it if someone passes rubbish as color\n      return color;\n    }\n  };\n  /*\n  Default color chooser uses a color scale of 20 colors from D3\n   https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n   */\n\n\n  nv.utils.defaultColor = function () {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n  };\n  /*\n  Returns a color function that takes the result of 'getKey' for each series and\n  looks for a corresponding color from the dictionary\n  */\n\n\n  nv.utils.customTheme = function (dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function (series) {\n      return series.key;\n    };\n\n    defaultColors = defaultColors || d3.scale.category20().range(); // start at end of default color list and walk back to index 0\n\n    var defIndex = defaultColors.length;\n    return function (series, index) {\n      var key = getKey(series);\n\n      if (nv.utils.isFunction(dictionary[key])) {\n        return dictionary[key]();\n      } else if (dictionary[key] !== undefined) {\n        return dictionary[key];\n      } else {\n        // no match in dictionary, use a default color\n        if (!defIndex) {\n          // used all the default colors, start over\n          defIndex = defaultColors.length;\n        }\n\n        defIndex = defIndex - 1;\n        return defaultColors[defIndex];\n      }\n    };\n  };\n  /*\n  From the PJAX example on d3js.org, while this is not really directly needed\n  it's a very cool method for doing pjax, I may expand upon it a little bit,\n  open to suggestions on anything that may be useful\n  */\n\n\n  nv.utils.pjax = function (links, content) {\n    var load = function load(href) {\n      d3.html(href, function (fragment) {\n        var target = d3.select(content).node();\n        target.parentNode.replaceChild(d3.select(fragment).select(content).node(), target);\n        nv.utils.pjax(links, content);\n      });\n    };\n\n    d3.selectAll(links).on(\"click\", function () {\n      history.pushState(this.href, this.textContent, this.href);\n      load(this.href);\n      d3.event.preventDefault();\n    });\n    d3.select(window).on(\"popstate\", function () {\n      if (d3.event.state) {\n        load(d3.event.state);\n      }\n    });\n  };\n  /*\n  For when we want to approximate the width in pixels for an SVG:text element.\n  Most common instance is when the element is in a display:none; container.\n  Forumla is : text.length * font-size * constant_factor\n  */\n\n\n  nv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n      var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\", \"\"), 10);\n      var textLength = svgTextElem.text().length;\n      return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n\n    return 0;\n  };\n  /*\n  Numbers that are undefined, null or NaN, convert them to zeros.\n  */\n\n\n  nv.utils.NaNtoZero = function (n) {\n    if (!nv.utils.isNumber(n) || isNaN(n) || n === null || n === Infinity || n === -Infinity) {\n      return 0;\n    }\n\n    return n;\n  };\n  /*\n  Add a way to watch for d3 transition ends to d3\n  */\n\n\n  d3.selection.prototype.watchTransition = function (renderWatch) {\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n  };\n  /*\n  Helper object to watch when d3 has rendered something\n  */\n\n\n  nv.utils.renderWatch = function (dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n      return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n\n    var renderStack = [];\n    var self = this;\n\n    this.models = function (models) {\n      models = [].slice.call(arguments, 0);\n      models.forEach(function (model) {\n        model.__rendered = false;\n\n        (function (m) {\n          m.dispatch.on('renderEnd', function (arg) {\n            m.__rendered = true;\n            self.renderEnd('model');\n          });\n        })(model);\n\n        if (renderStack.indexOf(model) < 0) {\n          renderStack.push(model);\n        }\n      });\n      return this;\n    };\n\n    this.reset = function (duration) {\n      if (duration !== undefined) {\n        _duration = duration;\n      }\n\n      renderStack = [];\n    };\n\n    this.transition = function (selection, args, duration) {\n      args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n      if (args.length > 1) {\n        duration = args.pop();\n      } else {\n        duration = _duration !== undefined ? _duration : 250;\n      }\n\n      selection.__rendered = false;\n\n      if (renderStack.indexOf(selection) < 0) {\n        renderStack.push(selection);\n      }\n\n      if (duration === 0) {\n        selection.__rendered = true;\n\n        selection.delay = function () {\n          return this;\n        };\n\n        selection.duration = function () {\n          return this;\n        };\n\n        return selection;\n      } else {\n        if (selection.length === 0) {\n          selection.__rendered = true;\n        } else if (selection.every(function (d) {\n          return !d.length;\n        })) {\n          selection.__rendered = true;\n        } else {\n          selection.__rendered = false;\n        }\n\n        var n = 0;\n        return selection.transition().duration(duration).each(function () {\n          ++n;\n        }).each('end', function (d, i) {\n          if (--n === 0) {\n            selection.__rendered = true;\n            self.renderEnd.apply(this, args);\n          }\n        });\n      }\n    };\n\n    this.renderEnd = function () {\n      if (renderStack.every(function (d) {\n        return d.__rendered;\n      })) {\n        renderStack.forEach(function (d) {\n          d.__rendered = false;\n        });\n        dispatch.renderEnd.apply(this, arguments);\n      }\n    };\n  };\n  /*\n  Takes multiple objects and combines them into the first one (dst)\n  example:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n  gives:  {a: 2, b: 3, c: 4}\n  */\n\n\n  nv.utils.deepExtend = function (dst) {\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function (source) {\n      for (var key in source) {\n        var isArray = nv.utils.isArray(dst[key]);\n        var isObject = nv.utils.isObject(dst[key]);\n        var srcObj = nv.utils.isObject(source[key]);\n\n        if (isObject && !isArray && srcObj) {\n          nv.utils.deepExtend(dst[key], source[key]);\n        } else {\n          dst[key] = source[key];\n        }\n      }\n    });\n  };\n  /*\n  state utility object, used to track d3 states in the models\n  */\n\n\n  nv.utils.state = function () {\n    if (!(this instanceof nv.utils.state)) {\n      return new nv.utils.state();\n    }\n\n    var state = {};\n\n    var _self = this;\n\n    var _setState = function _setState() {};\n\n    var _getState = function _getState() {\n      return {};\n    };\n\n    var init = null;\n    var changed = null;\n    this.dispatch = d3.dispatch('change', 'set');\n    this.dispatch.on('set', function (state) {\n      _setState(state, true);\n    });\n\n    this.getter = function (fn) {\n      _getState = fn;\n      return this;\n    };\n\n    this.setter = function (fn, callback) {\n      if (!callback) {\n        callback = function callback() {};\n      }\n\n      _setState = function _setState(state, update) {\n        fn(state);\n\n        if (update) {\n          callback();\n        }\n      };\n\n      return this;\n    };\n\n    this.init = function (state) {\n      init = init || {};\n      nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function _set() {\n      var settings = _getState();\n\n      if (JSON.stringify(settings) === JSON.stringify(state)) {\n        return false;\n      }\n\n      for (var key in settings) {\n        if (state[key] === undefined) {\n          state[key] = {};\n        }\n\n        state[key] = settings[key];\n        changed = true;\n      }\n\n      return true;\n    };\n\n    this.update = function () {\n      if (init) {\n        _setState(init, false);\n\n        init = null;\n      }\n\n      if (_set.call(this)) {\n        this.dispatch.change(state);\n      }\n    };\n  };\n  /*\n  Snippet of code you can insert into each nv.models.* to give you the ability to\n  do things like:\n  chart.options({\n    showXAxis: true,\n    tooltips: true\n  });\n  \n  To enable in the chart:\n  chart.options = nv.utils.optionsFunc.bind(chart);\n  */\n\n\n  nv.utils.optionsFunc = function (args) {\n    if (args) {\n      d3.map(args).forEach(function (key, value) {\n        if (nv.utils.isFunction(this[key])) {\n          this[key](value);\n        }\n      }.bind(this));\n    }\n\n    return this;\n  };\n  /*\n  numTicks:  requested number of ticks\n  data:  the chart data\n  \n  returns the number of ticks to actually use on X axis, based on chart data\n  to avoid duplicate ticks with the same value\n  */\n\n\n  nv.utils.calcTicksX = function (numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n\n    for (i; i < data.length; i += 1) {\n      var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n      numValues = stream_len > numValues ? stream_len : numValues;\n    }\n\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues); // make sure we don't have more ticks than values to avoid duplicates\n\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks; // make sure we have at least one tick\n\n    numTicks = numTicks < 1 ? 1 : numTicks; // make sure it's an integer\n\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n  };\n  /*\n  returns number of ticks to actually use on Y axis, based on chart data\n  */\n\n\n  nv.utils.calcTicksY = function (numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n  };\n  /*\n  Add a particular option from an options object onto chart\n  Options exposed on a chart are a getter/setter function that returns chart\n  on set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n  \n  option objects should be generated via Object.create() to provide\n  the option of manipulating data via get/set functions.\n  */\n\n\n  nv.utils.initOption = function (chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n      chart[name] = chart._calls[name];\n    } else {\n      chart[name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n        chart._overrides[name] = true;\n        chart._options[name] = _;\n        return chart;\n      }; // calling the option as _option will ignore if set by option already\n      // so nvd3 can set options internally but the stop if set manually\n\n\n      chart['_' + name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n\n        if (!chart._overrides[name]) {\n          chart._options[name] = _;\n        }\n\n        return chart;\n      };\n    }\n  };\n  /*\n  Add all options in an options object to the chart\n  */\n\n\n  nv.utils.initOptions = function (chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n\n    for (var i in ops) {\n      nv.utils.initOption(chart, ops[i]);\n    }\n  };\n  /*\n  Inherit options from a D3 object\n  d3.rebind makes calling the function on target actually call it on source\n  Also use _d3options so we can track what we inherit for documentation and chained inheritance\n  */\n\n\n  nv.utils.inheritOptionsD3 = function (target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []); // Find unique d3 options (string) and update d3options\n\n    target._d3options = (target._d3options || []).filter(function (item, i, ar) {\n      return ar.indexOf(item) === i;\n    });\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n  };\n  /*\n  Remove duplicates from an array\n  */\n\n\n  nv.utils.arrayUnique = function (a) {\n    return a.sort().filter(function (item, pos) {\n      return !pos || item != a[pos - 1];\n    });\n  };\n  /*\n  Keeps a list of custom symbols to draw from in addition to d3.svg.symbol\n  Necessary since d3 doesn't let you extend its list -_-\n  Add new symbols by doing nv.utils.symbols.set('name', function(size){...});\n  */\n\n\n  nv.utils.symbolMap = d3.map();\n  /*\n  Replaces d3.svg.symbol so that we can look both there and our own map\n   */\n\n  nv.utils.symbol = function () {\n    var type,\n        size = 64;\n\n    function symbol(d, i) {\n      var t = type.call(this, d, i);\n      var s = size.call(this, d, i);\n\n      if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n        return d3.svg.symbol().type(t).size(s)();\n      } else {\n        return nv.utils.symbolMap.get(t)(s);\n      }\n    }\n\n    symbol.type = function (_) {\n      if (!arguments.length) return type;\n      type = d3.functor(_);\n      return symbol;\n    };\n\n    symbol.size = function (_) {\n      if (!arguments.length) return size;\n      size = d3.functor(_);\n      return symbol;\n    };\n\n    return symbol;\n  };\n  /*\n  Inherit option getter/setter functions from source to target\n  d3.rebind makes calling the function on target actually call it on source\n  Also track via _inherited and _d3options so we can track what we inherit\n  for documentation generation purposes and chained inheritance\n  */\n\n\n  nv.utils.inheritOptions = function (target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args); // pass along the lists to keep track of them, don't allow duplicates\n\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n  };\n  /*\n  Runs common initialize code on the svg before the chart builds\n  */\n\n\n  nv.utils.initSVG = function (svg) {\n    svg.classed({\n      'nvd3-svg': true\n    });\n  };\n  /*\n  Sanitize and provide default for the container height.\n  */\n\n\n  nv.utils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n  };\n  /*\n  Sanitize and provide default for the container width.\n  */\n\n\n  nv.utils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n  };\n  /*\n  Calculate the available height for a chart.\n  */\n\n\n  nv.utils.availableHeight = function (height, container, margin) {\n    return Math.max(0, nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n  };\n  /*\n  Calculate the available width for a chart.\n  */\n\n\n  nv.utils.availableWidth = function (width, container, margin) {\n    return Math.max(0, nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n  };\n  /*\n  Clear any rendered chart components and display a chart's 'noData' message\n  */\n\n\n  nv.utils.noData = function (chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = noData == null ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width / 2,\n        y = margin.top + height / 2; //Remove any previously created chart components\n\n    container.selectAll('g').remove();\n    var noDataText = container.selectAll('.nv-noData').data(data);\n    noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n    noDataText.attr('x', x).attr('y', y).text(function (t) {\n      return t;\n    });\n  };\n  /*\n   Wrap long labels.\n   */\n\n\n  nv.utils.wrapTicks = function (text, width) {\n    text.each(function () {\n      var text = d3.select(this),\n          words = text.text().split(/\\s+/).reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1.1,\n          y = text.attr(\"y\"),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n      while (word = words.pop()) {\n        line.push(word);\n        tspan.text(line.join(\" \"));\n\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\" \"));\n          line = [word];\n          tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n        }\n      }\n    });\n  };\n  /*\n  Check equality of 2 array\n  */\n\n\n  nv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2) return true;\n    if (!array1 || !array2) return false; // compare lengths - can save a lot of time\n\n    if (array1.length != array2.length) return false;\n\n    for (var i = 0, l = array1.length; i < l; i++) {\n      // Check if we have nested arrays\n      if (array1[i] instanceof Array && array2[i] instanceof Array) {\n        // recurse into the nested arrays\n        if (!nv.arrayEquals(array1[i], array2[i])) return false;\n      } else if (array1[i] != array2[i]) {\n        // Warning - two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /*\n   Check if a point within an arc\n   */\n\n\n  nv.utils.pointIsInArc = function (pt, ptData, d3Arc) {\n    // Center of the arc is assumed to be 0,0\n    // (pt.x, pt.y) are assumed to be relative to the center\n    var r1 = d3Arc.innerRadius()(ptData),\n        // Note: Using the innerRadius\n    r2 = d3Arc.outerRadius()(ptData),\n        theta1 = d3Arc.startAngle()(ptData),\n        theta2 = d3Arc.endAngle()(ptData);\n    var dist = pt.x * pt.x + pt.y * pt.y,\n        angle = Math.atan2(pt.x, -pt.y); // Note: different coordinate system.\n\n    angle = angle < 0 ? angle + Math.PI * 2 : angle;\n    return r1 * r1 <= dist && dist <= r2 * r2 && theta1 <= angle && angle <= theta2;\n  };\n\n  nv.models.axis = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 75 //only used for tickLabel currently\n    ,\n        height = 60 //only used for tickLabel currently\n    ,\n        axisLabelText = null,\n        showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n    ,\n        rotateLabels = 0,\n        rotateYLabel = true,\n        staggerLabels = false,\n        isOrdinal = false,\n        ticks = null,\n        axisLabelDistance = 0,\n        fontSize = undefined,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'),\n        tickFormatMaxMin;\n    axis.scale(scale).orient('bottom').tickFormat(function (d) {\n      return d;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        if (ticks !== null) axis.ticks(ticks);else if (axis.orient() == 'top' || axis.orient() == 'bottom') axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100); //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\n        g.watchTransition(renderWatch, 'axis').call(axis);\n        scale0 = scale0 || axis.scale();\n        var fmt = axis.tickFormat();\n\n        if (fmt == null) {\n          fmt = scale0.tickFormat();\n        }\n\n        var axisLabel = g.selectAll('text.nv-axislabel').data([axisLabelText || null]);\n        axisLabel.exit().remove(); //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\n        if (fontSize !== undefined) {\n          g.selectAll('g').select(\"text\").style('font-size', fontSize);\n        }\n\n        var xLabelMargin;\n        var axisMaxMin;\n        var w;\n\n        switch (axis.orient()) {\n          case 'top':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', 0).attr('x', w / 2);\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)';\n              }).select('text').attr('dy', '-0.5em').attr('y', -axis.tickPadding()).attr('text-anchor', 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max top').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'bottom':\n            xLabelMargin = axisLabelDistance + 36;\n            var maxTextWidth = 30;\n            var textHeight = 0;\n            var xTicks = g.selectAll('g').select(\"text\");\n            var rotateLabelsRule = '';\n\n            if (rotateLabels % 360) {\n              //Reset transform on ticks so textHeight can be calculated correctly\n              xTicks.attr('transform', ''); //Calculate the longest xTick width\n\n              xTicks.each(function (d, i) {\n                var box = this.getBoundingClientRect();\n                var width = box.width;\n                textHeight = box.height;\n                if (width > maxTextWidth) maxTextWidth = width;\n              });\n              rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight / 2 + axis.tickPadding()) + ')'; //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\n              var sin = Math.abs(Math.sin(rotateLabels * Math.PI / 180));\n              xLabelMargin = (sin ? sin * maxTextWidth : maxTextWidth) + 30; //Rotate all xTicks\n\n              xTicks.attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels % 360 > 0 ? 'start' : 'end');\n            } else {\n              if (staggerLabels) {\n                xTicks.attr('transform', function (d, i) {\n                  return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')';\n                });\n              } else {\n                xTicks.attr('transform', \"translate(0,0)\");\n              }\n            }\n\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', xLabelMargin).attr('x', w / 2);\n\n            if (showMaxMin) {\n              //if (showMaxMin && !isOrdinal) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin') //.data(scale.domain())\n              .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              }).select('text').attr('dy', '.71em').attr('y', axis.tickPadding()).attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels ? rotateLabels % 360 > 0 ? 'start' : 'end' : 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max bottom').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'right':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'begin').attr('transform', rotateYLabel ? 'rotate(90)' : '').attr('y', rotateYLabel ? -Math.max(margin.right, width) + 12 - (axisLabelDistance || 0) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n            .attr('x', rotateYLabel ? d3.max(scale.range()) / 2 : axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', axis.tickPadding()).style('text-anchor', 'start').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n\n          case 'left':\n            /*\n             //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n             var yTicks = g.selectAll('g').select(\"text\");\n             yTicks.each(function(d,i){\n             var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n             if(labelPadding > width) width = labelPadding;\n             });\n             */\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'end').attr('transform', rotateYLabel ? 'rotate(-90)' : '').attr('y', rotateYLabel ? -Math.max(margin.left, width) + 25 - (axisLabelDistance || 0) : -10).attr('x', rotateYLabel ? -d3.max(scale.range()) / 2 : -axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', -axis.tickPadding()).attr('text-anchor', 'end').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n        }\n\n        axisLabel.text(function (d) {\n          return d;\n        });\n\n        if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n          //check if max and min overlap other values, if so, hide the values that overlap\n          g.selectAll('g') // the g's wrapping each tick\n          .each(function (d, i) {\n            d3.select(this).select('text').attr('opacity', 1);\n\n            if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) {\n              // 10 is assuming text height is 16... if d is 0, leave it!\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).attr('opacity', 0);\n              d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n            }\n          }); //if Max and Min = 0 only show min, Issue #281\n\n          if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n            wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n              return !i ? 1 : 0;\n            });\n          }\n        }\n\n        if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n          var maxMinRange = [];\n          wrap.selectAll('g.nv-axisMaxMin').each(function (d, i) {\n            try {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4);\n            } catch (err) {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + 4);\n            }\n          }); // the g's wrapping each tick\n\n          g.selectAll('g').each(function (d, i) {\n            if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).remove();else d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n            }\n          });\n        } //Highlight zero tick line\n\n\n        g.selectAll('.tick').filter(function (d) {\n          /*\n          The filter needs to return only ticks at or near zero.\n          Numbers like 0.00001 need to count as zero as well,\n          and the arithmetic trick below solves that.\n          */\n          return !parseFloat(Math.round(d * 100000) / 1000000) && d !== undefined;\n        }).classed('zero', true); //store old scales for use in transitions on update\n\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('axis immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      axisLabelDistance: {\n        get: function get() {\n          return axisLabelDistance;\n        },\n        set: function set(_) {\n          axisLabelDistance = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      rotateYLabel: {\n        get: function get() {\n          return rotateYLabel;\n        },\n        set: function set(_) {\n          rotateYLabel = _;\n        }\n      },\n      showMaxMin: {\n        get: function get() {\n          return showMaxMin;\n        },\n        set: function set(_) {\n          showMaxMin = _;\n        }\n      },\n      axisLabel: {\n        get: function get() {\n          return axisLabelText;\n        },\n        set: function set(_) {\n          axisLabelText = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      fontSize: {\n        get: function get() {\n          return fontSize;\n        },\n        set: function set(_) {\n          fontSize = _;\n        }\n      },\n      tickFormatMaxMin: {\n        get: function get() {\n          return tickFormatMaxMin;\n        },\n        set: function set(_) {\n          tickFormatMaxMin = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      scale: {\n        get: function get() {\n          return scale;\n        },\n        set: function set(_) {\n          scale = _;\n          axis.scale(scale);\n          isOrdinal = typeof scale.rangeBands === 'function';\n          nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n    return chart;\n  };\n\n  nv.models.boxPlot = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000),\n        // Create semi-unique ID in case user doesn't select one\n    xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.label;\n    },\n        // Default data model selectors.\n    getQ1 = function getQ1(d) {\n      return d.values.Q1;\n    },\n        getQ2 = function getQ2(d) {\n      return d.values.Q2;\n    },\n        getQ3 = function getQ3(d) {\n      return d.values.Q3;\n    },\n        getWl = function getWl(d) {\n      return d.values.whisker_low;\n    },\n        getWh = function getWh(d) {\n      return d.values.whisker_high;\n    },\n        getColor = function getColor(d) {\n      return d.color;\n    },\n        getOlItems = function getOlItems(d) {\n      return d.values.outliers;\n    },\n        getOlValue = function getOlValue(d, i, j) {\n      return d;\n    },\n        getOlLabel = function getOlLabel(d, i, j) {\n      return d;\n    },\n        getOlColor = function getOlColor(d, i, j) {\n      return undefined;\n    },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain,\n        xRange,\n        yDomain,\n        yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        xScale.domain(xDomain || data.map(function (d, i) {\n          return getX(d, i);\n        })).rangeBands(xRange || [0, availableWidth], 0.1); // if we know yDomain, no need to calculate\n\n        var yData = [];\n\n        if (!yDomain) {\n          // (y-range is based on quartiles, whiskers and outliers)\n          var values = [],\n              yMin,\n              yMax;\n          data.forEach(function (d, i) {\n            var q1 = getQ1(d),\n                q3 = getQ3(d),\n                wl = getWl(d),\n                wh = getWh(d);\n            var olItems = getOlItems(d);\n\n            if (olItems) {\n              olItems.forEach(function (e, i) {\n                values.push(getOlValue(e, i, undefined));\n              });\n            }\n\n            if (wl) {\n              values.push(wl);\n            }\n\n            if (q1) {\n              values.push(q1);\n            }\n\n            if (q3) {\n              values.push(q3);\n            }\n\n            if (wh) {\n              values.push(wh);\n            }\n          });\n          yMin = d3.min(values);\n          yMax = d3.max(values);\n          yData = [yMin, yMax];\n        }\n\n        yScale.domain(yDomain || yData);\n        yScale.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        xScale0 = xScale0 || xScale;\n        yScale0 = yScale0 || yScale.copy().range([yScale(0), yScale(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var boxplots = wrap.selectAll('.nv-boxplot').data(function (d) {\n          return d;\n        });\n        var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        boxplots.attr('class', 'nv-boxplot').attr('transform', function (d, i, j) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        boxplots.watchTransition(renderWatch, 'nv-boxplot: boxplots').style('stroke-opacity', 1).style('fill-opacity', 0.75).delay(function (d, i) {\n          return i * duration / data.length;\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        });\n        boxplots.exit().remove(); // ----- add the SVG elements for each boxPlot -----\n        // conditionally append whisker lines\n\n        boxEnter.each(function (d, i) {\n          var box = d3.select(this);\n          [getWl, getWh].forEach(function (f) {\n            if (f(d) !== undefined && f(d) !== null) {\n              var key = f === getWl ? 'low' : 'high';\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n            }\n          });\n        });\n\n        var box_width = function box_width() {\n          return maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9);\n        };\n\n        var box_left = function box_left() {\n          return xScale.rangeBand() * 0.45 - box_width() / 2;\n        };\n\n        var box_right = function box_right() {\n          return xScale.rangeBand() * 0.45 + box_width() / 2;\n        }; // update whisker lines and ticks\n\n\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          var endpoint = f === getWl ? getQ1 : getQ3;\n          boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', xScale.rangeBand() * 0.45).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', xScale.rangeBand() * 0.45).attr('y2', function (d, i) {\n            return yScale(endpoint(d));\n          });\n          boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', box_left).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', box_right).attr('y2', function (d, i) {\n            return yScale(f(d));\n          });\n        });\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          boxEnter.selectAll('.nv-boxplot-' + key).on('mouseover', function (d, i, j) {\n            d3.select(this).classed('hover', true);\n            dispatch.elementMouseover({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mouseout', function (d, i, j) {\n            d3.select(this).classed('hover', false);\n            dispatch.elementMouseout({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mousemove', function (d, i) {\n            dispatch.elementMousemove({\n              e: d3.event\n            });\n          });\n        }); // boxes\n\n        boxEnter.append('rect').attr('class', 'nv-boxplot-box') // tooltip events\n        .on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        }); // box transitions\n\n        boxplots.select('rect.nv-boxplot-box').watchTransition(renderWatch, 'nv-boxplot: boxes').attr('y', function (d, i) {\n          return yScale(getQ3(d));\n        }).attr('width', box_width).attr('x', box_left).attr('height', function (d, i) {\n          return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1;\n        }).style('fill', function (d, i) {\n          return getColor(d) || color(d, i);\n        }).style('stroke', function (d, i) {\n          return getColor(d) || color(d, i);\n        }); // median line\n\n        boxEnter.append('line').attr('class', 'nv-boxplot-median');\n        boxplots.select('line.nv-boxplot-median').watchTransition(renderWatch, 'nv-boxplot: boxplots line').attr('x1', box_left).attr('y1', function (d, i) {\n          return yScale(getQ2(d));\n        }).attr('x2', box_right).attr('y2', function (d, i) {\n          return yScale(getQ2(d));\n        }); // outliers\n\n        var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function (d) {\n          return getOlItems(d) || [];\n        });\n        outliers.enter().append('circle').style('fill', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('stroke', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('z-index', 9000).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        });\n        outliers.attr('class', 'nv-boxplot-outlier');\n        outliers.watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier').attr('cx', xScale.rangeBand() * 0.45).attr('cy', function (d, i, j) {\n          return yScale(getOlValue(d, i, j));\n        }).attr('r', '3');\n        outliers.exit().remove(); //store old scales for use in transitions on update\n\n        xScale0 = xScale.copy();\n        yScale0 = yScale.copy();\n      });\n      renderWatch.renderEnd('nv-boxplot immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      maxBoxWidth: {\n        get: function get() {\n          return maxBoxWidth;\n        },\n        set: function set(_) {\n          maxBoxWidth = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      q1: {\n        get: function get() {\n          return getQ1;\n        },\n        set: function set(_) {\n          getQ1 = _;\n        }\n      },\n      q2: {\n        get: function get() {\n          return getQ2;\n        },\n        set: function set(_) {\n          getQ2 = _;\n        }\n      },\n      q3: {\n        get: function get() {\n          return getQ3;\n        },\n        set: function set(_) {\n          getQ3 = _;\n        }\n      },\n      wl: {\n        get: function get() {\n          return getWl;\n        },\n        set: function set(_) {\n          getWl = _;\n        }\n      },\n      wh: {\n        get: function get() {\n          return getWh;\n        },\n        set: function set(_) {\n          getWh = _;\n        }\n      },\n      itemColor: {\n        get: function get() {\n          return getColor;\n        },\n        set: function set(_) {\n          getColor = _;\n        }\n      },\n      outliers: {\n        get: function get() {\n          return getOlItems;\n        },\n        set: function set(_) {\n          getOlItems = _;\n        }\n      },\n      outlierValue: {\n        get: function get() {\n          return getOlValue;\n        },\n        set: function set(_) {\n          getOlValue = _;\n        }\n      },\n      outlierLabel: {\n        get: function get() {\n          return getOlLabel;\n        },\n        set: function set(_) {\n          getOlLabel = _;\n        }\n      },\n      outlierColor: {\n        get: function get() {\n          return getOlColor;\n        },\n        set: function set(_) {\n          getOlColor = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return xScale;\n        },\n        set: function set(_) {\n          xScale = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return yScale;\n        },\n        set: function set(_) {\n          yScale = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n      y: {\n        get: function get() {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n          return {};\n        },\n        set: function set(_) {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.boxPlotChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x,\n        y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(boxplot);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = (width || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n        var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n        // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\n        if (!data || !data.length) {\n          var noDataText = container.selectAll('.nv-noData').data([noData]);\n          noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n          noDataText.attr('x', margin.left + availableWidth / 2).attr('y', margin.top + availableHeight / 2).text(function (d) {\n            return d;\n          });\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = boxplot.xScale();\n        y = boxplot.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(' + availableWidth + ',0)');\n        } // Main Chart Component(s)\n\n\n        boxplot.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(boxplot);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + boxplot.id()).append('rect');\n        g.select('#nv-x-label-clip-' + boxplot.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x).ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')';\n            });\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y).ticks(Math.floor(availableHeight / 36)) // can't use nv.utils.calcTicksY with Object data\n          .tickSize(-availableWidth, 0);\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select('.nv-zeroLine line').attr('x1', 0).attr('x2', availableWidth).attr('y1', y(0)).attr('y2', y(0)); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n      });\n      renderWatch.renderEnd('nv-boxplot chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.data(evt).hidden(false);\n    });\n    boxplot.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.data(evt).hidden(true);\n    });\n    boxplot.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      tooltipContent: {\n        get: function get() {\n          return tooltip;\n        },\n        set: function set(_) {\n          tooltip = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          boxplot.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          boxplot.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bullet = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        markerLines = function markerLines(d) {\n      return d.markerLines ? d.markerLines : [0];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        rangeLabels = function rangeLabels(d) {\n      return d.rangeLabels ? d.rangeLabels : [];\n    },\n        markerLabels = function markerLabels(d) {\n      return d.markerLabels ? d.markerLabels : [];\n    },\n        markerLineLabels = function markerLineLabels(d) {\n      return d.markerLineLabels ? d.markerLineLabels : [];\n    },\n        measureLabels = function measureLabels(d) {\n      return d.measureLabels ? d.measureLabels : [];\n    },\n        forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        width = 380,\n        height = 30,\n        container = null,\n        tickFormat = null,\n        color = nv.utils.getColor(['#1f77b4']),\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove'),\n        defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"],\n        legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"],\n        duration = 1000;\n\n    function sortLabels(labels, values) {\n      var lz = labels.slice();\n      labels.sort(function (a, b) {\n        var iA = lz.indexOf(a);\n        var iB = lz.indexOf(b);\n        return d3.descending(values[iA], values[iB]);\n      });\n    }\n\n    ;\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var rangez = ranges.call(this, d, i).slice(),\n            markerz = markers.call(this, d, i).slice(),\n            markerLinez = markerLines.call(this, d, i).slice(),\n            measurez = measures.call(this, d, i).slice(),\n            rangeLabelz = rangeLabels.call(this, d, i).slice(),\n            markerLabelz = markerLabels.call(this, d, i).slice(),\n            markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n            measureLabelz = measureLabels.call(this, d, i).slice(); // Sort labels according to their sorted values\n\n        sortLabels(rangeLabelz, rangez);\n        sortLabels(markerLabelz, markerz);\n        sortLabels(markerLineLabelz, markerLinez);\n        sortLabels(measureLabelz, measurez); // sort values descending\n\n        rangez.sort(d3.descending);\n        markerz.sort(d3.descending);\n        markerLinez.sort(d3.descending);\n        measurez.sort(d3.descending); // Setup Scales\n        // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain(d3.extent(d3.merge([forceX, rangez]))).range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n        var rangeMin = d3.min(rangez),\n            //rangez[2]\n        rangeMax = d3.max(rangez),\n            //rangez[0]\n        rangeAvg = rangez[1]; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var rangeClassNames = 'nv-range nv-range' + i;\n\n          if (i <= 2) {\n            rangeClassNames = rangeClassNames + ' nv-range' + legacyRangeClassNames[i];\n          }\n\n          gEnter.append('rect').attr('class', rangeClassNames);\n        }\n\n        gEnter.append('rect').attr('class', 'nv-measure');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var xp0 = function xp0(d) {\n          return d < 0 ? x0(d) : x0(0);\n        },\n            xp1 = function xp1(d) {\n          return d < 0 ? x1(d) : x1(0);\n        };\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var range = rangez[i];\n          g.select('rect.nv-range' + i).datum(range).attr('height', availableHeight).transition().duration(duration).attr('width', w1(range)).attr('x', xp1(range));\n        }\n\n        g.select('rect.nv-measure').style('fill', color).attr('height', availableHeight / 3).attr('y', availableHeight / 3).on('mouseover', function () {\n          dispatch.elementMouseover({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function () {\n          dispatch.elementMouseout({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).transition().duration(duration).attr('width', measurez < 0 ? x1(0) - x1(measurez[0]) : x1(measurez[0]) - x1(0)).attr('x', xp1(measurez));\n        var h3 = availableHeight / 6;\n        var markerData = markerz.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"path.nv-markerTriangle\").data(markerData).enter().append('path').attr('class', 'nv-markerTriangle').attr('d', 'M0,' + h3 + 'L' + h3 + ',' + -h3 + ' ' + -h3 + ',' + -h3 + 'Z').on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"path.nv-markerTriangle\").data(markerData).transition().duration(duration).attr('transform', function (d) {\n          return 'translate(' + x1(d.value) + ',' + availableHeight / 2 + ')';\n        });\n        var markerLinesData = markerLinez.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLineLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"line.nv-markerLine\").data(markerLinesData).enter().append('line').attr('cursor', '').attr('class', 'nv-markerLine').attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('y1', '2').attr('x2', function (d) {\n          return x1(d.value);\n        }).attr('y2', availableHeight - 2).on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"line.nv-markerLine\").data(markerLinesData).transition().duration(duration).attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('x2', function (d) {\n          return x1(d.value);\n        });\n        wrap.selectAll('.nv-range').on('mouseover', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseover({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseout({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bulletChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        margin = {\n      top: 5,\n      right: 40,\n      bottom: 20,\n      left: 120\n    },\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        width = null,\n        height = 55,\n        tickFormat = null,\n        ticks = null,\n        noData = null,\n        dispatch = d3.dispatch();\n\n    tooltip.duration(0).headerEnabled(false);\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom,\n            that = this;\n\n        chart.update = function () {\n          chart(selection);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!d || !ranges.call(this, d, i)) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n            markerz = markers.call(this, d, i).slice().sort(d3.descending),\n            measurez = measures.call(this, d, i).slice().sort(d3.descending); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bulletWrap');\n        gEnter.append('g').attr('class', 'nv-titles');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain([0, Math.max(rangez[0], markerz[0] || 0, measurez[0])]) // TODO: need to allow forceX and forceY, and xDomain, yDomain\n        .range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var title = gEnter.select('.nv-titles').append('g').attr('text-anchor', 'end').attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n        title.append('text').attr('class', 'nv-title').text(function (d) {\n          return d.title;\n        });\n        title.append('text').attr('class', 'nv-subtitle').attr('dy', '1em').text(function (d) {\n          return d.subtitle;\n        });\n        bullet.width(availableWidth).height(availableHeight);\n        var bulletWrap = g.select('.nv-bulletWrap');\n        d3.transition(bulletWrap).call(bullet); // Compute the tick format.\n\n        var format = tickFormat || x1.tickFormat(availableWidth / 100); // Update the tick groups.\n\n        var tick = g.selectAll('g.nv-tick').data(x1.ticks(ticks ? ticks : availableWidth / 50), function (d) {\n          return this.textContent || format(d);\n        }); // Initialize the ticks with the old scale, x0.\n\n        var tickEnter = tick.enter().append('g').attr('class', 'nv-tick').attr('transform', function (d) {\n          return 'translate(' + x0(d) + ',0)';\n        }).style('opacity', 1e-6);\n        tickEnter.append('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickEnter.append('text').attr('text-anchor', 'middle').attr('dy', '1em').attr('y', availableHeight * 7 / 6).text(format); // Transition the updating ticks to the new scale, x1.\n\n        var tickUpdate = d3.transition(tick).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1);\n        tickUpdate.select('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickUpdate.select('text').attr('y', availableHeight * 7 / 6); // Transition the exiting ticks to the new scale, x1.\n\n        d3.transition(tick.exit()).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1e-6).remove();\n      });\n      d3.timer.flush();\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bullet.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: evt.label,\n        value: evt.value,\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bullet.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bullet.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.candlestickBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Width of the candlestick bars.\n\n        var barWidth = availableWidth / data[0].values.length * .45; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        var tickGroups = ticks.enter().append('g'); // The colors are currently controlled by CSS.\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        var lines = tickGroups.append('line').attr('class', 'nv-candlestick-lines').attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        var rects = tickGroups.append('rect').attr('class', 'nv-candlestick-rects nv-bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n        ticks.select('.nv-candlestick-lines').transition().attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        ticks.select('.nv-candlestick-rects').transition().attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-candlestickBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.cumulativeLineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        showControls = true,\n        useInteractiveGuideline = false,\n        rescaleY = true,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        id = lines.id(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        average = function average(d) {\n      return d.average;\n    },\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250,\n        duration = 250,\n        noErrorCheck = false //if set to TRUE, will bypass an error check in the indexify function.\n    ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear(),\n        index = {\n      i: 0,\n      x: 0\n    },\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        currentYDomain;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          index: index.i,\n          rescaleY: rescaleY\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.index !== undefined) index.i = state.index;\n        if (state.rescaleY !== undefined) rescaleY = state.rescaleY;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        container.classed('nv-chart-' + id, true);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        }\n\n        var indexDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd);\n\n        function dragStart(d, i) {\n          d3.select(chart.container).style('cursor', 'ew-resize');\n        }\n\n        function dragMove(d, i) {\n          index.x = d3.event.x;\n          index.i = Math.round(dx.invert(index.x));\n          updateZero();\n        }\n\n        function dragEnd(d, i) {\n          d3.select(chart.container).style('cursor', 'auto'); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = lines.xScale();\n        y = lines.yScale();\n        dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n        .range([0, availableWidth]).clamp(true);\n        var data = indexify(index.i, data); // initialize the starting yDomain for the not-rescale case after indexify (to have calculated point.display)\n\n        if (typeof currentYDomain === \"undefined\") {\n          currentYDomain = getCurrentYDomain(data);\n        }\n\n        if (!rescaleY) {\n          lines.yDomain(currentYDomain);\n          lines.clipEdge(true);\n        } else {\n          lines.yDomain(null);\n        } // Setup containers and skeleton of chart\n\n\n        var interactivePointerEvents = useInteractiveGuideline ? \"none\" : \"all\";\n        var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-background');\n        gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\", interactivePointerEvents);\n        gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: 'Re-scale y-axis',\n            disabled: !rescaleY\n          }];\n          controls.width(140).color(['#444', '#444', '#444']).rightAlign(false).margin({\n            top: 5,\n            right: 0,\n            bottom: 5,\n            left: 20\n          });\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Show error if index point value is 0 (division by zero avoided)\n\n\n        var tempDisabled = data.filter(function (d) {\n          return d.tempDisabled;\n        });\n        wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\n        if (tempDisabled.length) {\n          wrap.append('text').attr('class', 'tempDisabled').attr('x', availableWidth / 2).attr('y', '-.71em').style('text-anchor', 'end').text(tempDisabled.map(function (d) {\n            return d.key;\n          }).join(', ') + ' values cannot be calculated for this time period.');\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        gEnter.select('.nv-background').append('rect');\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines //.x(function(d) { return d.x })\n        .y(function (d) {\n          return d.display.y;\n        }).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].tempDisabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled && !d.tempDisabled;\n        }));\n        linesWrap.call(lines); //Store a series index number in the data array.\n\n        data.forEach(function (d, i) {\n          d.seriesIndex = i;\n        });\n        var avgLineData = data.filter(function (d) {\n          return !d.disabled && !!average(d);\n        });\n        var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\").data(avgLineData, function (d) {\n          return d.key;\n        });\n\n        var getAvgLineY = function getAvgLineY(d) {\n          //If average lines go off the svg element, clamp them to the svg bounds.\n          var yVal = y(average(d));\n          if (yVal < 0) return 0;\n          if (yVal > availableHeight) return availableHeight;\n          return yVal;\n        };\n\n        avgLines.enter().append('line').style('stroke-width', 2).style('stroke-dasharray', '10,10').style('stroke', function (d, i) {\n          return lines.color()(d, d.seriesIndex);\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.style('stroke-opacity', function (d) {\n          //If average lines go offscreen, make them transparent\n          var yVal = y(average(d));\n          if (yVal < 0 || yVal > availableHeight) return 0;\n          return 1;\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.exit().remove(); //Create index line\n\n        var indexLine = linesWrap.selectAll('.nv-indexLine').data([index]);\n        indexLine.enter().append('rect').attr('class', 'nv-indexLine').attr('width', 3).attr('x', -2).attr('fill', 'red').attr('fill-opacity', .5).style(\"pointer-events\", \"all\").call(indexDrag);\n        indexLine.attr('transform', function (d) {\n          return 'translate(' + dx(d.i) + ',0)';\n        }).attr('height', availableHeight); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 70, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        function updateZero() {\n          indexLine.data([index]); //When dragging the index line, turn off line transitions.\n          // Then turn them back on when done dragging.\n\n          var oldDuration = chart.duration();\n          chart.duration(0);\n          chart.update();\n          chart.duration(oldDuration);\n        }\n\n        g.select('.nv-background rect').on('click', function () {\n          index.x = d3.mouse(this)[0];\n          index.i = Math.round(dx.invert(index.x)); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        lines.dispatch.on('elementClick', function (e) {\n          index.i = e.pointIndex;\n          index.x = dx(index.i); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n          rescaleY = !d.disabled;\n          state.rescaleY = rescaleY;\n\n          if (!rescaleY) {\n            currentYDomain = getCurrentYDomain(data); // rescale is turned off, so set the currentYDomain\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !(series.disabled || series.tempDisabled);\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            lines.highlightPoint(i, pointIndex, true);\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex)\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex), pointIndex);\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.index !== 'undefined') {\n            index.i = e.index;\n            index.x = dx(index.i);\n            state.index = e.index;\n            indexLine.data([index]);\n          }\n\n          if (typeof e.rescaleY !== 'undefined') {\n            rescaleY = e.rescaleY;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('cumulativeLineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var point = {\n        x: chart.x()(evt.point),\n        y: chart.y()(evt.point),\n        color: evt.point.color\n      };\n      evt.point = point;\n      tooltip.data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n\n    function indexify(idx, data) {\n      if (!indexifyYGetter) indexifyYGetter = lines.y();\n      return data.map(function (line, i) {\n        if (!line.values) {\n          return line;\n        }\n\n        var indexValue = line.values[idx];\n\n        if (indexValue == null) {\n          return line;\n        }\n\n        var v = indexifyYGetter(indexValue, idx); // avoid divide by zero\n\n        if (Math.abs(v) < 0.00001 && !noErrorCheck) {\n          line.tempDisabled = true;\n          return line;\n        }\n\n        line.tempDisabled = false;\n        line.values = line.values.map(function (point, pointIndex) {\n          point.display = {\n            'y': (indexifyYGetter(point, pointIndex) - v) / v\n          };\n          return point;\n        });\n        return line;\n      });\n    }\n\n    function getCurrentYDomain(data) {\n      var seriesDomains = data.filter(function (series) {\n        return !(series.disabled || series.tempDisabled);\n      }).map(function (series, i) {\n        return d3.extent(series.values, function (d) {\n          return d.display.y;\n        });\n      });\n      return [d3.min(seriesDomains, function (d) {\n        return d[0];\n      }), d3.max(seriesDomains, function (d) {\n        return d[1];\n      })];\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      average: {\n        get: function get() {\n          return average;\n        },\n        set: function set(_) {\n          average = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noErrorCheck: {\n        get: function get() {\n          return noErrorCheck;\n        },\n        set: function set(_) {\n          noErrorCheck = _;\n        }\n      },\n      // options that require extra logic in the setter\n      rescaleY: {\n        get: function get() {\n          return rescaleY;\n        },\n        set: function set(_) {\n          rescaleY = _;\n          chart.state.rescaleY = _; // also update state\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n            chart.useVoronoi(false);\n          }\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          lines.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating by adding necessary features to multiBar model\n\n\n  nv.models.discreteBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        showValues = false,\n        valueFormat = d3.format(',.2f'),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        rectClass = 'discreteBar',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], .1);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return d.y;\n        }).concat(forceY))); // If showValues, pad the Y axis range to account for label height\n\n        if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);else y.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        x0 = x0 || x;\n        y0 = y0 || y.copy().range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'discreteBar: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'discreteBar: groups').style('stroke-opacity', 1).style('fill-opacity', .75);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + (x(getX(d, i)) + x.rangeBand() * .05) + ', ' + y(0) + ')';\n        }).on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        barsEnter.append('rect').attr('height', 0).attr('width', x.rangeBand() * .9 / data.length);\n\n        if (showValues) {\n          barsEnter.append('text').attr('text-anchor', 'middle');\n          bars.select('text').text(function (d, i) {\n            return valueFormat(getY(d, i));\n          }).watchTransition(renderWatch, 'discreteBar: bars text').attr('x', x.rangeBand() * .9 / 2).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(getY(d, i)) - y(0) + 12 : -4;\n          });\n        } else {\n          bars.selectAll('text').remove();\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).style('fill', function (d, i) {\n          return d.color || color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).select('rect').attr('class', rectClass).watchTransition(renderWatch, 'discreteBar: bars rect').attr('width', x.rangeBand() * .9 / data.length);\n        bars.watchTransition(renderWatch, 'discreteBar: bars') //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n        .attr('transform', function (d, i) {\n          var left = x(getX(d, i)) + x.rangeBand() * .05,\n              top = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : //make 1 px positive bars show up above y=0\n          y(getY(d, i));\n          return 'translate(' + left + ', ' + top + ')';\n        }).select('rect').attr('height', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('discreteBar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      rectClass: {\n        get: function get() {\n          return rectClass;\n        },\n        set: function set(_) {\n          rectClass = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.discreteBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x,\n        y,\n        noData = null,\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).keyFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(discretebar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = discretebar.xScale();\n        y = discretebar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        discretebar.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(discretebar);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + discretebar.id()).append('rect');\n        g.select('#nv-x-label-clip-' + discretebar.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + (y.range()[0] + (discretebar.showValues() && y.domain()[0] < 0 ? 16 : 0)) + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')';\n            });\n          }\n\n          if (rotateLabels) {\n            xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", 0).attr(\"x2\", rightAlignYAxis ? -availableWidth : availableWidth).attr(\"y1\", y(0)).attr(\"y2\", y(0));\n      });\n      renderWatch.renderEnd('discreteBar chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    discretebar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    discretebar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          discretebar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          discretebar.color(color);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.distribution = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 400 //technically width or height depending on x or y....\n    ,\n        size = 8,\n        axis = 'x' // 'x' or 'y'... horizontal or vertical\n    ,\n        getData = function getData(d) {\n      return d[axis];\n    } // defaults d.x or d.y\n    ,\n        color = nv.utils.defaultColor(),\n        scale = d3.scale.linear(),\n        domain,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n            naxis = axis == 'x' ? 'y' : 'x',\n            container = d3.select(this);\n        nv.utils.initSVG(container); //------------------------------------------------------------\n        // Setup Scales\n\n        scale0 = scale0 || scale; //------------------------------------------------------------\n        //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-distribution').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //------------------------------------------------------------\n\n        var distWrap = g.selectAll('g.nv-dist').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        distWrap.enter().append('g');\n        distWrap.attr('class', function (d, i) {\n          return 'nv-dist nv-series-' + i;\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        var dist = distWrap.selectAll('line.nv-dist' + axis).data(function (d) {\n          return d.values;\n        });\n        dist.enter().append('line').attr(axis + '1', function (d, i) {\n          return scale0(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale0(getData(d, i));\n        });\n        renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        }).style('stroke-opacity', 0).remove();\n        dist.attr('class', function (d, i) {\n          return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i;\n        }).attr(naxis + '1', 0).attr(naxis + '2', size);\n        renderWatch.transition(dist, 'dist') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        });\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('distribution immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n      margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return chart;\n    };\n\n    chart.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return chart;\n    };\n\n    chart.axis = function (_) {\n      if (!arguments.length) return axis;\n      axis = _;\n      return chart;\n    };\n\n    chart.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return chart;\n    };\n\n    chart.getData = function (_) {\n      if (!arguments.length) return getData;\n      getData = d3.functor(_);\n      return chart;\n    };\n\n    chart.scale = function (_) {\n      if (!arguments.length) return scale;\n      scale = _;\n      return chart;\n    };\n\n    chart.color = function (_) {\n      if (!arguments.length) return color;\n      color = nv.utils.getColor(_);\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      return chart;\n    }; //============================================================\n\n\n    return chart;\n  };\n\n  nv.models.focus = function (content) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        brush = d3.svg.brush();\n    var margin = {\n      top: 10,\n      right: 0,\n      bottom: 30,\n      left: 0\n    },\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = 70,\n        showXAxis = true,\n        showYAxis = false,\n        rightAlignYAxis = false,\n        ticks = null,\n        x,\n        y,\n        brushExtent = null,\n        duration = 250,\n        dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd'),\n        syncBrushing = true;\n    content.interactive(false);\n    content.pointActive(function (d) {\n      return false;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(content);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom;\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this; // Setup Scales\n\n        x = content.xScale();\n        y = content.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-focus').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        gEnter.append('g').attr('class', 'nv-background').append('rect');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-contentWrap');\n        gEnter.append('g').attr('class', 'nv-brushBackground');\n        gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        }\n\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        content.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var contentWrap = g.select('.nv-contentWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        d3.transition(contentWrap).call(content); // Setup Brush\n\n        brush.x(x).on('brush', function () {\n          onBrush(syncBrushing);\n        });\n        brush.on('brushend', function () {\n          if (!syncBrushing) {\n            dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n          }\n        });\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect').attr('height', availableHeight);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n        onBrush(true);\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          d3.transition(g.select('.nv-y.nv-axis')).call(yAxis);\n        }\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')'); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x(d[0]) - x.range()[0],\n                rightWidth = availableWidth - x(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush(shouldDispatch) {\n          brushExtent = brush.empty() ? null : brush.extent();\n          var extent = brush.empty() ? x.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG();\n\n          if (shouldDispatch) {\n            dispatch.onBrush(extent);\n          }\n        }\n      });\n      renderWatch.renderEnd('focus immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      syncBrushing: {\n        get: function get() {\n          return syncBrushing;\n        },\n        set: function set(_) {\n          syncBrushing = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          content.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          content.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return content.interpolate();\n        },\n        set: function set(_) {\n          content.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return content.x();\n        },\n        set: function set(_) {\n          content.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return content.y();\n        },\n        set: function set(_) {\n          content.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.forceDirectedGraph = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        dispatch = d3.dispatch('renderEnd'),\n        color = nv.utils.getColor(['#000']),\n        tooltip = nv.models.tooltip(),\n        noData = null // Force directed graph specific parameters [default values]\n    ,\n        linkStrength = 0.1,\n        friction = 0.9,\n        linkDist = 30,\n        charge = -120,\n        gravity = 0.1,\n        theta = 0.8,\n        alpha = 0.1,\n        radius = 5 // These functions allow to add extra attributes to ndes and links\n    ,\n        nodeExtras = function nodeExtras(nodes) {\n      /* Do nothing */\n    },\n        linkExtras = function linkExtras(links) {\n      /* Do nothing */\n    },\n        getX = d3.functor(0.0),\n        getY = d3.functor(0.0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        container.attr(\"width\", availableWidth).attr(\"height\", availableHeight); // Display No Data message if there's nothing to show.\n\n        if (!data || !data.links || !data.nodes) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        container.selectAll('*').remove(); // Collect names of all fields in the nodes\n\n        var nodeFieldSet = new Set();\n        data.nodes.forEach(function (node) {\n          var keys = Object.keys(node);\n          keys.forEach(function (key) {\n            nodeFieldSet.add(key);\n          });\n        });\n        var force = d3.layout.force().nodes(data.nodes).links(data.links).size([availableWidth, availableHeight]).linkStrength(linkStrength).friction(friction).linkDistance(linkDist).charge(charge).gravity(gravity).theta(theta).alpha(alpha).start();\n        var link = container.selectAll(\".link\").data(data.links).enter().append(\"line\").attr(\"class\", \"nv-force-link\").style(\"stroke-width\", function (d) {\n          return Math.sqrt(d.value);\n        });\n        var node = container.selectAll(\".node\").data(data.nodes).enter().append(\"g\").attr(\"class\", \"nv-force-node\").call(force.drag);\n        node.append(\"circle\").attr(\"r\", radius).style(\"fill\", function (d) {\n          return color(d);\n        }).on(\"mouseover\", function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.py);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.px); // Add 'series' object to\n\n          var nodeColor = color(evt);\n          evt.series = [];\n          nodeFieldSet.forEach(function (field) {\n            evt.series.push({\n              color: nodeColor,\n              key: field,\n              value: evt[field]\n            });\n          });\n          tooltip.data(evt).hidden(false);\n        }).on(\"mouseout\", function (d) {\n          tooltip.hidden(true);\n        });\n        tooltip.headerFormatter(function (d) {\n          return \"Node\";\n        }); // Apply extra attributes to nodes and links (if any)\n\n        linkExtras(link);\n        nodeExtras(node);\n        force.on(\"tick\", function () {\n          link.attr(\"x1\", function (d) {\n            return d.source.x;\n          }).attr(\"y1\", function (d) {\n            return d.source.y;\n          }).attr(\"x2\", function (d) {\n            return d.target.x;\n          }).attr(\"y2\", function (d) {\n            return d.target.y;\n          });\n          node.attr(\"transform\", function (d) {\n            return \"translate(\" + d.x + \", \" + d.y + \")\";\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      // Force directed graph specific parameters\n      linkStrength: {\n        get: function get() {\n          return linkStrength;\n        },\n        set: function set(_) {\n          linkStrength = _;\n        }\n      },\n      friction: {\n        get: function get() {\n          return friction;\n        },\n        set: function set(_) {\n          friction = _;\n        }\n      },\n      linkDist: {\n        get: function get() {\n          return linkDist;\n        },\n        set: function set(_) {\n          linkDist = _;\n        }\n      },\n      charge: {\n        get: function get() {\n          return charge;\n        },\n        set: function set(_) {\n          charge = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      theta: {\n        get: function get() {\n          return theta;\n        },\n        set: function set(_) {\n          theta = _;\n        }\n      },\n      alpha: {\n        get: function get() {\n          return alpha;\n        },\n        set: function set(_) {\n          alpha = _;\n        }\n      },\n      radius: {\n        get: function get() {\n          return radius;\n        },\n        set: function set(_) {\n          radius = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nodeExtras: {\n        get: function get() {\n          return nodeExtras;\n        },\n        set: function set(_) {\n          nodeExtras = _;\n        }\n      },\n      linkExtras: {\n        get: function get() {\n          return linkExtras;\n        },\n        set: function set(_) {\n          linkExtras = _;\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.furiousLegend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 28 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('circle');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('rect');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (vers == 'furious' && expanded) return;\n          dispatch.legendDblclick(d, i);\n\n          if (updateState) {\n            // make sure we re-get data in case it was modified\n            var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n            // is to set all other series' to false, and make the double clicked series enabled.\n\n            data.forEach(function (series) {\n              series.disabled = true;\n              if (vers == 'furious') series.userDisabled = series.disabled;\n            });\n            d.disabled = false;\n            if (vers == 'furious') d.userDisabled = d.disabled;\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              })\n            });\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var legendWidth = 0;\n          var columnWidths = [];\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15);\n        }\n\n        seriesShape.style('fill', setBGColor).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? color(d, i) : '#fff';\n        } else if (!expanded) {\n          return !!d.disabled ? color(d, i) : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#fff' : color(d, i);\n        } else {\n          return !!d.disabled ? '#fff' : color(d, i);\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating and using multibar with single series for this\n\n\n  nv.models.historicalBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceX = [],\n        forceY = [0],\n        padData = false,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        interactive = true;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bars');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var bars = wrap.select('.nv-bars').selectAll('.nv-bar').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return getX(d, i);\n        });\n        bars.exit().remove();\n        bars.enter().append('rect').attr('x', 0).attr('y', function (d, i) {\n          return nv.utils.NaNtoZero(y(Math.max(0, getY(d, i))));\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.abs(y(getY(d, i)) - y(0)));\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }).on('mouseover', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          if (!interactive) return;\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('fill', function (d, i) {\n          return color(d, i);\n        }).attr('class', function (d, i, j) {\n          return (getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i;\n        }).watchTransition(renderWatch, 'bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }) //TODO: better width calculations that don't assume always uniform data spacing;w\n        .attr('width', availableWidth / data[0].values.length * .9);\n        bars.watchTransition(renderWatch, 'bars').attr('y', function (d, i) {\n          var rval = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i));\n          return nv.utils.NaNtoZero(rval);\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d, i)) - y(0)), 1));\n        });\n      });\n      renderWatch.renderEnd('historicalBar immediate');\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      container.select(\".nv-bars .nv-bar-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-bars .nv-bar.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.historicalBarChart = function (bar_model) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 90,\n      bottom: 50,\n      left: 90\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        state = {},\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        renderWatch.models(bars);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this; //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = bars.xScale();\n        y = bars.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        bars.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(bars); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').transition().call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').transition().call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          bars.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            bars.highlightPoint(pointIndex, true);\n            var point = series.values[pointIndex];\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex),\n              data: series.values[pointIndex]\n            });\n          });\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex));\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          dispatch.tooltipHide();\n          bars.clearHighlights();\n        });\n        legend.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n\n          if (!data.filter(function (d) {\n            return !d.disabled;\n          }).length) {\n            data.map(function (d) {\n              d.disabled = false;\n              wrap.selectAll('.nv-series').classed('disabled', false);\n              return d;\n            });\n          }\n\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          selection.transition().call(chart);\n        });\n        legend.dispatch.on('legendDblclick', function (d) {\n          //Double clicking should always enable current series, and disabled all others.\n          data.forEach(function (d) {\n            d.disabled = true;\n          });\n          d.disabled = false;\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('historicalBarChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          bars.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n          renderWatch.reset(transitionDuration);\n          yAxis.duration(transitionDuration);\n          xAxis.duration(transitionDuration);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // ohlcChart is just a historical chart with ohlc bars and some tweaks\n\n\n  nv.models.ohlcBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  }; // candlestickChart is just a historical chart with candlestick bars and some tweaks\n\n\n  nv.models.candlestickBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  };\n\n  nv.models.legend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 32 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        enableDoubleClick = true //If true, legend will enable double click handling\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        if (rightAlign) wrap.attr('transform', 'translate(' + -margin.right + ',' + margin.top + ')');else wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('.nv-legend-symbol');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('.nv-legend-symbol');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (enableDoubleClick) {\n            if (vers == 'furious' && expanded) return;\n            dispatch.legendDblclick(d, i);\n\n            if (updateState) {\n              // make sure we re-get data in case it was modified\n              var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n              // is to set all other series' to false, and make the double clicked series enabled.\n\n              data.forEach(function (series) {\n                series.disabled = true;\n                if (vers == 'furious') series.userDisabled = series.disabled;\n              });\n              d.disabled = false;\n              if (vers == 'furious') d.userDisabled = d.disabled;\n              dispatch.stateChange({\n                disabled: data.map(function (d) {\n                  return !!d.disabled;\n                })\n              });\n            }\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var legendWidth = 0;\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var columnWidths = [];\n          legendWidth = 0;\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n\n            if (legendWidth < xpos + maxwidth) {\n              legendWidth = xpos + maxwidth;\n            }\n\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15); // The background for the expanded legend (UI)\n\n          gEnter.insert('rect', ':first-child').attr('class', 'nv-legend-bg').attr('fill', '#eee') // .attr('stroke', '#444')\n          .attr('opacity', 0);\n          var seriesBG = g.select('.nv-legend-bg');\n          seriesBG.transition().duration(300).attr('x', -versPadding).attr('width', legendWidth + versPadding - 12).attr('height', height + 10).attr('y', -margin.top - 10).attr('opacity', expanded ? 1 : 0);\n        }\n\n        seriesShape.style('fill', setBGColor).style('fill-opacity', setBGOpacity).style('stroke', setBGColor);\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? '#000' : '#fff';\n        } else if (!expanded) {\n          if (!d.color) d.color = color(d, i);\n          return !!d.disabled ? d.color : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#eee' : d.color || color(d, i);\n        } else {\n          return d.color || color(d, i);\n        }\n      }\n\n      function setBGOpacity(d, i) {\n        if (expanded && vers == 'furious') {\n          return 1;\n        } else {\n          return !!d.disabled ? 0 : 1;\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      enableDoubleClick: {\n        get: function get() {\n          return enableDoubleClick;\n        },\n        set: function set(_) {\n          enableDoubleClick = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.line = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        container = null,\n        strokeWidth = 1.5,\n        color = nv.utils.defaultColor() // a function that returns a color\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        isArea = function isArea(d) {\n      return d.area;\n    } // decides if a line is an area or just a line\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        interpolate = \"linear\" // controls the line interpolation\n    ,\n        duration = 250,\n        dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    scatter.pointSize(16) // default size\n    .pointDomain([16, 256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        scatter.width(availableWidth).height(availableHeight);\n        var scatterWrap = wrap.select('.nv-scatterWrap');\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + scatter.id()).append('rect');\n        wrap.select('#nv-edge-clip-' + scatter.id() + ' rect').attr('width', availableWidth).attr('height', availableHeight > 0 ? availableHeight : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        scatterWrap.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('stroke-width', function (d) {\n          return d.strokeWidth || strokeWidth;\n        }).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'line: groups').style('stroke-opacity', 1).style('fill-opacity', function (d) {\n          return d.fillOpacity || .5;\n        });\n        var areaPaths = groups.selectAll('path.nv-area').data(function (d) {\n          return isArea(d) ? [d] : [];\n        }); // this is done differently than lines because I need to check if series is an area\n\n        areaPaths.enter().append('path').attr('class', 'nv-area').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x0(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y0(getY(d, i)));\n          }).y1(function (d, i) {\n            return y0(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        groups.exit().selectAll('path.nv-area').remove();\n        areaPaths.watchTransition(renderWatch, 'line: areaPaths').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y(getY(d, i)));\n          }).y1(function (d, i) {\n            return y(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        var linePaths = groups.selectAll('path.nv-line').data(function (d) {\n          return [d.values];\n        });\n        linePaths.enter().append('path').attr('class', 'nv-line').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x0(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y0(getY(d, i)));\n        }));\n        linePaths.watchTransition(renderWatch, 'line: linePaths').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y(getY(d, i)));\n        })); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter; // Pass through events\n\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      },\n      isArea: {\n        get: function get() {\n          return isArea;\n        },\n        set: function set(_) {\n          isArea = d3.functor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          scatter.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          scatter.y(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          scatter.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.line());\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        focusEnable = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        duration = 250; // set options on sub-objects for this chart\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    lines.clipEdge(true).duration(0);\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n        /* Update `main' graph on brush update. */\n\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Setup Scales\n\n        x = lines.xScale();\n        y = lines.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-linesWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive');\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Main (Focus) Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(duration).call(yAxis);\n          }\n        }\n\n        g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')'); //============================================================\n        // Update Focus\n        //============================================================\n\n        if (!focusEnable && focus.brush.extent() === null) {\n          linesWrap.call(lines);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').style('display', focusEnable ? 'initial' : 'none').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled && !series.disableTooltip;\n          }).forEach(function (series, i) {\n            var extent = focus.brush.extent() !== null ? focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent() : x.domain();\n            var currentValues = series.values.filter(function (d, i) {\n              // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n              // (e.g. x domain is manually set to reverse the x-axis)\n              if (extent[0] <= extent[1]) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              } else {\n                return lines.x()(d, i) >= extent[1] && lines.x()(d, i) <= extent[0];\n              }\n            });\n            pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n            var point = currentValues[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue !== null) {\n              lines.highlightPoint(i, pointIndex, true);\n            }\n\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: pointYValue,\n              color: color(series, series.seriesIndex),\n              data: point\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var defaultValueFormatter = function defaultValueFormatter(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n          };\n\n          interactiveLayer.tooltip.valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n            value: chart.x()(singlePoint, pointIndex),\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on('elementClick', function (e) {\n          var pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series) {\n            var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            var yPos = chart.yScale()(chart.y()(point, pointIndex));\n            allData.push({\n              point: point,\n              pointIndex: pointIndex,\n              pos: [pointXLocation, yPos],\n              seriesIndex: series.seriesIndex,\n              series: series\n            });\n          });\n          lines.dispatch.elementClick(allData);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          focusLinesWrap.transition().duration(duration).call(lines); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('lineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      if (!evt.series.disableTooltip) {\n        tooltip.data(evt).hidden(false);\n      }\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // Focus options, mostly passed onto focus model.\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focus.showXAxis();\n        },\n        set: function set(_) {\n          focus.showXAxis(_);\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focus.showYAxis();\n        },\n        set: function set(_) {\n          focus.showYAxis(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          lines.duration(duration);\n          focus.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          lines.color(color);\n          focus.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return lines.interpolate();\n        },\n        set: function set(_) {\n          lines.interpolate(_);\n          focus.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n          focus.xTickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n          focus.yTickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return lines.x();\n        },\n        set: function set(_) {\n          lines.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return lines.y();\n        },\n        set: function set(_) {\n          lines.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines.interactive(false);\n            lines.useVoronoi(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineWithFocusChart = function () {\n    return nv.models.lineChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  };\n\n  nv.models.linePlusBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        lines2 = nv.models.line(),\n        bars = nv.models.historicalBar(),\n        bars2 = nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        x2Axis = nv.models.axis(),\n        y1Axis = nv.models.axis(),\n        y2Axis = nv.models.axis(),\n        y3Axis = nv.models.axis(),\n        y4Axis = nv.models.axis(),\n        legend = nv.models.legend(),\n        brush = d3.svg.brush(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        marginTop = null,\n        margin2 = {\n      top: 0,\n      right: 30,\n      bottom: 20,\n      left: 60\n    },\n        width = null,\n        height = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.defaultColor(),\n        showLegend = true,\n        focusEnable = true,\n        focusShowAxisY = false,\n        focusShowAxisX = true,\n        focusHeight = 50,\n        extent,\n        brushExtent = null,\n        x,\n        x2,\n        y1,\n        y2,\n        y3,\n        y4,\n        noData = null,\n        dispatch = d3.dispatch('brush', 'stateChange', 'changeState'),\n        transitionDuration = 0,\n        state = nv.utils.state(),\n        defaultState = null,\n        legendLeftAxisHint = ' (left axis)',\n        legendRightAxisHint = ' (right axis)',\n        switchYAxisOrder = false;\n\n    lines.clipEdge(true);\n    lines2.interactive(false); // We don't want any points emitted for the focus chart's scatter graph.\n\n    lines2.pointActive(function (d) {\n      return false;\n    });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n    tooltip.headerEnabled(true).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function getBarsAxis() {\n      return switchYAxisOrder ? {\n        main: y2Axis,\n        focus: y4Axis\n      } : {\n        main: y1Axis,\n        focus: y3Axis\n      };\n    };\n\n    var getLinesAxis = function getLinesAxis() {\n      return switchYAxisOrder ? {\n        main: y1Axis,\n        focus: y3Axis\n      } : {\n        main: y2Axis,\n        focus: y4Axis\n      };\n    };\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var allDisabled = function allDisabled(data) {\n      return data.every(function (series) {\n        return series.disabled;\n      });\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focusHeight : 0),\n            availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        var dataBars = data.filter(function (d) {\n          return !d.disabled && d.bar;\n        });\n        var dataLines = data.filter(function (d) {\n          return !d.bar;\n        }); // removed the !d.disabled clause here to fix Issue #240\n\n        if (dataBars.length && !switchYAxisOrder) {\n          x = bars.xScale();\n        } else {\n          x = lines.xScale();\n        }\n\n        x2 = x2Axis.scale(); // select the scales and series based on the position of the yAxis\n\n        y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n        y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n        y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n        y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n        var series1 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        x.range([0, availableWidth]);\n        x2.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // this is the main chart\n\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-barsWrap');\n        focusEnter.append('g').attr('class', 'nv-linesWrap'); // context chart is where you can focus in\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n        contextEnter.append('g').attr('class', 'nv-x nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-barsWrap');\n        contextEnter.append('g').attr('class', 'nv-linesWrap');\n        contextEnter.append('g').attr('class', 'nv-brushBackground');\n        contextEnter.append('g').attr('class', 'nv-x nv-brush'); //============================================================\n        // Legend\n        //------------------------------------------------------------\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\n            if (switchYAxisOrder) {\n              series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n            } else {\n              series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n            }\n\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height(); // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //============================================================\n        // Context chart (focus chart) components\n        //------------------------------------------------------------\n        // hide or show the focus context chart\n\n        g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n        bars2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && data[i].bar;\n        }));\n        lines2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].bar;\n        }));\n        var bars2Wrap = g.select('.nv-context .nv-barsWrap').datum(dataBars.length ? dataBars : [{\n          values: []\n        }]);\n        var lines2Wrap = g.select('.nv-context .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n          values: []\n        }] : dataLines.filter(function (dataLine) {\n          return !dataLine.disabled;\n        }));\n        g.select('.nv-context').attr('transform', 'translate(0,' + (availableHeight1 + margin.bottom + margin2.top) + ')');\n        bars2Wrap.transition().call(bars2);\n        lines2Wrap.transition().call(lines2); // context (focus chart) axis controls\n\n        if (focusShowAxisX) {\n          x2Axis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight2, 0);\n\n          g.select('.nv-context .nv-x.nv-axis').attr('transform', 'translate(0,' + y3.range()[0] + ')');\n          g.select('.nv-context .nv-x.nv-axis').transition().call(x2Axis);\n        }\n\n        if (focusShowAxisY) {\n          y3Axis.scale(y3)._ticks(availableHeight2 / 36).tickSize(-availableWidth, 0);\n\n          y4Axis.scale(y4)._ticks(availableHeight2 / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n\n          g.select('.nv-context .nv-y3.nv-axis').style('opacity', dataBars.length ? 1 : 0).attr('transform', 'translate(0,' + x2.range()[0] + ')');\n          g.select('.nv-context .nv-y2.nv-axis').style('opacity', dataLines.length ? 1 : 0).attr('transform', 'translate(' + x2.range()[1] + ',0)');\n          g.select('.nv-context .nv-y1.nv-axis').transition().call(y3Axis);\n          g.select('.nv-context .nv-y2.nv-axis').transition().call(y4Axis);\n        } // Setup Brush\n\n\n        brush.x(x2).on('brush', onBrush);\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect') //.attr('y', -5)\n        .attr('height', availableHeight2);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight2 / 3;\n          return 'M' + .5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + .5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x2.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x2(d[0]) - x2.range()[0],\n                rightWidth = x2.range()[1] - x2(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x2(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush() {\n          brushExtent = brush.empty() ? null : brush.extent();\n          extent = brush.empty() ? x2.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG(); // Prepare Main (Focus) Bars and Lines\n\n          bars.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && data[i].bar;\n          }));\n          lines.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && !data[i].bar;\n          }));\n          var focusBarsWrap = g.select('.nv-focus .nv-barsWrap').datum(!dataBars.length ? [{\n            values: []\n          }] : dataBars.map(function (d, i) {\n            return {\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return bars.x()(d, i) >= extent[0] && bars.x()(d, i) <= extent[1];\n              })\n            };\n          }));\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n            values: []\n          }] : dataLines.filter(function (dataLine) {\n            return !dataLine.disabled;\n          }).map(function (d, i) {\n            return {\n              area: d.area,\n              fillOpacity: d.fillOpacity,\n              strokeWidth: d.strokeWidth,\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              })\n            };\n          })); // Update Main (Focus) X Axis\n\n          if (dataBars.length && !switchYAxisOrder) {\n            x = bars.xScale();\n          } else {\n            x = lines.xScale();\n          }\n\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight1, 0);\n\n          xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n          g.select('.nv-x.nv-axis').transition().duration(transitionDuration).call(xAxis); // Update Main (Focus) Bars and Lines\n\n          focusBarsWrap.transition().duration(transitionDuration).call(bars);\n          focusLinesWrap.transition().duration(transitionDuration).call(lines); // Setup and Update Main (Focus) Y Axes\n\n          g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n          y1Axis.scale(y1)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)).tickSize(-availableWidth, 0);\n\n          y2Axis.scale(y2)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)); // Show the y2 rules only if y1 has none\n\n\n          if (!switchYAxisOrder) {\n            y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n          } else {\n            y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n          } // Calculate opacity of the axis\n\n\n          var barsOpacity = dataBars.length ? 1 : 0;\n          var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n          var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n          var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n          g.select('.nv-focus .nv-y1.nv-axis').style('opacity', y1Opacity);\n          g.select('.nv-focus .nv-y2.nv-axis').style('opacity', y2Opacity).attr('transform', 'translate(' + x.range()[1] + ',0)');\n          g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration).call(y1Axis);\n          g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration).call(y2Axis);\n        }\n\n        onBrush();\n      });\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.duration(100).valueFormatter(function (d, i) {\n        return getLinesAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.duration(0).valueFormatter(function (d, i) {\n        return getBarsAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focusHeight;\n        },\n        set: function set(_) {\n          focusHeight = _;\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focusShowAxisX;\n        },\n        set: function set(_) {\n          focusShowAxisX = _;\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focusShowAxisY;\n        },\n        set: function set(_) {\n          focusShowAxisY = _;\n        }\n      },\n      legendLeftAxisHint: {\n        get: function get() {\n          return legendLeftAxisHint;\n        },\n        set: function set(_) {\n          legendLeftAxisHint = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return margin2;\n        },\n        set: function set(_) {\n          margin2.top = _.top !== undefined ? _.top : margin2.top;\n          margin2.right = _.right !== undefined ? _.right : margin2.right;\n          margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n          margin2.left = _.left !== undefined ? _.left : margin2.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines.x(_);\n          lines2.x(_);\n          bars.x(_);\n          bars2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines.y(_);\n          lines2.y(_);\n          bars.y(_);\n          bars2.y(_);\n        }\n      },\n      switchYAxisOrder: {\n        get: function get() {\n          return switchYAxisOrder;\n        },\n        set: function set(_) {\n          // Switch the tick format for the yAxis\n          if (switchYAxisOrder !== _) {\n            var y1 = y1Axis;\n            y1Axis = y2Axis;\n            y2Axis = y1;\n            var y3 = y3Axis;\n            y3Axis = y4Axis;\n            y4Axis = y3;\n          }\n\n          switchYAxisOrder = _;\n          y1Axis.orient('left');\n          y2Axis.orient('right');\n          y3Axis.orient('left');\n          y4Axis.orient('right');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        clipEdge = true,\n        stacked = false,\n        stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n    ,\n        color = nv.utils.defaultColor(),\n        hideable = false,\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        duration = 500,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n    var last_datalength = 0;\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var nonStackableCount = 0; // This function defines the requirements for render complete\n\n        var endFn = function endFn(d, i) {\n          if (d.series === data.length - 1 && i === data[0].values.length - 1) return true;\n          return false;\n        };\n\n        if (hideable && data.length) hideable = [{\n          values: data[0].values.map(function (d) {\n            return {\n              x: d.x,\n              y: 0,\n              series: d.series,\n              size: 0.01\n            };\n          })\n        }];\n\n        if (stacked) {\n          var parsed = d3.layout.stack().offset(stackOffset).values(function (d) {\n            return d.values;\n          }).y(getY)(!data.length && hideable ? hideable : data);\n          parsed.forEach(function (series, i) {\n            // if series is non-stackable, use un-parsed data\n            if (series.nonStackable) {\n              data[i].nonStackableSeries = nonStackableCount++;\n              parsed[i] = data[i];\n            } else {\n              // don't stack this seires on top of the nonStackable seriees\n              if (i > 0 && parsed[i - 1].nonStackable) {\n                parsed[i].values.map(function (d, j) {\n                  d.y0 -= parsed[i - 1].values[j].y;\n                  d.y1 = d.y0 + d.y;\n                });\n              }\n            }\n          });\n          data = parsed;\n        } //add series index and key to each data point for reference\n\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked && data.length > 0) {\n          data[0].values.map(function (d, i) {\n            var posBase = 0,\n                negBase = 0;\n            data.map(function (d, idx) {\n              if (!data[idx].nonStackable) {\n                var f = d.values[i];\n                f.size = Math.abs(f.y);\n\n                if (f.y < 0) {\n                  f.y1 = negBase;\n                  negBase = negBase - f.size;\n                } else {\n                  f.y1 = f.size + posBase;\n                  posBase = posBase + f.size;\n                }\n              }\n            });\n          });\n        } // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d, idx) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1,\n              idx: idx\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          var domain = d.y; // increase the domain range if this series is stackable\n\n          if (stacked && !data[d.idx].nonStackable) {\n            if (d.y > 0) {\n              domain = d.y1;\n            } else {\n              domain = d.y1 + d.y;\n            }\n          }\n\n          return domain;\n        }).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        var exitTransition = renderWatch.transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration)).attr('y', function (d, i, j) {\n          var yVal = y0(0) || 0;\n\n          if (stacked) {\n            if (data[d.series] && !data[d.series].nonStackable) {\n              yVal = y0(d.y0);\n            }\n          }\n\n          return yVal;\n        }).attr('height', 0).remove();\n        if (exitTransition.delay) exitTransition.delay(function (d, i) {\n          var delay = i * (duration / (last_datalength + 1)) - i;\n          return delay;\n        });\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('rect.nv-bar').data(function (d) {\n          return hideable && !data.length ? hideable.values : d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('rect').attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('x', function (d, i, j) {\n          return stacked && !data[j].nonStackable ? 0 : j * x.rangeBand() / data.length;\n        }).attr('y', function (d, i, j) {\n          return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0;\n        }).attr('height', 0).attr('width', function (d, i, j) {\n          return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length);\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n        bars.style('fill', function (d, i, j) {\n          return color(d, j, i);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j, i);\n        }).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i, j) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i, j) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i, j) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        var barSelection = bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration)).delay(function (d, i) {\n          return i * duration / data[0].values.length;\n        });\n\n        if (stacked) {\n          barSelection.attr('y', function (d, i, j) {\n            var yVal = 0; // if stackable, stack it on top of the previous series\n\n            if (!data[j].nonStackable) {\n              yVal = y(d.y1);\n            } else {\n              if (getY(d, i) < 0) {\n                yVal = y(0);\n              } else {\n                if (y(0) - y(getY(d, i)) < -1) {\n                  yVal = y(0) - 1;\n                } else {\n                  yVal = y(getY(d, i)) || 0;\n                }\n              }\n            }\n\n            return yVal;\n          }).attr('height', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return Math.max(Math.abs(y(d.y + d.y0) - y(d.y0)), 0);\n            } else {\n              return Math.max(Math.abs(y(getY(d, i)) - y(0)), 0) || 0;\n            }\n          }).attr('x', function (d, i, j) {\n            var width = 0;\n\n            if (data[j].nonStackable) {\n              width = d.series * x.rangeBand() / data.length;\n\n              if (data.length !== nonStackableCount) {\n                width = data[j].nonStackableSeries * x.rangeBand() / (nonStackableCount * 2);\n              }\n            }\n\n            return width;\n          }).attr('width', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return x.rangeBand();\n            } else {\n              // if all series are nonStacable, take the full width\n              var width = x.rangeBand() / nonStackableCount; // otherwise, nonStackable graph will be only taking the half-width\n              // of the x rangeBand\n\n              if (data.length !== nonStackableCount) {\n                width = x.rangeBand() / (nonStackableCount * 2);\n              }\n\n              return width;\n            }\n          });\n        } else {\n          barSelection.attr('x', function (d, i) {\n            return d.series * x.rangeBand() / data.length;\n          }).attr('width', x.rangeBand() / data.length).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)) || 0;\n          }).attr('height', function (d, i) {\n            return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n          });\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy(); // keep track of the last data value length for transition calculations\n\n        if (data[0] && data[0].values) {\n          last_datalength = data[0].values.length;\n        }\n      });\n      renderWatch.renderEnd('multibar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      stackOffset: {\n        get: function get() {\n          return stackOffset;\n        },\n        set: function set(_) {\n          stackOffset = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      hideable: {\n        get: function get() {\n          return hideable;\n        },\n        set: function set(_) {\n          hideable = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        interactiveLayer = nv.interactiveGuideline(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = null,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        reduceXTicks = true // if false a tick will show for every data point\n    ,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250,\n        useInteractiveGuideline = false;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis.orient('bottom').tickPadding(7).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === 'bottom') {\n            legend.width(availableWidth - margin.right);\n            g.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else {\n            legend.width(availableWidth - controlWidth());\n            g.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n          xTicks.selectAll('line, text').style('opacity', 1);\n\n          if (staggerLabels) {\n            var getTranslate = function getTranslate(x, y) {\n              return \"translate(\" + x + \",\" + y + \")\";\n            };\n\n            var staggerUp = 5,\n                staggerDown = 17; //pixels to stagger by\n            // Issue #140\n\n            xTicks.selectAll(\"text\").attr('transform', function (d, i, j) {\n              return getTranslate(0, j % 2 == 0 ? staggerUp : staggerDown);\n            });\n            var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n            g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\").attr(\"transform\", function (d, i) {\n              return getTranslate(0, i === 0 || totalInBetweenTicks % 2 !== 0 ? staggerDown : staggerUp);\n            });\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n\n          if (reduceXTicks) xTicks.filter(function (d, i) {\n            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n          }).selectAll('text, line').style('opacity', 0);\n          if (rotateLabels) xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text').style('opacity', 1);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            if (e.pointXValue == undefined) return;\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                xValue,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              pointIndex = x.domain().indexOf(e.pointXValue);\n              var point = series.values[pointIndex];\n              if (point === undefined) return;\n              xValue = point.x;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = e.mouseX;\n              allData.push({\n                key: series.key,\n                value: chart.y()(point, pointIndex),\n                color: color(series, series.seriesIndex),\n                data: series.values[pointIndex]\n              });\n            });\n            interactiveLayer.tooltip.data({\n              value: xValue,\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            interactiveLayer.tooltip.hidden(true);\n          });\n        } else {\n          multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n            evt.value = chart.x()(evt.data);\n            evt['series'] = {\n              key: evt.data.key,\n              value: chart.y()(evt.data),\n              color: evt.color\n            };\n            tooltip.data(evt).hidden(false);\n          });\n          multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      renderWatch.renderEnd('multibarchart immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      reduceXTicks: {\n        get: function get() {\n          return reduceXTicks;\n        },\n        set: function set(_) {\n          reduceXTicks = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontal = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getYerr = function getYerr(d) {\n      return d.yErr;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        stacked = false,\n        showValues = false,\n        showBarLabels = false,\n        valuePadding = 60,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        valueFormat = d3.format(',.2f'),\n        delay = 1200,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        duration = 250,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0; //used to store previous scales\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        if (stacked) data = d3.layout.stack().offset('zero').values(function (d) {\n          return d.values;\n        }).y(getY)(data); //add series index and key to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked) data[0].values.map(function (d, i) {\n          var posBase = 0,\n              negBase = 0;\n          data.map(function (d) {\n            var f = d.values[i];\n            f.size = Math.abs(f.y);\n\n            if (f.y < 0) {\n              f.y1 = negBase - f.size;\n              negBase = negBase - f.size;\n            } else {\n              f.y1 = posBase;\n              posBase = posBase + f.size;\n            }\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableHeight], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return stacked ? d.y > 0 ? d.y1 + d.y : d.y1 : d.y;\n        }).concat(forceY)));\n        if (showValues && !stacked) y.range(yRange || [y.domain()[0] < 0 ? valuePadding : 0, availableWidth - (y.domain()[1] > 0 ? valuePadding : 0)]);else y.range(yRange || [0, availableWidth]);\n        x0 = x0 || x;\n        y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'multibarhorizontal: groups').style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : j * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        });\n        barsEnter.append('rect').attr('width', 0).attr('height', x.rangeBand() / (stacked ? 1 : data.length));\n        bars.on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n\n        if (getYerr(data[0], 0)) {\n          barsEnter.append('polyline');\n          bars.select('polyline').attr('fill', 'none').attr('points', function (d, i) {\n            var xerr = getYerr(d, i),\n                mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n            xerr = xerr.map(function (e) {\n              return y(e + (getY(d, i) < 0 ? 0 : getY(d, i))) - y(0);\n            });\n            var a = [[xerr[0], -mid], [xerr[0], mid], [xerr[0], 0], [xerr[1], 0], [xerr[1], -mid], [xerr[1], mid]];\n            return a.map(function (path) {\n              return path.join(',');\n            }).join(' ');\n          }).attr('transform', function (d, i) {\n            var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            return 'translate(0, ' + mid + ')';\n          });\n        }\n\n        barsEnter.append('text');\n\n        if (showValues && !stacked) {\n          bars.select('text').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'end' : 'start';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            var t = valueFormat(getY(d, i)),\n                yerr = getYerr(d, i);\n            if (yerr === undefined) return t;\n            if (!yerr.length) return t + '±' + valueFormat(Math.abs(yerr));\n            return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? -4 : y(getY(d, i)) - y(0) + 4;\n          });\n        } else {\n          bars.selectAll('text').text('');\n        }\n\n        if (showBarLabels && !stacked) {\n          barsEnter.append('text').classed('nv-bar-label', true);\n          bars.select('text.nv-bar-label').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'start' : 'end';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            return getX(d, i);\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text.nv-bar-label').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? y(0) - y(getY(d, i)) + 4 : -4;\n          });\n        } else {\n          bars.selectAll('text.nv-bar-label').text('');\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        if (stacked) bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          return 'translate(' + y(d.y1) + ',' + x(getX(d, i)) + ')';\n        }).select('rect').attr('width', function (d, i) {\n          return Math.abs(y(getY(d, i) + d.y0) - y(d.y0)) || 0;\n        }).attr('height', x.rangeBand());else bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          //TODO: stacked must be all positive or all negative, not both?\n          return 'translate(' + (getY(d, i) < 0 ? y(getY(d, i)) : y(0)) + ',' + (d.series * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        }).select('rect').attr('height', x.rangeBand() / data.length).attr('width', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('multibarHorizontal immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      yErr: {\n        get: function get() {\n          return getYerr;\n        },\n        set: function set(_) {\n          getYerr = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      // this shows the group name, seems pointless?\n      //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      valuePadding: {\n        get: function get() {\n          return valuePadding;\n        },\n        set: function set(_) {\n          valuePadding = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontalChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend().height(30),\n        controls = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlsPosition = 'top',\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        stacked = false,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n    xAxis.orient('left').tickPadding(5).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient('bottom').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        stacked = multibar.stacked();\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth - controlWidth());\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\n          if (controlsPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')').call(controls);\n          } else if (controlsPosition === 'top') {\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksY(availableHeight / 24, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n          xTicks.selectAll('line, text');\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", y(0)).attr(\"x2\", y(0)).attr(\"y1\", 0).attr(\"y2\", -availableHeight); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          stacked = multibar.stacked();\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('multibar horizontal chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        key: evt.data.key,\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      controlsPosition: {\n        get: function get() {\n          return controlsPosition;\n        },\n        set: function set(_) {\n          controlsPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        var dataLines1 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 1;\n        });\n        var dataLines2 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 2;\n        });\n        var dataScatters1 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 1;\n        });\n        var dataScatters2 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 2;\n        });\n        var dataBars1 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 1;\n        });\n        var dataBars2 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 2;\n        });\n        var dataStack1 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 1;\n        });\n        var dataStack2 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 2;\n        }); // Display noData message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var series1 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 1;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 2;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        x.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]);\n        var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        gEnter.append('g').attr('class', 'stack1Wrap');\n        gEnter.append('g').attr('class', 'stack2Wrap');\n        gEnter.append('g').attr('class', 'bars1Wrap');\n        gEnter.append('g').attr('class', 'bars2Wrap');\n        gEnter.append('g').attr('class', 'scatters1Wrap');\n        gEnter.append('g').attr('class', 'scatters2Wrap');\n        gEnter.append('g').attr('class', 'lines1Wrap');\n        gEnter.append('g').attr('class', 'lines2Wrap');\n        gEnter.append('g').attr('class', 'legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        var g = wrap.select('g');\n        var color_array = data.map(function (d, i) {\n          return data[i].color || color(d, i);\n        }); // Legend\n\n        if (!showLegend) {\n          g.select('.legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          legend.color(color_array);\n          g.select('.legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n            series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        lines1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line';\n        }));\n        lines2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line';\n        }));\n        scatters1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter';\n        }));\n        scatters2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter';\n        }));\n        bars1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar';\n        }));\n        bars2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar';\n        }));\n        stack1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area';\n        }));\n        stack2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area';\n        }));\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var lines1Wrap = g.select('.lines1Wrap').datum(dataLines1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters1Wrap = g.select('.scatters1Wrap').datum(dataScatters1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars1Wrap = g.select('.bars1Wrap').datum(dataBars1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack1Wrap = g.select('.stack1Wrap').datum(dataStack1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var lines2Wrap = g.select('.lines2Wrap').datum(dataLines2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters2Wrap = g.select('.scatters2Wrap').datum(dataScatters2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars2Wrap = g.select('.bars2Wrap').datum(dataBars2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack2Wrap = g.select('.stack2Wrap').datum(dataStack2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var extraValue1BarStacked = [];\n\n        if (bars1.stacked() && dataBars1.length) {\n          var extraValue1BarStacked = dataBars1.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue1BarStacked.length > 0) extraValue1BarStacked = extraValue1BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars1.length) {\n          extraValue1BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        var extraValue2BarStacked = [];\n\n        if (bars2.stacked() && dataBars2.length) {\n          var extraValue2BarStacked = dataBars2.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue2BarStacked.length > 0) extraValue2BarStacked = extraValue2BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars2.length) {\n          extraValue2BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        yScale1.domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        yScale2.domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        lines1.yDomain(yScale1.domain());\n        scatters1.yDomain(yScale1.domain());\n        bars1.yDomain(yScale1.domain());\n        stack1.yDomain(yScale1.domain());\n        lines2.yDomain(yScale2.domain());\n        scatters2.yDomain(yScale2.domain());\n        bars2.yDomain(yScale2.domain());\n        stack2.yDomain(yScale2.domain());\n\n        if (dataStack1.length) {\n          d3.transition(stack1Wrap).call(stack1);\n        }\n\n        if (dataStack2.length) {\n          d3.transition(stack2Wrap).call(stack2);\n        }\n\n        if (dataBars1.length) {\n          d3.transition(bars1Wrap).call(bars1);\n        }\n\n        if (dataBars2.length) {\n          d3.transition(bars2Wrap).call(bars2);\n        }\n\n        if (dataLines1.length) {\n          d3.transition(lines1Wrap).call(lines1);\n        }\n\n        if (dataLines2.length) {\n          d3.transition(lines2Wrap).call(lines2);\n        }\n\n        if (dataScatters1.length) {\n          d3.transition(scatters1Wrap).call(scatters1);\n        }\n\n        if (dataScatters2.length) {\n          d3.transition(scatters2Wrap).call(scatters2);\n        }\n\n        xAxis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n        d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n\n        yAxis1._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y1.nv-axis')).call(yAxis1);\n\n        yAxis2._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y2.nv-axis')).call(yAxis2);\n        g.select('.nv-y1.nv-axis').classed('nv-disabled', series1.length ? false : true).attr('transform', 'translate(' + x.range()[0] + ',0)');\n        g.select('.nv-y2.nv-axis').classed('nv-disabled', series2.length ? false : true).attr('transform', 'translate(' + x.range()[1] + ',0)');\n        legend.dispatch.on('stateChange', function (newState) {\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching\n        //------------------------------------------------------------\n\n\n        function mouseover_line(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_scatter(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(100).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_stack(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.point['x'] = stack1.x()(evt.point);\n          evt.point['y'] = stack1.y()(evt.point);\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_bar(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = bars1.x()(evt.data);\n          evt['series'] = {\n            value: bars1.y()(evt.data),\n            color: evt.color,\n            key: evt.data.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function clearHighlights() {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.clearHighlights();\n            } catch (e) {}\n          }\n        }\n\n        function highlightPoint(serieIndex, pointIndex, b) {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.highlightPoint(serieIndex, pointIndex, b);\n            } catch (e) {}\n          }\n        }\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            clearHighlights();\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              var extent = x.domain();\n              var currentValues = series.values.filter(function (d, i) {\n                return chart.x()(d, i) >= extent[0] && chart.x()(d, i) <= extent[1];\n              });\n              pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n              var point = currentValues[pointIndex];\n              var pointYValue = chart.y()(point, pointIndex);\n\n              if (pointYValue !== null) {\n                highlightPoint(i, pointIndex, true);\n              }\n\n              if (point === undefined) return;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = x(chart.x()(point, pointIndex));\n              allData.push({\n                key: series.key,\n                value: pointYValue,\n                color: color(series, series.seriesIndex),\n                data: point,\n                yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n              });\n            });\n\n            var defaultValueFormatter = function defaultValueFormatter(d, i) {\n              var yAxis = allData[i].yAxis;\n              return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n            };\n\n            interactiveLayer.tooltip.headerFormatter(function (d, i) {\n              return xAxis.tickFormat()(d, i);\n            }).valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n              value: chart.x()(singlePoint, pointIndex),\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            clearHighlights();\n          });\n        } else {\n          lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          lines2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n          bars2.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      yDomain1: {\n        get: function get() {\n          return yDomain1;\n        },\n        set: function set(_) {\n          yDomain1 = _;\n        }\n      },\n      yDomain2: {\n        get: function get() {\n          return yDomain2;\n        },\n        set: function set(_) {\n          yDomain2 = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines1.x(_);\n          lines2.x(_);\n          scatters1.x(_);\n          scatters2.x(_);\n          bars1.x(_);\n          bars2.x(_);\n          stack1.x(_);\n          stack2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines1.y(_);\n          lines2.y(_);\n          scatters1.y(_);\n          scatters2.y(_);\n          stack1.y(_);\n          stack2.y(_);\n          bars1.y(_);\n          bars2.y(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n          lines1.useVoronoi(_);\n          lines2.useVoronoi(_);\n          stack1.useVoronoi(_);\n          stack2.useVoronoi(_);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines1.interactive(false);\n            lines1.useVoronoi(false);\n            lines2.interactive(false);\n            lines2.useVoronoi(false);\n            stack1.interactive(false);\n            stack1.useVoronoi(false);\n            stack2.interactive(false);\n            stack2.useVoronoi(false);\n            scatters1.interactive(false);\n            scatters2.interactive(false);\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function (model) {\n            model.duration(duration);\n          });\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.ohlcBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // ohlc bar width.\n\n        var w = availableWidth / data[0].values.length * .9; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + w / 2, availableWidth - w / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        ticks.enter().append('path').attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        }).attr('d', function (d, i) {\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('fill', function (d, i) {\n          return color[0];\n        }).attr('stroke', function (d, i) {\n          return color[0];\n        }).attr('x', 0).attr('y', function (d, i) {\n          return y(Math.max(0, getY(d, i)));\n        }).attr('height', function (d, i) {\n          return Math.abs(y(getY(d, i)) - y(0));\n        }); // the bar colors are controlled by CSS currently\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        d3.transition(ticks).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('d', function (d, i) {\n          var w = availableWidth / data[0].values.length * .9;\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-ohlcBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Code adapted from Jason Davies' \"Parallel Coordinates\"\n  // http://bl.ocks.org/jasondavies/1341281\n\n\n  nv.models.parallelCoordinates = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 0,\n      bottom: 10,\n      left: 0\n    },\n        width = null,\n        height = null,\n        availableWidth = null,\n        availableHeight = null,\n        x = d3.scale.ordinal(),\n        y = {},\n        undefinedValuesLabel = \"undefined values\",\n        dimensionData = [],\n        enabledDimensions = [],\n        dimensionNames = [],\n        displayBrush = true,\n        color = nv.utils.defaultColor(),\n        filters = [],\n        active = [],\n        dragging = [],\n        axisWithUndefinedValues = [],\n        lineTension = 1,\n        foreground,\n        background,\n        dimensions,\n        line = d3.svg.line(),\n        axis = d3.svg.axis(),\n        dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //Convert old data to new format (name, values)\n\n        if (data[0].values === undefined) {\n          var newData = [];\n          data.forEach(function (d) {\n            var val = {};\n            var key = Object.keys(d);\n            key.forEach(function (k) {\n              if (k !== \"name\") val[k] = d[k];\n            });\n            newData.push({\n              key: d.name,\n              values: val\n            });\n          });\n          data = newData;\n        }\n\n        var dataValues = data.map(function (d) {\n          return d.values;\n        });\n\n        if (active.length === 0) {\n          active = data;\n        }\n\n        ; //set all active before first brush call\n\n        dimensionNames = dimensionData.sort(function (a, b) {\n          return a.currentPosition - b.currentPosition;\n        }).map(function (d) {\n          return d.key;\n        });\n        enabledDimensions = dimensionData.filter(function (d) {\n          return !d.disabled;\n        }); // Setup Scales\n\n        x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) {\n          return d.key;\n        })); //Set as true if all values on an axis are missing.\n        // Extract the list of dimensions and create a scale for each.\n\n        var oldDomainMaxValue = {};\n        var displayMissingValuesline = false;\n        var currentTicks = [];\n        dimensionNames.forEach(function (d) {\n          var extent = d3.extent(dataValues, function (p) {\n            return +p[d];\n          });\n          var min = extent[0];\n          var max = extent[1];\n          var onlyUndefinedValues = false; //If there is no values to display on an axis, set the extent to 0\n\n          if (isNaN(min) || isNaN(max)) {\n            onlyUndefinedValues = true;\n            min = 0;\n            max = 0;\n          } //Scale axis if there is only one value\n\n\n          if (min === max) {\n            min = min - 1;\n            max = max + 1;\n          }\n\n          var f = filters.filter(function (k) {\n            return k.dimension == d;\n          });\n\n          if (f.length !== 0) {\n            //If there is only NaN values, keep the existing domain.\n            if (onlyUndefinedValues) {\n              min = y[d].domain()[0];\n              max = y[d].domain()[1];\n            } //If the brush extent is > max (< min), keep the extent value.\n            else if (!f[0].hasOnlyNaN && displayBrush) {\n                min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                max = max < f[0].extent[1] ? f[0].extent[1] : max;\n              } //If there is NaN values brushed be sure the brush extent is on the domain.\n              else if (f[0].hasNaN) {\n                  max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                  oldDomainMaxValue[d] = y[d].domain()[1];\n                  displayMissingValuesline = true;\n                }\n          } //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n          //The remaining 10% are used to display the missingValue line.\n\n\n          y[d] = d3.scale.linear().domain([min, max]).range([(availableHeight - 12) * 0.9, 0]);\n          axisWithUndefinedValues = [];\n          y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n        }); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        line.interpolate('cardinal').tension(lineTension);\n        axis.orient('left');\n        var axisDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd); //Add missing value line at the bottom of the chart\n\n        var missingValuesline, missingValueslineText;\n        var step = x.range()[1] - x.range()[0];\n        step = isNaN(step) ? x.range()[0] : step;\n\n        if (!isNaN(step)) {\n          var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n          missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n          missingValuesline.enter().append('line');\n          missingValuesline.exit().remove();\n          missingValuesline.attr(\"x1\", function (d) {\n            return d[0];\n          }).attr(\"y1\", function (d) {\n            return d[1];\n          }).attr(\"x2\", function (d) {\n            return d[2];\n          }).attr(\"y2\", function (d) {\n            return d[3];\n          }); //Add the text \"undefined values\" under the missing value line\n\n          missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n          missingValueslineText.append('text').data([undefinedValuesLabel]);\n          missingValueslineText.enter().append('text');\n          missingValueslineText.exit().remove();\n          missingValueslineText.attr(\"y\", availableHeight) //To have the text right align with the missingValues line, substract 92 representing the text size.\n          .attr(\"x\", availableWidth - 92 - step / 2).text(function (d) {\n            return d;\n          });\n        } // Add grey background lines for context.\n\n\n        background = wrap.select('.background').selectAll('path').data(data);\n        background.enter().append('path');\n        background.exit().remove();\n        background.attr('d', path); // Add blue foreground lines for focus.\n\n        foreground = wrap.select('.foreground').selectAll('path').data(data);\n        foreground.enter().append('path');\n        foreground.exit().remove();\n        foreground.attr('d', path).style(\"stroke-width\", function (d, i) {\n          if (isNaN(d.strokeWidth)) {\n            d.strokeWidth = 1;\n          }\n\n          return d.strokeWidth;\n        }).attr('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n        foreground.on(\"mouseover\", function (d, i) {\n          d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n          dispatch.elementMouseover({\n            label: d.name,\n            color: d.color || color(d, i),\n            values: d.values,\n            dimensions: enabledDimensions\n          });\n        });\n        foreground.on(\"mouseout\", function (d, i) {\n          d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n          dispatch.elementMouseout({\n            label: d.name,\n            index: i\n          });\n        });\n        foreground.on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        });\n        foreground.on('click', function (d) {\n          dispatch.elementClick({\n            id: d.id\n          });\n        }); // Add a group element for each dimension.\n\n        dimensions = g.selectAll('.dimension').data(enabledDimensions);\n        var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n        dimensions.attr('transform', function (d) {\n          return 'translate(' + x(d.key) + ',0)';\n        });\n        dimensionsEnter.append('g').attr('class', 'nv-axis'); // Add an axis and title.\n\n        dimensionsEnter.append('text').attr('class', 'nv-label').style(\"cursor\", \"move\").attr('dy', '-1em').attr('text-anchor', 'middle').on(\"mouseover\", function (d, i) {\n          dispatch.elementMouseover({\n            label: d.tooltip || d.key,\n            color: d.color\n          });\n        }).on(\"mouseout\", function (d, i) {\n          dispatch.elementMouseout({\n            label: d.tooltip\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        }).call(axisDrag);\n        dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n        dimensions.exit().remove();\n        dimensions.select('.nv-label').text(function (d) {\n          return d.key;\n        }); // Add and store a brush for each axis.\n\n        restoreBrush(displayBrush);\n        var actives = dimensionNames.filter(function (p) {\n          return !y[p].brush.empty();\n        }),\n            extents = actives.map(function (p) {\n          return y[p].brush.extent();\n        });\n        var formerActive = active.slice(0); //Restore active values\n\n        active = [];\n        foreground.style(\"display\", function (d) {\n          var isActive = actives.every(function (p, i) {\n            if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n              return true;\n            }\n\n            return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n          });\n          if (isActive) active.push(d);\n          return !isActive ? \"none\" : null;\n        });\n\n        if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n          dispatch.activeChanged(active);\n        } // Returns the path for a given data point.\n\n\n        function path(d) {\n          return line(enabledDimensions.map(function (p) {\n            //If value if missing, put the value on the missing value line\n            if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n              var domain = y[p.key].domain();\n              var range = y[p.key].range();\n              var min = domain[0] - (domain[1] - domain[0]) / 9; //If it's not already the case, allow brush to select undefined values\n\n              if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n                var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                y[p.key].brush.y(newscale);\n                axisWithUndefinedValues.push(p.key);\n              }\n\n              if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                return [x(p.key), y[p.key](min)];\n              }\n            } //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\n\n            if (missingValuesline !== undefined) {\n              if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                missingValuesline.style(\"display\", \"inline\");\n                missingValueslineText.style(\"display\", \"inline\");\n              } else {\n                missingValuesline.style(\"display\", \"none\");\n                missingValueslineText.style(\"display\", \"none\");\n              }\n            }\n\n            return [x(p.key), y[p.key](d.values[p.key])];\n          }));\n        }\n\n        function restoreBrush(visible) {\n          filters.forEach(function (f) {\n            //If filter brushed NaN values, keep the brush on the bottom of the axis.\n            var brushDomain = y[f.dimension].brush.y().domain();\n\n            if (f.hasOnlyNaN) {\n              f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n            }\n\n            if (f.hasNaN) {\n              f.extent[0] = brushDomain[0];\n            }\n\n            if (visible) y[f.dimension].brush.extent(f.extent);\n          });\n          dimensions.select('.nv-brushBackground').each(function (d) {\n            d3.select(this).call(y[d.key].brush);\n          }).selectAll('rect').attr('x', -8).attr('width', 16);\n          updateTicks();\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brushstart() {\n          //If brush aren't visible, show it before brushing again.\n          if (displayBrush === false) {\n            displayBrush = true;\n            restoreBrush(true);\n          }\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brush() {\n          actives = dimensionNames.filter(function (p) {\n            return !y[p].brush.empty();\n          });\n          extents = actives.map(function (p) {\n            return y[p].brush.extent();\n          });\n          filters = []; //erase current filters\n\n          actives.forEach(function (d, i) {\n            filters[i] = {\n              dimension: d,\n              extent: extents[i],\n              hasNaN: false,\n              hasOnlyNaN: false\n            };\n          });\n          active = []; //erase current active list\n\n          foreground.style('display', function (d) {\n            var isActive = actives.every(function (p, i) {\n              if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n              return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n            });\n            if (isActive) active.push(d);\n            return isActive ? null : 'none';\n          });\n          updateTicks();\n          dispatch.brush({\n            filters: filters,\n            active: active\n          });\n        }\n\n        function brushend() {\n          var hasActiveBrush = actives.length > 0 ? true : false;\n          filters.forEach(function (f) {\n            if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0) f.hasNaN = true;\n            if (f.extent[1] < y[f.dimension].domain()[0]) f.hasOnlyNaN = true;\n          });\n          dispatch.brushEnd(active, hasActiveBrush);\n        }\n\n        function updateTicks() {\n          dimensions.select('.nv-axis').each(function (d, i) {\n            var f = filters.filter(function (k) {\n              return k.dimension == d.key;\n            });\n            currentTicks[d.key] = y[d.key].domain(); //If brush are available, display brush extent\n\n            if (f.length != 0 && displayBrush) {\n              currentTicks[d.key] = [];\n              if (f[0].extent[1] > y[d.key].domain()[0]) currentTicks[d.key] = [f[0].extent[1]];\n              if (f[0].extent[0] >= y[d.key].domain()[0]) currentTicks[d.key].push(f[0].extent[0]);\n            }\n\n            d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n          });\n        }\n\n        function dragStart(d) {\n          dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n          background.attr(\"visibility\", \"hidden\");\n        }\n\n        function dragMove(d) {\n          dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n          foreground.attr(\"d\", path);\n          enabledDimensions.sort(function (a, b) {\n            return dimensionPosition(a.key) - dimensionPosition(b.key);\n          });\n          enabledDimensions.forEach(function (d, i) {\n            return d.currentPosition = i;\n          });\n          x.domain(enabledDimensions.map(function (d) {\n            return d.key;\n          }));\n          dimensions.attr(\"transform\", function (d) {\n            return \"translate(\" + dimensionPosition(d.key) + \")\";\n          });\n        }\n\n        function dragEnd(d, i) {\n          delete this.parentNode.__origin__;\n          delete dragging[d.key];\n          d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n          foreground.attr(\"d\", path);\n          background.attr(\"d\", path).attr(\"visibility\", null);\n          dispatch.dimensionsOrder(enabledDimensions);\n        }\n\n        function dimensionPosition(d) {\n          var v = dragging[d];\n          return v == null ? x(d) : v;\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      filters: {\n        get: function get() {\n          return filters;\n        },\n        set: function set(_) {\n          filters = _;\n        }\n      },\n      active: {\n        get: function get() {\n          return active;\n        },\n        set: function set(_) {\n          active = _;\n        }\n      },\n      lineTension: {\n        get: function get() {\n          return lineTension;\n        },\n        set: function set(_) {\n          lineTension = _;\n        }\n      },\n      undefinedValuesLabel: {\n        get: function get() {\n          return undefinedValuesLabel;\n        },\n        set: function set(_) {\n          undefinedValuesLabel = _;\n        }\n      },\n      // deprecated options\n      dimensions: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensions', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionNames: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionNames', 'use dimensionData instead');\n          dimensionNames = [];\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionFormats: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.format;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (f) {\n              dimensionData.push({\n                format: f\n              });\n            });\n          } else {\n            _.forEach(function (f, i) {\n              dimensionData[i].format = f;\n            });\n          }\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.parallelCoordinatesChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var parallelCoordinates = nv.models.parallelCoordinates();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var dimensionTooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showLegend = true,\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        dimensionData = [],\n        displayBrush = true,\n        defaultState = null,\n        noData = null,\n        nanValue = \"undefined\",\n        dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    }; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    };\n\n    tooltip.contentGenerator(function (data) {\n      var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\n      if (data.series.length !== 0) {\n        str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n        data.series.forEach(function (d) {\n          str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n        });\n        str = str + '</tbody>';\n      }\n\n      str = str + '</table>';\n      return str;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(parallelCoordinates);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(dimensionData), chart.update).getter(stateGetter(dimensionData)).update(); //set state.disabled\n\n        state.disabled = dimensionData.map(function (d) {\n          return !!d.disabled;\n        }); //Keep dimensions position in memory\n\n        dimensionData = dimensionData.map(function (d) {\n          d.disabled = !!d.disabled;\n          return d;\n        });\n        dimensionData.forEach(function (d, i) {\n          d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n          d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.select(\"rect\").attr(\"width\", availableWidth).attr(\"height\", availableHeight > 0 ? availableHeight : 0); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth).color(function (d) {\n            return \"rgb(188,190,192)\";\n          });\n          g.select('.nv-legendWrap').datum(dimensionData.sort(function (a, b) {\n            return a.originalPosition - b.originalPosition;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate( 0 ,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        parallelCoordinates.width(availableWidth).height(availableHeight).dimensionData(dimensionData).displayBrush(displayBrush);\n        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ').datum(data);\n        parallelCoordinatesWrap.transition().call(parallelCoordinates); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //Display reset brush button\n\n        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n          if (hasActiveBrush) {\n            displayBrush = true;\n            dispatch.brushEnd(active);\n          } else {\n            displayBrush = false;\n          }\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); //Update dimensions order and display reset sorting button\n\n        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n          dimensionData.sort(function (a, b) {\n            return a.currentPosition - b.currentPosition;\n          });\n          var isSorted = false;\n          dimensionData.forEach(function (d, i) {\n            d.currentPosition = i;\n            if (d.currentPosition !== d.originalPosition) isSorted = true;\n          });\n          dispatch.dimensionsOrder(dimensionData, isSorted);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            dimensionData.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('parraleleCoordinateChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var tp = {\n        key: evt.label,\n        color: evt.color,\n        series: []\n      };\n\n      if (evt.values) {\n        Object.keys(evt.values).forEach(function (d) {\n          var dim = evt.dimensions.filter(function (dd) {\n            return dd.key === d;\n          })[0];\n\n          if (dim) {\n            var v;\n\n            if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n              v = nanValue;\n            } else {\n              v = dim.format(evt.values[d]);\n            }\n\n            tp.series.push({\n              idx: dim.currentPosition,\n              key: d,\n              value: v,\n              color: dim.color\n            });\n          }\n        });\n        tp.series.sort(function (a, b) {\n          return a.idx - b.idx;\n        });\n      }\n\n      tooltip.data(tp).hidden(false);\n    });\n    parallelCoordinates.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.parallelCoordinates = parallelCoordinates;\n    chart.legend = legend;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nanValue: {\n        get: function get() {\n          return nanValue;\n        },\n        set: function set(_) {\n          nanValue = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          parallelCoordinates.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, parallelCoordinates);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pie = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 500,\n        height = 500,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        valueFormat = d3.format(',.2f'),\n        showLabels = true,\n        labelsOutside = false,\n        labelType = \"key\",\n        labelThreshold = .02 //if slice percentage is under this, don't show label\n    ,\n        hideOverlapLabels = false //Hide labels that don't fit in slice\n    ,\n        donut = false,\n        title = false,\n        growOnHover = true,\n        titleOffset = 0,\n        labelSunbeamLayout = false,\n        startAngle = false,\n        padAngle = false,\n        endAngle = false,\n        cornerRadius = 0,\n        donutRatio = 0.5,\n        duration = 250,\n        arcsRadius = [],\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd');\n\n    var arcs = [];\n    var arcsOver = []; //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom,\n            radius = Math.min(availableWidth, availableHeight) / 2,\n            arcsRadiusOuter = [],\n            arcsRadiusInner = [];\n        container = d3.select(this);\n\n        if (arcsRadius.length === 0) {\n          var outer = radius - radius / 10;\n          var inner = donutRatio * radius;\n\n          for (var i = 0; i < data[0].length; i++) {\n            arcsRadiusOuter.push(outer);\n            arcsRadiusInner.push(inner);\n          }\n        } else {\n          if (growOnHover) {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return (d.outer - d.outer / 10) * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return (d.inner - d.inner / 10) * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner - d.inner / 10;\n            }));\n          } else {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return d.outer * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return d.inner * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner;\n            }));\n          }\n        }\n\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pie nv-chart-' + id);\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n        gEnter.append('g').attr('class', 'nv-pieLabels');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n        g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')'); //\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        arcs = [];\n        arcsOver = [];\n\n        for (var i = 0; i < data[0].length; i++) {\n          var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n          var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n          if (startAngle !== false) {\n            arc.startAngle(startAngle);\n            arcOver.startAngle(startAngle);\n          }\n\n          if (endAngle !== false) {\n            arc.endAngle(endAngle);\n            arcOver.endAngle(endAngle);\n          }\n\n          if (donut) {\n            arc.innerRadius(arcsRadiusInner[i]);\n            arcOver.innerRadius(arcsRadiusInner[i]);\n          }\n\n          if (arc.cornerRadius && cornerRadius) {\n            arc.cornerRadius(cornerRadius);\n            arcOver.cornerRadius(cornerRadius);\n          }\n\n          arcs.push(arc);\n          arcsOver.push(arcOver);\n        } // Setup the Pie chart and choose the data element\n\n\n        var pie = d3.layout.pie().sort(null).value(function (d) {\n          return d.disabled ? 0 : getY(d);\n        }); // padAngle added in d3 3.5\n\n        if (pie.padAngle && padAngle) {\n          pie.padAngle(padAngle);\n        } // if title is specified and donut, put it in the middle\n\n\n        if (donut && title) {\n          g_pie.append(\"text\").attr('class', 'nv-pie-title');\n          wrap.select('.nv-pie-title').style(\"text-anchor\", \"middle\").text(function (d) {\n            return title;\n          }).style(\"font-size\", Math.min(availableWidth, availableHeight) * donutRatio * 2 / (title.length + 2) + \"px\").attr(\"dy\", \"0.35em\") // trick to vertically center text\n          .attr('transform', function (d, i) {\n            return 'translate(0, ' + titleOffset + ')';\n          });\n        }\n\n        var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n        var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n        slices.exit().remove();\n        pieLabels.exit().remove();\n        var ae = slices.enter().append('g');\n        ae.attr('class', 'nv-slice');\n        ae.on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(70).attr(\"d\", arcsOver[i]);\n          }\n\n          dispatch.elementMouseover({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n          });\n        });\n        ae.on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(50).attr(\"d\", arcs[i]);\n          }\n\n          dispatch.elementMouseout({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n        });\n        ae.on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        slices.attr('fill', function (d, i) {\n          return color(d.data, i);\n        });\n        slices.attr('stroke', function (d, i) {\n          return color(d.data, i);\n        });\n        var paths = ae.append('path').each(function (d) {\n          this._current = d;\n        });\n        slices.select('path').transition().duration(duration).attr('d', function (d, i) {\n          return arcs[i](d);\n        }).attrTween('d', arcTween);\n\n        if (showLabels) {\n          // This does the normal label\n          var labelsArc = [];\n\n          for (var i = 0; i < data[0].length; i++) {\n            labelsArc.push(arcs[i]);\n\n            if (labelsOutside) {\n              if (donut) {\n                labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n              }\n            } else if (!donut) {\n              labelsArc[i].innerRadius(0);\n            }\n          }\n\n          pieLabels.enter().append(\"g\").classed(\"nv-label\", true).each(function (d, i) {\n            var group = d3.select(this);\n            group.attr('transform', function (d, i) {\n              if (labelSunbeamLayout) {\n                d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n                d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n                var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n                if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                  rotateAngle -= 90;\n                } else {\n                  rotateAngle += 90;\n                }\n\n                return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n              } else {\n                d.outerRadius = radius + 10; // Set Outer Coordinate\n\n                d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                return 'translate(' + labelsArc[i].centroid(d) + ')';\n              }\n            });\n            group.append('rect').style('stroke', '#fff').style('fill', '#fff').attr(\"rx\", 3).attr(\"ry\", 3);\n            group.append('text').style('text-anchor', labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n            .style('fill', '#000');\n          });\n          var labelLocationHash = {};\n          var avgHeight = 14;\n          var avgWidth = 140;\n\n          var createHashKey = function createHashKey(coordinates) {\n            return Math.floor(coordinates[0] / avgWidth) * avgWidth + ',' + Math.floor(coordinates[1] / avgHeight) * avgHeight;\n          };\n\n          var getSlicePercentage = function getSlicePercentage(d) {\n            return (d.endAngle - d.startAngle) / (2 * Math.PI);\n          };\n\n          pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n            if (labelSunbeamLayout) {\n              d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n              d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n              var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n              if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                rotateAngle -= 90;\n              } else {\n                rotateAngle += 90;\n              }\n\n              return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n            } else {\n              d.outerRadius = radius + 10; // Set Outer Coordinate\n\n              d.innerRadius = radius + 15; // Set Inner Coordinate\n\n              /*\n              Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n              Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n              Adjust the label's y-position to remove the overlap.\n              */\n\n              var center = labelsArc[i].centroid(d);\n              var percent = getSlicePercentage(d);\n\n              if (d.value && percent >= labelThreshold) {\n                var hashKey = createHashKey(center);\n\n                if (labelLocationHash[hashKey]) {\n                  center[1] -= avgHeight;\n                }\n\n                labelLocationHash[createHashKey(center)] = true;\n              }\n\n              return 'translate(' + center + ')';\n            }\n          });\n          pieLabels.select(\".nv-label text\").style('text-anchor', function (d, i) {\n            //center the text on it's origin or begin/end if orthogonal aligned\n            return labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle';\n          }).text(function (d, i) {\n            var percent = getSlicePercentage(d);\n            var label = '';\n            if (!d.value || percent < labelThreshold) return '';\n\n            if (typeof labelType === 'function') {\n              label = labelType(d, i, {\n                'key': getX(d.data),\n                'value': getY(d.data),\n                'percent': valueFormat(percent)\n              });\n            } else {\n              switch (labelType) {\n                case 'key':\n                  label = getX(d.data);\n                  break;\n\n                case 'value':\n                  label = valueFormat(getY(d.data));\n                  break;\n\n                case 'percent':\n                  label = d3.format('%')(percent);\n                  break;\n              }\n            }\n\n            return label;\n          });\n\n          if (hideOverlapLabels) {\n            pieLabels.each(function (d, i) {\n              if (!this.getBBox) return;\n              var bb = this.getBBox(),\n                  center = labelsArc[i].centroid(d);\n              var topLeft = {\n                x: center[0] + bb.x,\n                y: center[1] + bb.y\n              };\n              var topRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y\n              };\n              var bottomLeft = {\n                x: topLeft.x,\n                y: topLeft.y + bb.height\n              };\n              var bottomRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y + bb.height\n              };\n              d.visible = nv.utils.pointIsInArc(topLeft, d, arc) && nv.utils.pointIsInArc(topRight, d, arc) && nv.utils.pointIsInArc(bottomLeft, d, arc) && nv.utils.pointIsInArc(bottomRight, d, arc);\n            }).style('display', function (d) {\n              return d.visible ? null : 'none';\n            });\n          }\n        } // Computes the angle of an arc, converting from radians to degrees.\n\n\n        function angle(d) {\n          var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n          return a > 90 ? a - 180 : a;\n        }\n\n        function arcTween(a, idx) {\n          a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n          a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n          if (!donut) a.innerRadius = 0;\n          var i = d3.interpolate(this._current, a);\n          this._current = i(0);\n          return function (t) {\n            return arcs[idx](i(t));\n          };\n        }\n      });\n      renderWatch.renderEnd('pie immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      arcsRadius: {\n        get: function get() {\n          return arcsRadius;\n        },\n        set: function set(_) {\n          arcsRadius = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      title: {\n        get: function get() {\n          return title;\n        },\n        set: function set(_) {\n          title = _;\n        }\n      },\n      titleOffset: {\n        get: function get() {\n          return titleOffset;\n        },\n        set: function set(_) {\n          titleOffset = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      hideOverlapLabels: {\n        get: function get() {\n          return hideOverlapLabels;\n        },\n        set: function set(_) {\n          hideOverlapLabels = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      endAngle: {\n        get: function get() {\n          return endAngle;\n        },\n        set: function set(_) {\n          endAngle = _;\n        }\n      },\n      startAngle: {\n        get: function get() {\n          return startAngle;\n        },\n        set: function set(_) {\n          startAngle = _;\n        }\n      },\n      padAngle: {\n        get: function get() {\n          return padAngle;\n        },\n        set: function set(_) {\n          padAngle = _;\n        }\n      },\n      cornerRadius: {\n        get: function get() {\n          return cornerRadius;\n        },\n        set: function set(_) {\n          cornerRadius = _;\n        }\n      },\n      donutRatio: {\n        get: function get() {\n          return donutRatio;\n        },\n        set: function set(_) {\n          donutRatio = _;\n        }\n      },\n      labelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n        }\n      },\n      labelSunbeamLayout: {\n        get: function get() {\n          return labelSunbeamLayout;\n        },\n        set: function set(_) {\n          labelSunbeamLayout = _;\n        }\n      },\n      donut: {\n        get: function get() {\n          return donut;\n        },\n        set: function set(_) {\n          donut = _;\n        }\n      },\n      growOnHover: {\n        get: function get() {\n          return growOnHover;\n        },\n        set: function set(_) {\n          growOnHover = _;\n        }\n      },\n      // depreciated after 1.7.1\n      pieLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // depreciated after 1.7.1\n      donutLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // deprecated after 1.7.1\n      labelFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n          nv.deprecated('labelFormat', 'use valueFormat instead');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n          margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n          margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n          margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      labelType: {\n        get: function get() {\n          return labelType;\n        },\n        set: function set(_) {\n          labelType = _ || 'key';\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pieChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showTooltipPercent = false,\n        showLegend = true,\n        legendPosition = \"top\",\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return pie.valueFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    }; //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(pie);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-pieWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === \"top\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          } else if (legendPosition === \"right\") {\n            var legendWidth = nv.models.legend().width();\n\n            if (availableWidth / 2 < legendWidth) {\n              legendWidth = availableWidth / 2;\n            }\n\n            legend.height(availableHeight).key(pie.x());\n            legend.width(legendWidth);\n            availableWidth -= legend.width();\n            wrap.select('.nv-legendWrap').datum(data).call(legend).attr('transform', 'translate(' + availableWidth + ',0)');\n          } else if (legendPosition === \"bottom\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + availableHeight + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        pie.width(availableWidth).height(availableHeight);\n        var pieWrap = g.select('.nv-pieWrap').datum([data]);\n        d3.transition(pieWrap).call(pie); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('pieChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    pie.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    pie.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    pie.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          legend.color(color);\n          pie.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          pie.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sankey = function () {\n    'use strict'; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function layout(iterations) {\n      computeNodeLinks();\n      computeNodeValues();\n      computeNodeBreadths();\n      computeNodeDepths(iterations);\n    };\n\n    var relayout = function relayout() {\n      computeLinkDepths();\n    }; // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n\n\n    var link = function link() {\n      var curvature = .5;\n\n      function link(d) {\n        var x0 = d.source.x + d.source.dx,\n            x1 = d.target.x,\n            xi = d3.interpolateNumber(x0, x1),\n            x2 = xi(curvature),\n            x3 = xi(1 - curvature),\n            y0 = d.source.y + d.sy + d.dy / 2,\n            y1 = d.target.y + d.ty + d.dy / 2;\n        var linkPath = 'M' + x0 + ',' + y0 + 'C' + x2 + ',' + y0 + ' ' + x3 + ',' + y1 + ' ' + x1 + ',' + y1;\n        return linkPath;\n      }\n\n      link.curvature = function (_) {\n        if (!arguments.length) return curvature;\n        curvature = +_;\n        return link;\n      };\n\n      return link;\n    }; // Y-position of the middle of a node.\n\n\n    var center = function center(node) {\n      return node.y + node.dy / 2;\n    }; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n\n\n    function computeNodeLinks() {\n      nodes.forEach(function (node) {\n        // Links that have this node as source.\n        node.sourceLinks = []; // Links that have this node as target.\n\n        node.targetLinks = [];\n      });\n      links.forEach(function (link) {\n        var source = link.source,\n            target = link.target;\n        if (typeof source === 'number') source = link.source = nodes[link.source];\n        if (typeof target === 'number') target = link.target = nodes[link.target];\n        source.sourceLinks.push(link);\n        target.targetLinks.push(link);\n      });\n    } // Compute the value (size) of each node by summing the associated links.\n\n\n    function computeNodeValues() {\n      nodes.forEach(function (node) {\n        node.value = Math.max(d3.sum(node.sourceLinks, value), d3.sum(node.targetLinks, value));\n      });\n    } // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n\n\n    function computeNodeBreadths() {\n      //\n      var remainingNodes = nodes,\n          nextNodes,\n          x = 0; // Work from left to right.\n      // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n      //\n\n      while (remainingNodes.length && x < nodes.length) {\n        nextNodes = [];\n        remainingNodes.forEach(function (node) {\n          node.x = x;\n          node.dx = nodeWidth;\n          node.sourceLinks.forEach(function (link) {\n            if (nextNodes.indexOf(link.target) < 0) {\n              nextNodes.push(link.target);\n            }\n          });\n        });\n        remainingNodes = nextNodes;\n        ++x; //\n      } // Optionally move pure sinks always to the right.\n\n\n      if (sinksRight) {\n        moveSinksRight(x);\n      }\n\n      scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n      nodes.forEach(function (node) {\n        if (!node.targetLinks.length) {\n          node.x = d3.min(node.sourceLinks, function (d) {\n            return d.target.x;\n          }) - 1;\n        }\n      });\n    }\n\n    function moveSinksRight(x) {\n      nodes.forEach(function (node) {\n        if (!node.sourceLinks.length) {\n          node.x = x - 1;\n        }\n      });\n    }\n\n    function scaleNodeBreadths(kx) {\n      nodes.forEach(function (node) {\n        node.x *= kx;\n      });\n    } // Compute the depth (y-position) for each node.\n\n\n    function computeNodeDepths(iterations) {\n      // Group nodes by breath.\n      var nodesByBreadth = d3.nest().key(function (d) {\n        return d.x;\n      }).sortKeys(d3.ascending).entries(nodes).map(function (d) {\n        return d.values;\n      }); //\n\n      initializeNodeDepth();\n      resolveCollisions();\n      computeLinkDepths();\n\n      for (var alpha = 1; iterations > 0; --iterations) {\n        relaxRightToLeft(alpha *= .99);\n        resolveCollisions();\n        computeLinkDepths();\n        relaxLeftToRight(alpha);\n        resolveCollisions();\n        computeLinkDepths();\n      }\n\n      function initializeNodeDepth() {\n        // Calculate vertical scaling factor.\n        var ky = d3.min(nodesByBreadth, function (nodes) {\n          return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n        });\n        nodesByBreadth.forEach(function (nodes) {\n          nodes.forEach(function (node, i) {\n            node.y = i;\n            node.dy = node.value * ky;\n          });\n        });\n        links.forEach(function (link) {\n          link.dy = link.value * ky;\n        });\n      }\n\n      function relaxLeftToRight(alpha) {\n        nodesByBreadth.forEach(function (nodes, breadth) {\n          nodes.forEach(function (node) {\n            if (node.targetLinks.length) {\n              // Value-weighted average of the y-position of source node centers linked to this node.\n              var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedSource(link) {\n          return (link.source.y + link.sy + link.dy / 2) * link.value;\n        }\n      }\n\n      function relaxRightToLeft(alpha) {\n        nodesByBreadth.slice().reverse().forEach(function (nodes) {\n          nodes.forEach(function (node) {\n            if (node.sourceLinks.length) {\n              // Value-weighted average of the y-positions of target nodes linked to this node.\n              var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedTarget(link) {\n          return (link.target.y + link.ty + link.dy / 2) * link.value;\n        }\n      }\n\n      function resolveCollisions() {\n        nodesByBreadth.forEach(function (nodes) {\n          var node,\n              dy,\n              y0 = 0,\n              n = nodes.length,\n              i; // Push any overlapping nodes down.\n\n          nodes.sort(ascendingDepth);\n\n          for (i = 0; i < n; ++i) {\n            node = nodes[i];\n            dy = y0 - node.y;\n            if (dy > 0) node.y += dy;\n            y0 = node.y + node.dy + nodePadding;\n          } // If the bottommost node goes outside the bounds, push it back up.\n\n\n          dy = y0 - nodePadding - size[1];\n\n          if (dy > 0) {\n            y0 = node.y -= dy; // Push any overlapping nodes back up.\n\n            for (i = n - 2; i >= 0; --i) {\n              node = nodes[i];\n              dy = node.y + node.dy + nodePadding - y0;\n              if (dy > 0) node.y -= dy;\n              y0 = node.y;\n            }\n          }\n        });\n      }\n\n      function ascendingDepth(a, b) {\n        return a.y - b.y;\n      }\n    } // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n\n\n    function computeLinkDepths() {\n      nodes.forEach(function (node) {\n        node.sourceLinks.sort(ascendingTargetDepth);\n        node.targetLinks.sort(ascendingSourceDepth);\n      });\n      nodes.forEach(function (node) {\n        var sy = 0,\n            ty = 0;\n        node.sourceLinks.forEach(function (link) {\n          link.sy = sy;\n          sy += link.dy;\n        });\n        node.targetLinks.forEach(function (link) {\n          link.ty = ty;\n          ty += link.dy;\n        });\n      });\n\n      function ascendingSourceDepth(a, b) {\n        return a.source.y - b.source.y;\n      }\n\n      function ascendingTargetDepth(a, b) {\n        return a.target.y - b.target.y;\n      }\n    } // Value property accessor.\n\n\n    function value(x) {\n      return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = +_;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      nodes: {\n        get: function get() {\n          return nodes;\n        },\n        set: function set(_) {\n          nodes = _;\n        }\n      },\n      links: {\n        get: function get() {\n          return links;\n        },\n        set: function set(_) {\n          links = _;\n        }\n      },\n      size: {\n        get: function get() {\n          return size;\n        },\n        set: function set(_) {\n          size = _;\n        }\n      },\n      sinksRight: {\n        get: function get() {\n          return sinksRight;\n        },\n        set: function set(_) {\n          sinksRight = _;\n        }\n      },\n      layout: {\n        get: function get() {\n          layout(32);\n        },\n        set: function set(_) {\n          layout(_);\n        }\n      },\n      relayout: {\n        get: function get() {\n          relayout();\n        },\n        set: function set(_) {}\n      },\n      center: {\n        get: function get() {\n          return center();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            center = _;\n          }\n        }\n      },\n      link: {\n        get: function get() {\n          return link();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            link = _;\n          }\n\n          return link();\n        }\n      }\n    });\n    nv.utils.initOptions(sankey);\n    return sankey;\n  };\n\n  nv.models.sankeyChart = function () {\n    \"use strict\"; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        sankey = nv.models.sankey(),\n        width = 600,\n        height = 400,\n        nodeWidth = 36,\n        nodePadding = 40,\n        units = 'units',\n        center = undefined; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f'); // zero decimal places\n\n    var format = function format(d) {\n      return formatNumber(d) + ' ' + units;\n    };\n\n    var color = d3.scale.category20();\n\n    var linkTitle = function linkTitle(d) {\n      return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n\n    var nodeFillColor = function nodeFillColor(d) {\n      return d.color = color(d.name.replace(/ .*/, ''));\n    };\n\n    var nodeStrokeColor = function nodeStrokeColor(d) {\n      return d3.rgb(d.color).darker(2);\n    };\n\n    var nodeTitle = function nodeTitle(d) {\n      return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function showError(element, message) {\n      element.append('text').attr('x', 0).attr('y', 0).attr('class', 'nvd3-sankey-chart-error').attr('text-anchor', 'middle').text(message);\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var testData = {\n          nodes: [{\n            'node': 1,\n            'name': 'Test 1'\n          }, {\n            'node': 2,\n            'name': 'Test 2'\n          }, {\n            'node': 3,\n            'name': 'Test 3'\n          }, {\n            'node': 4,\n            'name': 'Test 4'\n          }, {\n            'node': 5,\n            'name': 'Test 5'\n          }, {\n            'node': 6,\n            'name': 'Test 6'\n          }],\n          links: [{\n            'source': 0,\n            'target': 1,\n            'value': 2295\n          }, {\n            'source': 0,\n            'target': 5,\n            'value': 1199\n          }, {\n            'source': 1,\n            'target': 2,\n            'value': 1119\n          }, {\n            'source': 1,\n            'target': 5,\n            'value': 1176\n          }, {\n            'source': 2,\n            'target': 3,\n            'value': 487\n          }, {\n            'source': 2,\n            'target': 5,\n            'value': 632\n          }, {\n            'source': 3,\n            'target': 4,\n            'value': 301\n          }, {\n            'source': 3,\n            'target': 5,\n            'value': 186\n          }]\n        }; // Error handling\n\n        var isDataValid = false;\n        var dataAvailable = false; // check if data is valid\n\n        if ((typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 && (typeof data['links'] === 'object' && data['links'].length) >= 0) {\n          isDataValid = true;\n        } // check if data is available\n\n\n        if (data['nodes'] && data['nodes'].length > 0 && data['links'] && data['links'].length > 0) {\n          dataAvailable = true;\n        } // show error\n\n\n        if (!isDataValid) {\n          console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n          console.info('Valid data format is: ', testData, JSON.stringify(testData));\n          showError(selection, 'Error loading chart, data is invalid');\n          return false;\n        } // TODO use nv.utils.noData\n\n\n        if (!dataAvailable) {\n          showError(selection, 'No data available');\n          return false;\n        } // No errors, continue\n        // append the svg canvas to the page\n\n\n        var svg = selection.append('svg').attr('width', width).attr('height', height).append('g').attr('class', 'nvd3 nv-wrap nv-sankeyChart'); // Set the sankey diagram properties\n\n        sankey.nodeWidth(nodeWidth).nodePadding(nodePadding).size([width, height]);\n        var path = sankey.link();\n        sankey.nodes(data.nodes).links(data.links).layout(32).center(center); // add in the links\n\n        var link = svg.append('g').selectAll('.link').data(data.links).enter().append('path').attr('class', 'link').attr('d', path).style('stroke-width', function (d) {\n          return Math.max(1, d.dy);\n        }).sort(function (a, b) {\n          return b.dy - a.dy;\n        }); // add the link titles\n\n        link.append('title').text(linkTitle); // add in the nodes\n\n        var node = svg.append('g').selectAll('.node').data(data.nodes).enter().append('g').attr('class', 'node').attr('transform', function (d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        }).call(d3.behavior.drag().origin(function (d) {\n          return d;\n        }).on('dragstart', function () {\n          this.parentNode.appendChild(this);\n        }).on('drag', dragmove)); // add the rectangles for the nodes\n\n        node.append('rect').attr('height', function (d) {\n          return d.dy;\n        }).attr('width', sankey.nodeWidth()).style('fill', nodeFillColor).style('stroke', nodeStrokeColor).append('title').text(nodeTitle); // add in the title for the nodes\n\n        node.append('text').attr('x', -6).attr('y', function (d) {\n          return d.dy / 2;\n        }).attr('dy', '.35em').attr('text-anchor', 'end').attr('transform', null).text(function (d) {\n          return d.name;\n        }).filter(function (d) {\n          return d.x < width / 2;\n        }).attr('x', 6 + sankey.nodeWidth()).attr('text-anchor', 'start'); // the function for moving the nodes\n\n        function dragmove(d) {\n          d3.select(this).attr('transform', 'translate(' + d.x + ',' + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ')');\n          sankey.relayout();\n          link.attr('d', path);\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      units: {\n        get: function get() {\n          return units;\n        },\n        set: function set(_) {\n          units = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      format: {\n        get: function get() {\n          return format;\n        },\n        set: function set(_) {\n          format = _;\n        }\n      },\n      linkTitle: {\n        get: function get() {\n          return linkTitle;\n        },\n        set: function set(_) {\n          linkTitle = _;\n        }\n      },\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = _;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      center: {\n        get: function get() {\n          return center;\n        },\n        set: function set(_) {\n          center = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      nodeStyle: {\n        get: function get() {\n          return {};\n        },\n        set: function set(_) {\n          nodeFillColor = _.fillColor !== undefined ? _.fillColor : nodeFillColor;\n          nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n          nodeTitle = _.title !== undefined ? _.title : nodeTitle;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatter = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor() // chooses color\n    ,\n        pointBorderColor = null,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        z = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value\n    ,\n        getSize = function getSize(d) {\n      return d.size || 1;\n    } // accessor to get the point size\n    ,\n        getShape = function getShape(d) {\n      return d.shape || 'circle';\n    } // accessor to get point shape\n    ,\n        forceX = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        forceY = [] // List of numbers to Force into the Y scale\n    ,\n        forceSize = [] // List of numbers to Force into the Size scale\n    ,\n        interactive = true // If true, plots a voronoi overlay for advanced point intersection\n    ,\n        pointActive = function pointActive(d) {\n      return !d.notActive;\n    } // any points that return false will be filtered out\n    ,\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n    ,\n        clipEdge = false // if true, masks points within x and y scale\n    ,\n        clipVoronoi = true // if true, masks each point with a circle... can turn off to slightly increase performance\n    ,\n        showVoronoi = false // display the voronoi areas\n    ,\n        clipRadius = function clipRadius() {\n      return 25;\n    } // function to get the radius for voronoi point clips\n    ,\n        xDomain = null // Override x domain (skips the calculation from data)\n    ,\n        yDomain = null // Override y domain\n    ,\n        xRange = null // Override x range\n    ,\n        yRange = null // Override y range\n    ,\n        sizeDomain = null // Override point size domain\n    ,\n        sizeRange = null,\n        singlePoint = false,\n        dispatch = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd'),\n        useVoronoi = true,\n        duration = 250,\n        interactiveUpdateDelay = 300,\n        showLabels = false; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0,\n        z0 // used to store previous scales\n    ,\n        xDom,\n        yDom // used to store previous domains\n    ,\n        width0,\n        height0,\n        timeoutID,\n        needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        _sizeRange_def = [16, 256],\n        _cache = {}; //============================================================\n    // Diff and Cache Utilities\n    //------------------------------------------------------------\n    // getDiffs is used to filter unchanged points from the update\n    // selection. It implicitly updates it's cache when called and\n    // therefor the diff is based upon the previous invocation NOT\n    // the previous update.\n    //\n    // getDiffs takes a point as its first argument followed by n\n    // key getter pairs (d, [key, get... key, get]) this approach\n    // was chosen for efficiency. (The filter will call it a LOT).\n    //\n    // It is important to call delCache on point exit to prevent a\n    // memory leak. It is also needed to prevent invalid caches if\n    // a new point uses the same series and point id key.\n    //\n    // Argument Performance Concerns:\n    // - Object property lists for key getter pairs would be very\n    // expensive (points * objects for the GC every update).\n    // - ES6 function names for implicit keys would be nice but\n    // they are not guaranteed to be unique.\n    // - function.toString to obtain implicit keys is possible\n    // but long object keys are not free (internal hash).\n    // - Explicit key without objects are the most efficient.\n\n    function getCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      val = _cache[key] = _cache[key] || {};\n      return val;\n    }\n\n    function delCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      delete _cache[key];\n    }\n\n    function getDiffs(d) {\n      var i,\n          key,\n          val,\n          cache = getCache(d),\n          diffs = false;\n\n      for (i = 1; i < arguments.length; i += 2) {\n        key = arguments[i];\n        val = arguments[i + 1](d[0], d[1]);\n\n        if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n          cache[key] = val;\n          diffs = true;\n        }\n      }\n\n      return diffs;\n    }\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n\n        var logScale = typeof chart.yScale().base === \"function\"; // Only log scale has a method \"base()\"\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain && sizeDomain ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n        d3.merge(data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              size: getSize(d, i)\n            };\n          });\n        }));\n        x.domain(xDomain || d3.extent(seriesData.map(function (d) {\n          return d.x;\n        }).concat(forceX)));\n        if (padData && data[0]) x.range(xRange || [(availableWidth * padDataOuter + availableWidth) / (2 * data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)]); //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n        else x.range(xRange || [0, availableWidth]);\n\n        if (logScale) {\n          var min = d3.min(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;\n          }));\n          y.clamp(true).domain(yDomain || d3.extent(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;else return min * 0.1;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        } else {\n          y.domain(yDomain || d3.extent(seriesData.map(function (d) {\n            return d.y;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        }\n\n        z.domain(sizeDomain || d3.extent(seriesData.map(function (d) {\n          return d.size;\n        }).concat(forceSize))).range(sizeRange || _sizeRange_def); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n\n        if (isNaN(x.domain()[0])) {\n          x.domain([-1, 1]);\n        }\n\n        if (isNaN(y.domain()[0])) {\n          y.domain([-1, 1]);\n        }\n\n        x0 = x0 || x;\n        y0 = y0 || y;\n        z0 = z0 || z;\n        var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n        width0 = width0 || width;\n        height0 = height0 || height;\n        var sizeDiff = width0 !== width || height0 !== height; // Domain Diffs\n\n        xDom = xDom || [];\n        var domainDiff = xDom[0] !== x.domain()[0] || xDom[1] !== x.domain()[1];\n        xDom = x.domain();\n        yDom = yDom || [];\n        domainDiff = domainDiff || yDom[0] !== y.domain()[0] || yDom[1] !== y.domain()[1];\n        yDom = y.domain(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.classed('nv-single-point', singlePoint);\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-point-paths');\n        wrapEnter.append('g').attr('class', 'nv-point-clips');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect').attr('transform', 'translate( -10, -10)');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth + 20).attr('height', availableHeight > 0 ? availableHeight + 20 : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n        function updateInteractiveLayer() {\n          // Always clear needs-update flag regardless of whether or not\n          // we will actually do anything (avoids needless invocations).\n          needsUpdate = false;\n          if (!interactive) return false; // inject series and point index for reference into voronoi\n\n          if (useVoronoi === true) {\n            // nuke all voronoi paths on reload and recreate them\n            wrap.select('.nv-point-paths').selectAll('path').remove();\n            var vertices = d3.merge(data.map(function (group, groupIndex) {\n              return group.values.map(function (point, pointIndex) {\n                // *Adding noise to make duplicates very unlikely\n                // *Injecting series and point index for reference\n                // *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                var pX = getX(point, pointIndex);\n                var pY = getY(point, pointIndex);\n                return [nv.utils.NaNtoZero(x(pX)) + Math.random() * 1e-4, nv.utils.NaNtoZero(y(pY)) + Math.random() * 1e-4, groupIndex, pointIndex, point];\n              }).filter(function (pointArray, pointIndex) {\n                return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n              });\n            }));\n            if (vertices.length == 0) return false; // No active points, we're done\n\n            if (vertices.length < 3) {\n              // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n              vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n              vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n            } // keep voronoi sections from going more than 10 outside of graph\n            // to avoid overlap with other things like legend etc\n\n\n            var bounds = d3.geom.polygon([[-10, -10], [-10, height + 10], [width + 10, height + 10], [width + 10, -10]]); // delete duplicates from vertices - essential assumption for d3.geom.voronoi\n\n            var epsilon = 1e-4; // Uses 1e-4 to determine equivalence.\n\n            vertices = vertices.sort(function (a, b) {\n              return a[0] - b[0] || a[1] - b[1];\n            });\n\n            for (var i = 0; i < vertices.length - 1;) {\n              if (Math.abs(vertices[i][0] - vertices[i + 1][0]) < epsilon && Math.abs(vertices[i][1] - vertices[i + 1][1]) < epsilon) {\n                vertices.splice(i + 1, 1);\n              } else {\n                i++;\n              }\n            }\n\n            var voronoi = d3.geom.voronoi(vertices).map(function (d, i) {\n              return {\n                'data': bounds.clip(d),\n                'series': vertices[i][2],\n                'point': vertices[i][3]\n              };\n            });\n            var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n            var vPointPaths = pointPaths.enter().append(\"svg:path\").attr(\"d\", function (d) {\n              if (!d || !d.data || d.data.length === 0) return 'M 0 0';else return \"M\" + d.data.join(\",\") + \"Z\";\n            }).attr(\"id\", function (d, i) {\n              return \"nv-path-\" + i;\n            }).attr(\"clip-path\", function (d, i) {\n              return \"url(#nv-clip-\" + id + \"-\" + i + \")\";\n            }); // good for debugging point hover issues\n\n            if (showVoronoi) {\n              vPointPaths.style(\"fill\", d3.rgb(230, 230, 230)).style('fill-opacity', 0.4).style('stroke-opacity', 1).style(\"stroke\", d3.rgb(200, 200, 200));\n            }\n\n            if (clipVoronoi) {\n              // voronoi sections are already set to clip,\n              // just create the circles with the IDs they expect\n              wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\n              var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n              var vPointClips = pointClips.enter().append(\"svg:clipPath\").attr(\"id\", function (d, i) {\n                return \"nv-clip-\" + id + \"-\" + i;\n              }).append(\"svg:circle\").attr('cx', function (d) {\n                return d[0];\n              }).attr('cy', function (d) {\n                return d[1];\n              }).attr('r', clipRadius);\n            }\n\n            var mouseEventCallback = function mouseEventCallback(el, d, mDispatch) {\n              if (needsUpdate) return 0;\n              var series = data[d.series];\n              if (series === undefined) return;\n              var point = series.values[d.point];\n              point['color'] = color(series, d.series); // standardize attributes for tooltip.\n\n              point['x'] = getX(point);\n              point['y'] = getY(point); // can't just get box of event node since it's actually a voronoi polygon\n\n              var box = container.node().getBoundingClientRect();\n              var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n              var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n              var pos = {\n                left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n              };\n              mDispatch({\n                point: point,\n                series: series,\n                pos: pos,\n                relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: d.point,\n                event: d3.event,\n                element: el\n              });\n            };\n\n            pointPaths.on('click', function (d) {\n              mouseEventCallback(this, d, dispatch.elementClick);\n            }).on('dblclick', function (d) {\n              mouseEventCallback(this, d, dispatch.elementDblClick);\n            }).on('mouseover', function (d) {\n              mouseEventCallback(this, d, dispatch.elementMouseover);\n            }).on('mouseout', function (d, i) {\n              mouseEventCallback(this, d, dispatch.elementMouseout);\n            });\n          } else {\n            // add event handlers to points instead voronoi paths\n            wrap.select('.nv-groups').selectAll('.nv-group').selectAll('.nv-point') //.data(dataWithPoints)\n            //.style('pointer-events', 'auto') // recativate events, disabled by css\n            .on('click', function (d, i) {\n              //nv.log('test', d, i);\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              var element = this;\n              dispatch.elementClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                event: d3.event,\n                element: element\n              });\n            }).on('dblclick', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementDblClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i\n              });\n            }).on('mouseover', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseover({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            }).on('mouseout', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseout({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            });\n          }\n        }\n\n        needsUpdate = true;\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('nv-noninteractive', !interactive).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'scatter: groups').style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.pointBorderColor || pointBorderColor || color(d, i);\n        }).style('stroke-opacity', 1).style('fill-opacity', .5); // create the points, maintaining their IDs from the original data set\n\n        var points = groups.selectAll('path.nv-point').data(function (d) {\n          return d.values.map(function (point, pointIndex) {\n            return [point, pointIndex];\n          }).filter(function (pointArray, pointIndex) {\n            return pointActive(pointArray[0], pointIndex);\n          });\n        });\n        points.enter().append('path').attr('class', function (d) {\n          return 'nv-point nv-point-' + d[1];\n        }).style('fill', function (d) {\n          return d.color;\n        }).style('stroke', function (d) {\n          return d.color;\n        }).attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n        }).attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        }));\n        points.exit().each(delCache).remove();\n        groups.exit().selectAll('path.nv-point').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }).remove(); //============================================================\n        // Point Update Optimisation Notes\n        //------------------------------------------------------------\n        // The following update selections are filtered with getDiffs\n        // (defined at the top of this file) this brings a performance\n        // benefit for charts with large data sets that accumulate a\n        // subset of changes or additions over time.\n        //\n        // Uneccesary and expensive DOM calls are avoided by culling\n        // unchanged points from the selection in exchange for the\n        // cheaper overhead of caching and diffing each point first.\n        //\n        // Due to the way D3 and NVD3 work, other global changes need\n        // to be considered in addition to local point properties.\n        // This is a potential source of bugs (if any of the global\n        // changes that possibly affect points are missed).\n        // Update Point Positions [x, y]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'x', getX, 'y', getY) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }); // Update Point Appearance [shape, size]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'shape', getShape, 'size', getSize) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        })); // add label a label to scatter chart\n\n        if (showLabels) {\n          var titles = groups.selectAll('.nv-label').data(function (d) {\n            return d.values.map(function (point, pointIndex) {\n              return [point, pointIndex];\n            }).filter(function (pointArray, pointIndex) {\n              return pointActive(pointArray[0], pointIndex);\n            });\n          });\n          titles.enter().append('text').style('fill', function (d, i) {\n            return d.color;\n          }).style('stroke-opacity', 0).style('fill-opacity', 1).attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n          }).text(function (d, i) {\n            return d[0].label;\n          });\n          titles.exit().remove();\n          groups.exit().selectAll('path.nv-label').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          }).remove();\n          titles.each(function (d) {\n            d3.select(this).classed('nv-label', true).classed('nv-label-' + d[1], false).classed('hover', false);\n          });\n          titles.watchTransition(renderWatch, 'scatter labels').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          });\n        } // Delay updating the invisible interactive layer for smoother animation\n\n\n        if (interactiveUpdateDelay) {\n          clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\n          timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay);\n        } else {\n          updateInteractiveLayer();\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy();\n        z0 = z.copy();\n        width0 = width;\n        height0 = height;\n      });\n      renderWatch.renderEnd('scatter immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart); // utility function calls provided by this chart\n\n    chart._calls = new function () {\n      this.clearHighlights = function () {\n        nv.dom.write(function () {\n          container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n        });\n        return null;\n      };\n\n      this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n        nv.dom.write(function () {\n          container.select('.nv-groups').selectAll(\".nv-series-\" + seriesIndex).selectAll(\".nv-point-\" + pointIndex).classed(\"hover\", isHoverOver);\n        });\n      };\n    }(); // trigger calls from events too\n\n    dispatch.on('elementMouseover.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, true);\n    });\n    dispatch.on('elementMouseout.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, false);\n    });\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      pointScale: {\n        get: function get() {\n          return z;\n        },\n        set: function set(_) {\n          z = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      pointDomain: {\n        get: function get() {\n          return sizeDomain;\n        },\n        set: function set(_) {\n          sizeDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      pointRange: {\n        get: function get() {\n          return sizeRange;\n        },\n        set: function set(_) {\n          sizeRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      forcePoint: {\n        get: function get() {\n          return forceSize;\n        },\n        set: function set(_) {\n          forceSize = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      pointActive: {\n        get: function get() {\n          return pointActive;\n        },\n        set: function set(_) {\n          pointActive = _;\n        }\n      },\n      padDataOuter: {\n        get: function get() {\n          return padDataOuter;\n        },\n        set: function set(_) {\n          padDataOuter = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      clipVoronoi: {\n        get: function get() {\n          return clipVoronoi;\n        },\n        set: function set(_) {\n          clipVoronoi = _;\n        }\n      },\n      clipRadius: {\n        get: function get() {\n          return clipRadius;\n        },\n        set: function set(_) {\n          clipRadius = _;\n        }\n      },\n      showVoronoi: {\n        get: function get() {\n          return showVoronoi;\n        },\n        set: function set(_) {\n          showVoronoi = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactiveUpdateDelay: {\n        get: function get() {\n          return interactiveUpdateDelay;\n        },\n        set: function set(_) {\n          interactiveUpdateDelay = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      pointBorderColor: {\n        get: function get() {\n          return pointBorderColor;\n        },\n        set: function set(_) {\n          pointBorderColor = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      pointSize: {\n        get: function get() {\n          return getSize;\n        },\n        set: function set(_) {\n          getSize = d3.functor(_);\n        }\n      },\n      pointShape: {\n        get: function get() {\n          return getShape;\n        },\n        set: function set(_) {\n          getShape = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n\n          if (useVoronoi === false) {\n            clipVoronoi = false;\n          }\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatterChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        distX = nv.models.distribution(),\n        distY = nv.models.distribution(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 75\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        container = null,\n        color = nv.utils.defaultColor(),\n        x = scatter.xScale(),\n        y = scatter.yScale(),\n        showDistX = false,\n        showDistY = false,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        noData = null,\n        duration = 250,\n        showLabels = false;\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickPadding(10);\n    distX.axis('x');\n    distY.axis('y');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      if (showDistX) renderWatch.models(distX);\n      if (showDistY) renderWatch.models(distY);\n      selection.each(function (data) {\n        var that = this;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          renderWatch.renderEnd('scatter immediate');\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = scatter.xScale();\n        y = scatter.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g'); // background for pointer events\n\n        gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n        gEnter.append('g').attr('class', 'nv-distWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Legend\n\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = availableWidth;\n          legend.width(legendWidth);\n          wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0' + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        scatter.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          d.color = d.color || color(d, i);\n          return d.color;\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        })).showLabels(showLabels);\n        wrap.select('.nv-scatterWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })).call(scatter);\n        wrap.select('.nv-regressionLinesWrap').attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n        var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines').data(function (d) {\n          return d;\n        });\n        regWrap.enter().append('g').attr('class', 'nv-regLines');\n        var regLine = regWrap.selectAll('.nv-regLine').data(function (d) {\n          return [d];\n        });\n        regLine.enter().append('line').attr('class', 'nv-regLine').style('stroke-opacity', 0); // don't add lines unless we have slope and intercept to use\n\n        regLine.filter(function (d) {\n          return d.intercept && d.slope;\n        }).watchTransition(renderWatch, 'scatterPlusLineChart: regline').attr('x1', x.range()[0]).attr('x2', x.range()[1]).attr('y1', function (d, i) {\n          return y(x.domain()[0] * d.slope + d.intercept);\n        }).attr('y2', function (d, i) {\n          return y(x.domain()[1] * d.slope + d.intercept);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j);\n        }).style('stroke-opacity', function (d, i) {\n          return d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined' ? 0 : 1;\n        }); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Setup Distribution\n\n\n        if (showDistX) {\n          distX.getData(scatter.x()).scale(x).width(availableWidth).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionX');\n          g.select('.nv-distributionX').attr('transform', 'translate(0,' + y.range()[0] + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distX);\n        }\n\n        if (showDistY) {\n          distY.getData(scatter.y()).scale(y).width(availableHeight).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionY');\n          g.select('.nv-distributionY').attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size()) + ',0)').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distY);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\n        scatter.dispatch.on('elementMouseout.tooltip', function (evt) {\n          tooltip.hidden(true);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', 0);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', distY.size());\n        });\n        scatter.dispatch.on('elementMouseover.tooltip', function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.relativePos[1] - availableHeight);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.relativePos[0] + distX.size());\n          tooltip.data(evt).hidden(false);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('scatter with line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      container: {\n        get: function get() {\n          return container;\n        },\n        set: function set(_) {\n          container = _;\n        }\n      },\n      showDistX: {\n        get: function get() {\n          return showDistX;\n        },\n        set: function set(_) {\n          showDistX = _;\n        }\n      },\n      showDistY: {\n        get: function get() {\n          return showDistY;\n        },\n        set: function set(_) {\n          showDistY = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          distX.color(color);\n          distY.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparkline = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        animate = true,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.getColor(['#000']),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        showMinMaxPoints = true,\n        showCurrentPoint = true,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data, getX)).range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data, getY)).range(yRange || [availableHeight, 0]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var paths = wrap.selectAll('path').data(function (d) {\n          return [d];\n        });\n        paths.enter().append('path');\n        paths.exit().remove();\n        paths.style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).attr('d', d3.svg.line().x(function (d, i) {\n          return x(getX(d, i));\n        }).y(function (d, i) {\n          return y(getY(d, i));\n        })); // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\n        var points = wrap.selectAll('circle.nv-point').data(function (data) {\n          var yValues = data.map(function (d, i) {\n            return getY(d, i);\n          });\n\n          function pointIndex(index) {\n            if (index != -1) {\n              var result = data[index];\n              result.pointIndex = index;\n              return result;\n            } else {\n              return null;\n            }\n          }\n\n          var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n              minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n              currentPoint = pointIndex(yValues.length - 1);\n          return [showMinMaxPoints ? minPoint : null, showMinMaxPoints ? maxPoint : null, showCurrentPoint ? currentPoint : null].filter(function (d) {\n            return d != null;\n          });\n        });\n        points.enter().append('circle');\n        points.exit().remove();\n        points.attr('cx', function (d, i) {\n          return x(getX(d, d.pointIndex));\n        }).attr('cy', function (d, i) {\n          return y(getY(d, d.pointIndex));\n        }).attr('r', 2).attr('class', function (d, i) {\n          return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' : getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue';\n        });\n      });\n      renderWatch.renderEnd('sparkline immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      animate: {\n        get: function get() {\n          return animate;\n        },\n        set: function set(_) {\n          animate = _;\n        }\n      },\n      showMinMaxPoints: {\n        get: function get() {\n          return showMinMaxPoints;\n        },\n        set: function set(_) {\n          showMinMaxPoints = _;\n        }\n      },\n      showCurrentPoint: {\n        get: function get() {\n          return showCurrentPoint;\n        },\n        set: function set(_) {\n          showCurrentPoint = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparklinePlus = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n    var margin = {\n      top: 15,\n      right: 100,\n      bottom: 10,\n      left: 50\n    },\n        width = null,\n        height = null,\n        x,\n        y,\n        index = [],\n        paused = false,\n        xTickFormat = d3.format(',r'),\n        yTickFormat = d3.format(',.2f'),\n        showLastValue = true,\n        alignValue = true,\n        rightAlignValue = false,\n        noData = null,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sparkline);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var currentValue = sparkline.y()(data[data.length - 1], data.length - 1); // Setup Scales\n\n        x = sparkline.xScale();\n        y = sparkline.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-sparklineWrap');\n        gEnter.append('g').attr('class', 'nv-valueWrap');\n        gEnter.append('g').attr('class', 'nv-hoverArea');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        var sparklineWrap = g.select('.nv-sparklineWrap');\n        sparkline.width(availableWidth).height(availableHeight);\n        sparklineWrap.call(sparkline);\n\n        if (showLastValue) {\n          var valueWrap = g.select('.nv-valueWrap');\n          var value = valueWrap.selectAll('.nv-currentValue').data([currentValue]);\n          value.enter().append('text').attr('class', 'nv-currentValue').attr('dx', rightAlignValue ? -8 : 8).attr('dy', '.9em').style('text-anchor', rightAlignValue ? 'end' : 'start');\n          value.attr('x', availableWidth + (rightAlignValue ? margin.right : 0)).attr('y', alignValue ? function (d) {\n            return y(d);\n          } : 0).style('fill', sparkline.color()(data[data.length - 1], data.length - 1)).text(yTickFormat(currentValue));\n        }\n\n        gEnter.select('.nv-hoverArea').append('rect').on('mousemove', sparklineHover).on('click', function () {\n          paused = !paused;\n        }).on('mouseout', function () {\n          index = [];\n          updateValueLine();\n        });\n        g.select('.nv-hoverArea rect').attr('transform', function (d) {\n          return 'translate(' + -margin.left + ',' + -margin.top + ')';\n        }).attr('width', availableWidth + margin.left + margin.right).attr('height', availableHeight + margin.top); //index is currently global (within the chart), may or may not keep it that way\n\n        function updateValueLine() {\n          if (paused) return;\n          var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n          var hoverEnter = hoverValue.enter().append('g').attr('class', 'nv-hoverValue').style('stroke-opacity', 0).style('fill-opacity', 0);\n          hoverValue.exit().transition().duration(250).style('stroke-opacity', 0).style('fill-opacity', 0).remove();\n          hoverValue.attr('transform', function (d) {\n            return 'translate(' + x(sparkline.x()(data[d], d)) + ',0)';\n          }).transition().duration(250).style('stroke-opacity', 1).style('fill-opacity', 1);\n          if (!index.length) return;\n          hoverEnter.append('line').attr('x1', 0).attr('y1', -margin.top).attr('x2', 0).attr('y2', availableHeight);\n          hoverEnter.append('text').attr('class', 'nv-xValue').attr('x', -6).attr('y', -margin.top).attr('text-anchor', 'end').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-xValue').text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n          hoverEnter.append('text').attr('class', 'nv-yValue').attr('x', 6).attr('y', -margin.top).attr('text-anchor', 'start').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-yValue').text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n        }\n\n        function sparklineHover() {\n          if (paused) return;\n          var pos = d3.mouse(this)[0] - margin.left;\n\n          function getClosestIndex(data, x) {\n            var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n            var closestIndex = 0;\n\n            for (var i = 0; i < data.length; i++) {\n              if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                distance = Math.abs(sparkline.x()(data[i], i) - x);\n                closestIndex = i;\n              }\n            }\n\n            return closestIndex;\n          }\n\n          index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n          updateValueLine();\n        }\n      });\n      renderWatch.renderEnd('sparklinePlus immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xTickFormat;\n        },\n        set: function set(_) {\n          xTickFormat = _;\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yTickFormat;\n        },\n        set: function set(_) {\n          yTickFormat = _;\n        }\n      },\n      showLastValue: {\n        get: function get() {\n          return showLastValue;\n        },\n        set: function set(_) {\n          showLastValue = _;\n        }\n      },\n      alignValue: {\n        get: function get() {\n          return alignValue;\n        },\n        set: function set(_) {\n          alignValue = _;\n        }\n      },\n      rightAlignValue: {\n        get: function get() {\n          return rightAlignValue;\n        },\n        set: function set(_) {\n          rightAlignValue = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedArea = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        color = nv.utils.defaultColor() // a function that computes the color\n    ,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        style = 'stack',\n        offset = 'zero',\n        order = 'default',\n        interpolate = 'linear' // controls the line interpolation\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        scatter = nv.models.scatter(),\n        duration = 250,\n        dispatch = d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout', 'renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout');\n\n    scatter.pointSize(2.2) // default size\n    .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        var dataRaw = data; // Injecting point index into each point because d3.layout.stack().out does not give index\n\n        data.forEach(function (aseries, i) {\n          aseries.seriesIndex = i;\n          aseries.values = aseries.values.map(function (d, j) {\n            d.index = j;\n            d.seriesIndex = i;\n            return d;\n          });\n        });\n        var dataFiltered = data.filter(function (series) {\n          return !series.disabled;\n        });\n        data = d3.layout.stack().order(order).offset(offset).values(function (d) {\n          return d.values;\n        }) //TODO: make values customizeable in EVERY model in this fashion\n        .x(getX).y(getY).out(function (d, y0, y) {\n          d.display = {\n            y: y,\n            y0: y0\n          };\n        })(dataFiltered); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-areaWrap');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // If the user has not specified forceY, make sure 0 is included in the domain\n        // Otherwise, use user-specified values for forceY\n\n        if (scatter.forceY().length == 0) {\n          scatter.forceY().push(0);\n        }\n\n        scatter.width(availableWidth).height(availableHeight).x(getX).y(function (d) {\n          if (d.display !== undefined) {\n            return d.display.y + d.display.y0;\n          }\n        }).color(data.map(function (d, i) {\n          d.color = d.color || color(d, d.seriesIndex);\n          return d.color;\n        }));\n        var scatterWrap = g.select('.nv-scatterWrap').datum(data);\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var area = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y + d.display.y0);\n        }).interpolate(interpolate);\n        var zeroArea = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y0);\n        });\n        var path = g.select('.nv-areaWrap').selectAll('path.nv-area').data(function (d) {\n          return d;\n        });\n        path.enter().append('path').attr('class', function (d, i) {\n          return 'nv-area nv-area-' + i;\n        }).attr('d', function (d, i) {\n          return zeroArea(d.values, d.seriesIndex);\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.areaMouseover({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaMouseout({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('click', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaClick({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        });\n        path.exit().remove();\n        path.style('fill', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        });\n        path.watchTransition(renderWatch, 'stackedArea path').attr('d', function (d, i) {\n          return area(d.values, i);\n        }); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        scatter.dispatch.on('elementMouseover.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n        });\n        scatter.dispatch.on('elementMouseout.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n        }); //Special offset functions\n\n        chart.d3_stackedOffset_stackPercent = function (stackData) {\n          var n = stackData.length,\n              //How many series\n          m = stackData[0].length,\n              //how many points per series\n          i,\n              j,\n              o,\n              y0 = [];\n\n          for (j = 0; j < m; ++j) {\n            //Looping through all points\n            for (i = 0, o = 0; i < dataRaw.length; i++) {\n              //looping through all series\n              o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n            }\n\n            if (o) for (i = 0; i < n; i++) {\n              //(total y value of all series at point in time i) != 0\n              stackData[i][j][1] /= o;\n            } else {\n              //(total y value of all series at point in time i) == 0\n              for (i = 0; i < n; i++) {\n                stackData[i][j][1] = 0;\n              }\n            }\n          }\n\n          for (j = 0; j < m; ++j) {\n            y0[j] = 0;\n          }\n\n          return y0;\n        };\n      });\n      renderWatch.renderEnd('stackedArea immediate');\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n\n    chart.interpolate = function (_) {\n      if (!arguments.length) return interpolate;\n      interpolate = _;\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      scatter.duration(duration);\n      return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      offset: {\n        get: function get() {\n          return offset;\n        },\n        set: function set(_) {\n          offset = _;\n        }\n      },\n      order: {\n        get: function get() {\n          return order;\n        },\n        set: function set(_) {\n          order = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      style: {\n        get: function get() {\n          return style;\n        },\n        set: function set(_) {\n          style = _;\n\n          switch (style) {\n            case 'stack':\n              chart.offset('zero');\n              chart.order('default');\n              break;\n\n            case 'stream':\n              chart.offset('wiggle');\n              chart.order('inside-out');\n              break;\n\n            case 'stream-center':\n              chart.offset('silhouette');\n              chart.order('inside-out');\n              break;\n\n            case 'expand':\n              chart.offset('expand');\n              chart.order('default');\n              break;\n\n            case 'stack_percent':\n              chart.offset(chart.d3_stackedOffset_stackPercent);\n              chart.order('default');\n              break;\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.stackedArea());\n    var margin = {\n      top: 10,\n      right: 25,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        focusEnable = false,\n        useInteractiveGuideline = false,\n        showTotalInTooltip = true,\n        totalLabel = 'TOTAL',\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = 250,\n        controlOptions = ['Stacked', 'Stream', 'Expanded'],\n        controlLabels = {},\n        duration = 250;\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    });\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          style: stacked.style()\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.style !== undefined) style = state.style;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(stacked);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = stacked.xScale();\n        y = stacked.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-stackedWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive'); // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = showControls && legendPosition === 'top' ? availableWidth - controlWidth : availableWidth;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            // constant from axis.js, plus some margin for better layout\n            var xAxisHeight = (showXAxis ? 12 : 0) + 10;\n            margin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            var legendTop = availableHeight + xAxisHeight;\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + legendTop + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && margin.top != legend.height()) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + (availableWidth - legendWidth) + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.stacked || 'Stacked',\n            metaKey: 'Stacked',\n            disabled: stacked.style() != 'stack',\n            style: 'stack'\n          }, {\n            key: controlLabels.stream || 'Stream',\n            metaKey: 'Stream',\n            disabled: stacked.style() != 'stream',\n            style: 'stream'\n          }, {\n            key: controlLabels.expanded || 'Expanded',\n            metaKey: 'Expanded',\n            disabled: stacked.style() != 'expand',\n            style: 'expand'\n          }, {\n            key: controlLabels.stack_percent || 'Stack %',\n            metaKey: 'Stack_Percent',\n            disabled: stacked.style() != 'stack_percent',\n            style: 'stack_percent'\n          }];\n          controlWidth = controlOptions.length / 3 * 260;\n          controlsData = controlsData.filter(function (d) {\n            return controlOptions.indexOf(d.metaKey) !== -1;\n          });\n          controls.width(controlWidth).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).call(controls);\n          var requiredTop = Math.max(controls.height(), showLegend && legendPosition === 'top' ? legend.height() : 0);\n\n          if (margin.top != requiredTop) {\n            margin.top = requiredTop;\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n          }\n\n          g.select('.nv-controlsWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        stacked.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          var ticks;\n\n          if (stacked.offset() === 'wiggle') {\n            ticks = 0;\n          } else {\n            ticks = nv.utils.calcTicksY(availableHeight / 36, data);\n          }\n\n          yAxis.scale(y)._ticks(ticks).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n              var currentFormat = yAxis.tickFormat();\n              if (!oldYTickFormat || currentFormat !== percentFormatter) oldYTickFormat = currentFormat; //Forces the yAxis to use percentage in 'expand' mode.\n\n              yAxis.tickFormat(percentFormatter);\n            } else {\n              if (oldYTickFormat) {\n                yAxis.tickFormat(oldYTickFormat);\n                oldYTickFormat = null;\n              }\n            }\n\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(0).call(yAxis);\n          }\n        } //============================================================\n        // Update Focus\n        //============================================================\n\n\n        if (!focusEnable) {\n          stackedWrap.transition().call(stacked);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        stacked.dispatch.on('areaClick.toggle', function (e) {\n          if (data.filter(function (d) {\n            return !d.disabled;\n          }).length === 1) data.forEach(function (d) {\n            d.disabled = false;\n          });else data.forEach(function (d, i) {\n            d.disabled = i != e.seriesIndex;\n          });\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n          stacked.style(d.style);\n          state.style = stacked.style();\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          stacked.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [],\n              valueSum = 0,\n              allNullValues = true,\n              atleastOnePoint = false;\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue != null && pointYValue > 0) {\n              stacked.highlightPoint(i, pointIndex, true);\n              atleastOnePoint = true;\n            } // Draw at least one point if all values are zero.\n\n\n            if (i === data.length - 1 && !atleastOnePoint) {\n              stacked.highlightPoint(i, pointIndex, true);\n            }\n\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\n            var tooltipValue = stacked.style() == 'expand' ? point.display.y : chart.y()(point, pointIndex);\n            allData.push({\n              key: series.key,\n              value: tooltipValue,\n              color: color(series, series.seriesIndex),\n              point: point\n            });\n\n            if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n              valueSum += tooltipValue;\n              allNullValues = false;\n            }\n\n            ;\n          });\n          allData.reverse(); //Highlight the tooltip entry based on which stack the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var yDistMax = Infinity,\n                indexToHighlight = null;\n            allData.forEach(function (series, i) {\n              //To handle situation where the stacked area chart is negative, we need to use absolute values\n              //when checking if the mouse Y value is within the stack area.\n              yValue = Math.abs(yValue);\n              var stackedY0 = Math.abs(series.point.display.y0);\n              var stackedY = Math.abs(series.point.display.y);\n\n              if (yValue >= stackedY0 && yValue <= stackedY + stackedY0) {\n                indexToHighlight = i;\n                return;\n              }\n            });\n            if (indexToHighlight != null) allData[indexToHighlight].highlight = true;\n          } //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\n\n          if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n            allData.push({\n              key: totalLabel,\n              value: valueSum,\n              total: true\n            });\n          }\n\n          var xValue = chart.x()(singlePoint, pointIndex);\n          var valueFormatter = interactiveLayer.tooltip.valueFormatter(); // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\n          if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n            if (!oldValueFormatter) {\n              oldValueFormatter = valueFormatter;\n            } //Forces the tooltip to use percentage in 'expand' mode.\n\n\n            valueFormatter = d3.format(\".1%\");\n          } else {\n            if (oldValueFormatter) {\n              valueFormatter = oldValueFormatter;\n              oldValueFormatter = null;\n            }\n          }\n\n          interactiveLayer.tooltip.valueFormatter(valueFormatter).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          stacked.clearHighlights();\n        });\n        /* Update `main' graph on brush update. */\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.style !== 'undefined') {\n            stacked.style(e.style);\n            style = e.style;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return stacked.x()(d, i) >= extent[0] && stacked.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          stackedWrap.transition().duration(duration).call(stacked); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('stacked Area chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    stacked.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.point['x'] = stacked.x()(evt.point);\n      evt.point['y'] = stacked.y()(evt.point);\n      tooltip.data(evt).hidden(false);\n    });\n    stacked.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      controlOptions: {\n        get: function get() {\n          return controlOptions;\n        },\n        set: function set(_) {\n          controlOptions = _;\n        }\n      },\n      showTotalInTooltip: {\n        get: function get() {\n          return showTotalInTooltip;\n        },\n        set: function set(_) {\n          showTotalInTooltip = _;\n        }\n      },\n      totalLabel: {\n        get: function get() {\n          return totalLabel;\n        },\n        set: function set(_) {\n          totalLabel = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          focus.margin.top = _.top !== undefined ? _.top : focus.margin.top;\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          stacked.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          stacked.color(color);\n          focus.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return stacked.x();\n        },\n        set: function set(_) {\n          stacked.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return stacked.y();\n        },\n        set: function set(_) {\n          stacked.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = !!_;\n          chart.interactive(!_);\n          chart.useVoronoi(!_);\n          stacked.scatter.interactive(!_);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaWithFocusChart = function () {\n    return nv.models.stackedAreaChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  }; // based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\n\n  nv.models.sunburst = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 600,\n        height = 600,\n        mode = \"count\",\n        modes = {\n      count: function count(d) {\n        return 1;\n      },\n      value: function value(d) {\n        return d.value || d.size;\n      },\n      size: function size(d) {\n        return d.value || d.size;\n      }\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        showLabels = false,\n        labelFormat = function labelFormat(d) {\n      if (mode === 'count') {\n        return d.name + ' #' + d.value;\n      } else {\n        return d.name + ' ' + (d.value || d.size);\n      }\n    },\n        labelThreshold = 0.02,\n        sort = function sort(d1, d2) {\n      return d1.name > d2.name;\n    },\n        key = function key(d, i) {\n      if (d.parent !== undefined) {\n        return d.name + '-' + d.parent.name + '-' + i;\n      } else {\n        return d.name;\n      }\n    },\n        groupColorByParent = true,\n        duration = 500,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd'); //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n    var partition = d3.layout.partition().sort(sort);\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n    var arc = d3.svg.arc().startAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n    }).endAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n    }).innerRadius(function (d) {\n      return Math.max(0, y(d.y));\n    }).outerRadius(function (d) {\n      return Math.max(0, y(d.y + d.dy));\n    });\n\n    function rotationToAvoidUpsideDown(d) {\n      var centerAngle = computeCenterAngle(d);\n\n      if (centerAngle > 90) {\n        return 180;\n      } else {\n        return 0;\n      }\n    }\n\n    function computeCenterAngle(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var centerAngle = (startAngle + endAngle) / 2 * (180 / Math.PI) - 90;\n      return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var size = endAngle - startAngle;\n      return size > labelThreshold;\n    } // When zooming: interpolate the scales.\n\n\n    function arcTweenZoom(e, i) {\n      var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n          yd = d3.interpolate(y.domain(), [node.y, 1]),\n          yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n      if (i === 0) {\n        return function () {\n          return arc(e);\n        };\n      } else {\n        return function (t) {\n          x.domain(xd(t));\n          y.domain(yd(t)).range(yr(t));\n          return arc(e);\n        };\n      }\n\n      ;\n    }\n\n    function arcTweenUpdate(d) {\n      var ipo = d3.interpolate({\n        x: d.x0,\n        dx: d.dx0,\n        y: d.y0,\n        dy: d.dy0\n      }, d);\n      return function (t) {\n        var b = ipo(t);\n        d.x0 = b.x;\n        d.dx0 = b.dx;\n        d.y0 = b.y;\n        d.dy0 = b.dy;\n        return arc(b);\n      };\n    }\n\n    function updatePrevPosition(node) {\n      var k = key(node);\n      if (!prevPositions[k]) prevPositions[k] = {};\n      var pP = prevPositions[k];\n      pP.dx = node.dx;\n      pP.x = node.x;\n      pP.dy = node.dy;\n      pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n      nodes.forEach(function (n) {\n        var k = key(n);\n        var pP = prevPositions[k]; //console.log(k,n,pP);\n\n        if (pP) {\n          n.dx0 = pP.dx;\n          n.x0 = pP.x;\n          n.dy0 = pP.dy;\n          n.y0 = pP.y;\n        } else {\n          n.dx0 = n.dx;\n          n.x0 = n.x;\n          n.dy0 = n.dy;\n          n.y0 = n.y;\n        }\n\n        updatePrevPosition(n);\n      });\n    }\n\n    function zoomClick(d) {\n      var labels = container.selectAll('text');\n      var path = container.selectAll('path'); // fade out all text elements\n\n      labels.transition().attr(\"opacity\", 0); // to allow reference to the new center node\n\n      node = d;\n      path.transition().duration(duration).attrTween(\"d\", arcTweenZoom).each('end', function (e) {\n        // partially taken from here: http://bl.ocks.org/metmajer/5480307\n        // check if the animated element's data e lies within the visible angle span given in d\n        if (e.x >= d.x && e.x < d.x + d.dx) {\n          if (e.depth >= d.depth) {\n            // get a selection of the associated text element\n            var parentNode = d3.select(this.parentNode);\n            var arcText = parentNode.select('text'); // fade in the text element and recalculate positions\n\n            arcText.transition().duration(duration).text(function (e) {\n              return labelFormat(e);\n            }).attr(\"opacity\", function (d) {\n              if (labelThresholdMatched(d)) {\n                return 1;\n              } else {\n                return 0;\n              }\n            }).attr(\"transform\", function () {\n              var width = this.getBBox().width;\n              if (e.depth === 0) return \"translate(\" + width / 2 * -1 + \",0)\";else if (e.depth === d.depth) {\n                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n              } else {\n                var centerAngle = computeCenterAngle(e);\n                var rotation = rotationToAvoidUpsideDown(e);\n\n                if (rotation === 0) {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + 5) + ',0)';\n                } else {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                }\n              }\n            });\n          }\n        }\n      });\n    } //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        radius = Math.min(availableWidth, availableHeight) / 2;\n        y.range([0, radius]); // Setup containers and skeleton of chart\n\n        var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\n        if (!wrap[0][0]) {\n          wrap = container.append('g').attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id).attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        } else {\n          wrap.attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        }\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        partition.value(modes[mode] || modes[\"count\"]); //reverse the drawing order so that the labels of inner\n        //arcs are drawn on top of the outer arcs.\n\n        var nodes = partition.nodes(data[0]).reverse();\n        storeRetrievePrevPositions(nodes);\n        var cG = wrap.selectAll('.arc-container').data(nodes, key); //handle new datapoints\n\n        var cGE = cG.enter().append(\"g\").attr(\"class\", 'arc-container');\n        cGE.append(\"path\").attr(\"d\", arc).style(\"fill\", function (d) {\n          if (d.color) {\n            return d.color;\n          } else if (groupColorByParent) {\n            return color((d.children ? d : d.parent).name);\n          } else {\n            return color(d.name);\n          }\n        }).style(\"stroke\", \"#FFF\").on(\"click\", function (d, i) {\n          zoomClick(d);\n          dispatch.elementClick({\n            data: d,\n            index: i\n          });\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true).style('opacity', 0.8);\n          dispatch.elementMouseover({\n            data: d,\n            color: d3.select(this).style(\"fill\"),\n            percent: computeNodePercentage(d)\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false).style('opacity', 1);\n          dispatch.elementMouseout({\n            data: d\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d\n          });\n        }); ///Iterating via each and selecting based on the this\n        ///makes it work ... a cG.selectAll('path') doesn't.\n        ///Without iteration the data (in the element) didn't update.\n\n        cG.each(function (d) {\n          d3.select(this).select('path').transition().duration(duration).attrTween('d', arcTweenUpdate);\n        });\n\n        if (showLabels) {\n          //remove labels first and add them back\n          cG.selectAll('text').remove(); //this way labels are on top of newly added arcs\n\n          cG.append('text').text(function (e) {\n            return labelFormat(e);\n          }).transition().duration(duration).attr(\"opacity\", function (d) {\n            if (labelThresholdMatched(d)) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }).attr(\"transform\", function (d) {\n            var width = this.getBBox().width;\n\n            if (d.depth === 0) {\n              return \"rotate(0)translate(\" + width / 2 * -1 + \",0)\";\n            } else {\n              var centerAngle = computeCenterAngle(d);\n              var rotation = rotationToAvoidUpsideDown(d);\n\n              if (rotation === 0) {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + 5) + ',0)';\n              } else {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n              }\n            }\n          });\n        } //zoom out to the center when the data is updated.\n\n\n        zoomClick(nodes[nodes.length - 1]); //remove unmatched elements ...\n\n        cG.exit().transition().duration(duration).attr('opacity', 0).each('end', function (d) {\n          var k = key(d);\n          prevPositions[k] = undefined;\n        }).remove();\n      });\n      renderWatch.renderEnd('sunburst immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(_) {\n          mode = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      groupColorByParent: {\n        get: function get() {\n          return groupColorByParent;\n        },\n        set: function set(_) {\n          groupColorByParent = !!_;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = !!_;\n        }\n      },\n      labelFormat: {\n        get: function get() {\n          return labelFormat;\n        },\n        set: function set(_) {\n          labelFormat = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      sort: {\n        get: function get() {\n          return sort;\n        },\n        set: function set(_) {\n          sort = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return key;\n        },\n        set: function set(_) {\n          key = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sunburstChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showTooltipPercent = false,\n        id = Math.round(Math.random() * 100000),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d) {\n      return d;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sunburst);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin);\n        var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = container; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        sunburst.width(availableWidth).height(availableHeight).margin(margin);\n        container.call(sunburst);\n      });\n      renderWatch.renderEnd('sunburstChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.series = {\n        key: evt.data.name,\n        value: evt.data.value || evt.data.size,\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    sunburst.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    sunburst.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          sunburst.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          sunburst.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n          sunburst.margin(margin);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.version = \"1.8.6\";\n})();","import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar CardImg =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CardImg, _React$Component);\n\n  function CardImg() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = CardImg.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        variant = _this$props.variant,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n    var baseClass = variant ? bsPrefix + \"-\" + variant : bsPrefix;\n    return React.createElement(Component, _extends({\n      className: classNames(baseClass, className)\n    }, props));\n  };\n\n  return CardImg;\n}(React.Component);\n\nCardImg.defaultProps = {\n  as: 'img',\n  variant: null\n};\nexport default createBootstrapComponent(CardImg, 'card-img');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport divWithClassName from './utils/divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar CardBody = createWithBsPrefix('card-body');\n\nvar Card =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Card, _React$Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {};\n    return _this;\n  }\n\n  Card.getDerivedStateFromProps = function getDerivedStateFromProps(_ref) {\n    var bsPrefix = _ref.bsPrefix;\n    return {\n      cardContext: {\n        cardHeaderBsPrefix: bsPrefix + \"-header\"\n      }\n    };\n  };\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        bg = _this$props.bg,\n        text = _this$props.text,\n        border = _this$props.border,\n        body = _this$props.body,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\", \"bg\", \"text\", \"border\", \"body\", \"children\"]);\n\n    var classes = classNames(className, bsPrefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border);\n    return React.createElement(CardContext.Provider, {\n      value: this.state.cardContext\n    }, React.createElement(Component, _extends({\n      className: classes\n    }, props), body ? React.createElement(CardBody, null, children) : children));\n  };\n\n  return Card;\n}(React.Component);\n\nCard.defaultProps = {\n  as: 'div',\n  body: false\n};\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar DecoratedCard = createBootstrapComponent(Card, 'card');\nDecoratedCard.Img = CardImg;\nDecoratedCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nDecoratedCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nDecoratedCard.Body = CardBody;\nDecoratedCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nDecoratedCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nDecoratedCard.Header = createWithBsPrefix('card-header');\nDecoratedCard.Footer = createWithBsPrefix('card-footer');\nDecoratedCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default DecoratedCard;"],"sourceRoot":""}