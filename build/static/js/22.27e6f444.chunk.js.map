{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","Screen/Pastas/Pastas.js","App/components/Card/Index.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js","api.js"],"names":["Table","_React$Component","apply","this","arguments","prototype","render","_this$props","props","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","classes","table","createElement","responsiveClass","Component","SamplePage","state","pastas","loading","api","get","then","res","console","log","data","retorno","setState","catch","error","title","bodyClass","isOption","fullscreen","reload","pagination","itemsCountPerPage","totalItemsCount","cardHeaderRight","href","style","marginBottom","map","pasta","id","key","id_pasta","textAlign","nome","categoria","discussao","color","homologada","moment","data_criacao","format","length","colSpan","require","MainCard","fullCard","collapseCard","loadCard","cardRemove","activePage","componentWillReceiveProps","cardReloadHandler","onCardReload","setInterval","cardRemoveHandler","pageNumber","onPageChange","fullScreenStyle","loader","cardHeader","card","cardClass","right","display","float","padding","position","alignRight","Toggle","Menu","as","Item","onClick","prevState","DEMO","BLANK_LINK","expand","excludable","Header","Title","top","left","width","windowWidth","height","windowHeight","join","in","Body","children","Footer","paddingLeft","paddingRight","paddingTop","justifyContent","pageRangeDisplayed","onChange","handlePageChange","windowSize","DEVICE_SIZES","Col","forwardRef","_ref","ref","_ref$as","prefix","spans","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","concat","displayName","Row","noGutters","_props$as","otherProps","decoratedBsPrefix","defaultProps","token","store","getState","auth","axios","create","headers","baseURL","document","location","hostname"],"mappings":"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","file":"static/js/22.27e6f444.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Table, _React$Component);\n\n  function Table() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Table.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        striped = _this$props.striped,\n        bordered = _this$props.bordered,\n        borderless = _this$props.borderless,\n        hover = _this$props.hover,\n        size = _this$props.size,\n        variant = _this$props.variant,\n        responsive = _this$props.responsive,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n    var classes = classNames(bsPrefix, className, variant && bsPrefix + \"-\" + variant, size && bsPrefix + \"-\" + size, striped && bsPrefix + \"-striped\", bordered && bsPrefix + \"-bordered\", borderless && bsPrefix + \"-borderless\", hover && bsPrefix + \"-hover\");\n    var table = React.createElement(\"table\", _extends({}, props, {\n      className: classes\n    }));\n\n    if (responsive) {\n      var responsiveClass = bsPrefix + \"-responsive\";\n\n      if (typeof responsive === 'string') {\n        responsiveClass = responsiveClass + \"-\" + responsive;\n      }\n\n      return React.createElement(\"div\", {\n        className: responsiveClass\n      }, table);\n    }\n\n    return table;\n  };\n\n  return Table;\n}(React.Component);\n\nexport default createBootstrapComponent(Table, 'table');","import React, { Component } from 'react';\r\nimport { Row, Col, Table, Badge } from 'react-bootstrap';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport Card from \"../../App/components/Card/Index.js\";\r\n\r\nimport moment from 'moment';\r\nimport api from '../../api.js'\r\n\r\nimport avatar2 from '../../assets/images/user/avatar-2.jpg';\r\n\r\nimport './style.scss'\r\n\r\nclass SamplePage extends Component {\r\n    state = {\r\n        pastas: [],\r\n        loading: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.pastas()\r\n    }\r\n\r\n    pastas = () => {\r\n        api().get('/pastas')\r\n            .then(res => {\r\n                console.log(res.data)\r\n                if (res.data.retorno) {\r\n                    this.setState({ pastas: res.data.pastas })\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card\r\n                            className='card'\r\n                            title='Pastas'\r\n                            bodyClass={'px-0 py-0'}\r\n                            isOption\r\n                            fullscreen\r\n                            reload\r\n                            pagination={{ itemsCountPerPage: 5, totalItemsCount: 2 }}\r\n                            loading={this.state.loading}\r\n                            cardHeaderRight={\r\n                                <a href='/admin/pastas/nova'>\r\n                                    <i className=\"fa fa-plus f-20 m-r-15\" />\r\n                                </a>\r\n                            }>\r\n                            <div>\r\n                                <Table responsive hover style={{ marginBottom: 0 }}>\r\n                                    <tbody>\r\n                                        {\r\n                                            this.state.pastas.map((pasta, id) =>\r\n                                                <tr className=\"unread\" key={pasta.id_pasta}>\r\n                                                    <td style={{ textAlign: 'left' }}>\r\n                                                        <h6 className=\"mb-1\">\r\n                                                            <a href={`/admin/pasta/${pasta.id_pasta}`} className=\"f-12\">{pasta.nome} <Badge variant=\"secondary\">{pasta.categoria}</Badge></a>\r\n                                                        </h6>\r\n                                                        <p className=\"m-0\">{pasta.discussao}</p>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <h6 className=\"text-muted\">\r\n                                                            <i className=\"fa fa-circle f-10 m-r-15\" style={{ color: !!pasta.homologada ? '#1ede1e' : 'yellow' }} />\r\n                                                            {moment(pasta.data_criacao).format('DD/MM/Y')}\r\n                                                        </h6>\r\n                                                    </td>\r\n                                                    <td>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                        {!this.state.pastas.length &&\r\n                                            <tr className=\"unread\">\r\n                                                <td colSpan=\"4\">\r\n                                                    <span>Tente novamente mais tarde ou tente recarregar a página</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SamplePage;","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport DEMO from \"../../../store/constant\";\r\n\r\nimport Pagination from \"react-js-pagination\";\r\nrequire(\"./style.scss\");\r\n\r\n/**\r\n * Props\r\n * @param isOption {bollean} - Monstrar menu de opções\r\n *\r\n * @param loading {bollean} - Monstrar carregamento\r\n * @param onCardReload {function} - Chamada quando o botão recarregar é clicado\r\n *\r\n * @param pagination {Object} - Paginação\r\n * @param pagination.itemsCountPerPage {number} - Itens por pagina\r\n * @param pagination.totalItemsCount {number} - Total de itens\r\n * @param onPageChange {function} - Chamado quando a pagina for alterada\r\n *\r\n */\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: this.props.loading,\r\n        cardRemove: false,\r\n        activePage: 1\r\n    };\r\n\r\n    componentWillReceiveProps = (props) => {\r\n        if(this.state.loadCard !== props.loading) this.setState({loadCard: props.loading})\r\n    }\r\n\r\n    cardReloadHandler = () => {\r\n        if(this.props.onCardReload) this.props.onCardReload();\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    handlePageChange(pageNumber) {\r\n        if(pageNumber !== this.state.activePage){\r\n            if(this.props.onPageChange) this.props.onPageChange(pageNumber);\r\n            this.setState({activePage: pageNumber});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [this.props.className];\r\n\r\n        if(this.state.isOption){\r\n            this.props.cardHeaderRight\r\n             ? cardHeaderRight =\r\n                <div style={{right: 10, display: 'inline-block', float: 'right', padding: 0, position: 'absolute'}}>\r\n                    {this.props.cardHeaderRight}\r\n                </div>\r\n            :\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            {this.props.fullscreen &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restaurar' : 'Maximizar'} </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.expand &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expandir' : 'Diminuir'} </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.reload &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Recarregar </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.excludable &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Excluir </a>\r\n                            </Dropdown.Item>}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body className={this.props.bodyClass}>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                        {this.props.pagination &&\r\n                        <Card.Footer style={{padding: 0, paddingLeft: '1em', paddingRight: '1em', paddingTop: '1em', display: 'flex', justifyContent: 'flex-end'}}>\r\n                        <Pagination\r\n                            activePage={this.state.activePage}\r\n                            itemsCountPerPage={this.props.pagination.itemsCountPerPage}\r\n                            totalItemsCount={this.props.pagination.totalItemsCount}\r\n                            pageRangeDisplayed={5}\r\n                            onChange={(pageNumber) => this.handlePageChange(pageNumber)}\r\n                        />\r\n                        </Card.Footer>}\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      noGutters = props.noGutters,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, otherProps, {\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters')\n  }));\n});\nRow.defaultProps = defaultProps;\nexport default Row;","import axios from 'axios'\r\nimport { store } from './store/storage'\r\n\r\nconst api = () => {\r\n    let token = store.getState().auth.token\r\n\r\n    return axios.create({\r\n        headers: { 'Authorization': `Bearer ${token}` },\r\n        baseURL: document.location.hostname === 'localhost'\r\n            ? 'http://localhost:21086/'\r\n            : 'http://peruibemelhor.nodejs7605.kinghost.net:21086/',\r\n    })\r\n};\r\n\r\nexport default api;"],"sourceRoot":""}