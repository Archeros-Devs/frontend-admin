{"version":3,"sources":["api.js","App/components/Homologation/Index.js","Screen/Pastas/Homologacao.js","App/components/Card/Index.js"],"names":["api","axios","create","baseURL","document","location","hostname","defaults","headers","common","store","getState","auth","token","TableHomologation","state","pasta_homologar","loading","getPastaUnauthorized","a","get","res","data","retorno","setState","pastas","console","log","msg","error","avaliar","id_pasta","avaliacao","put","map","p","this","Row","Col","className","title","bodyClass","isOption","fullscreen","reload","pagination","itemsCountPerPage","totalItemsCount","onCardReload","Table","responsive","hover","style","marginBottom","pasta","id","key","width","src","avatar2","alt","textAlign","href","nome","discussao","moment","data_criacao","format","onClick","background","length","colspan","Component","SamplePage","require","MainCard","props","fullCard","collapseCard","loadCard","cardRemove","activePage","componentWillReceiveProps","cardReloadHandler","setInterval","cardRemoveHandler","pageNumber","onPageChange","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","alignRight","Toggle","Menu","as","Item","prevState","DEMO","BLANK_LINK","expand","excludable","Header","Title","position","top","left","right","windowWidth","height","windowHeight","join","in","Body","children","Footer","padding","paddingLeft","paddingRight","paddingTop","display","justifyContent","pageRangeDisplayed","onChange","handlePageChange","windowSize"],"mappings":"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","file":"static/js/22.8e66f1af.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { store } from './store/storage'\r\n\r\nconst api = axios.create({\r\n    baseURL: document.location.hostname === 'localhost'\r\n        ? 'http://localhost:21086/'\r\n        : 'http://peruibemelhor.nodejs7605.kinghost.net:21086/',\r\n});\r\n\r\napi.defaults.headers.common = {'Authorization': `Bearer ${store.getState().auth.token}`}\r\n\r\nexport default api;","import React, {Component} from 'react';\r\nimport {Row, Col, Table, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\nimport Loader from 'react-loader-spinner'\r\nimport Card from \"../Card/Index\";\r\n\r\nimport DEMO from \"../../../store/constant\";\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nimport api from '../../../api'\r\nimport moment from 'moment';\r\n\r\nimport avatar2 from '../../../assets/images/user/avatar-2.jpg';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./style.scss\"\r\n\r\nclass TableHomologation extends Component {\r\n    state = {\r\n        pasta_homologar: [],\r\n        loading: true,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getPastaUnauthorized()\r\n    }\r\n\r\n    getPastaUnauthorized = async () => {\r\n        try {\r\n            const res = await api.get(`pastas/homologar`)\r\n            if(res.data.retorno){\r\n                this.setState({ pasta_homologar: res.data.pastas })\r\n                console.log(res.data.pastas)\r\n            }else{\r\n                console.log(res.data.msg)\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n        this.setState({loading: false})\r\n    }\r\n\r\n    avaliar = async (id_pasta, avaliacao) => {\r\n        console.log(this.state.pasta_homologar)\r\n        try {\r\n            const res = await api.put(`/pastas/${id_pasta}/avaliar`, {\r\n                avaliacao\r\n            })\r\n\r\n            if(res.data.retorno){\r\n                let pastas = this.state.pasta_homologar\r\n                pastas = pastas.map(p => {\r\n                    if (p.id_pasta === id_pasta) return {...p, avaliacao}\r\n                    return p\r\n                })\r\n                this.setState({pasta_homologar: pastas})\r\n            }else{\r\n                console.log(res.data.msg)\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card\r\n                        className='card'\r\n                        title='Pastas para Homologação'\r\n                        bodyClass={'px-0 py-0'}\r\n                        isOption\r\n                        fullscreen\r\n                        reload\r\n                        pagination={{itemsCountPerPage: 5, totalItemsCount: 2}}\r\n                        loading={this.state.loading}\r\n                        onCardReload={this.getPastaUnauthorized}>\r\n                            <div>\r\n                                <Table responsive hover style={{marginBottom: 0}}>\r\n                                    <tbody>\r\n                                        {\r\n                                        this.state.pasta_homologar.map((pasta, id) =>\r\n                                            <tr className=\"unread\" key={pasta.id_pasta}>\r\n                                                <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar2} alt=\"activity-user\"/></td>\r\n                                                <td style={{textAlign: 'left'}}>\r\n                                                    <h6 className=\"mb-1\"><a href={`/admin/pastas/${pasta.id_pasta}`} className=\"f-12\">{pasta.nome}</a></h6>\r\n                                                    <p className=\"m-0\">{pasta.discussao}</p>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <h6 className=\"text-muted\">\r\n                                                        <i className=\"fa fa-circle text-c-yellow f-10 m-r-15\"/>\r\n                                                        {moment(pasta.data_criacao).format('DD/MM/Y')}\r\n                                                    </h6>\r\n                                                </td>\r\n                                                <td>{console.log(pasta.avaliacao)}\r\n                                                    <button onClick={() => this.avaliar(pasta.id_pasta, +1)} style={{...pasta.avaliacao === -1 || pasta.avaliacao === null ? {background: 'gray'} : {}}} className={`btn-peruibe btn btn-secondary btn-success text-white`}>Aprovar</button>\r\n                                                    <button onClick={() => this.avaliar(pasta.id_pasta, -1)} style={{...pasta.avaliacao === 1 || pasta.avaliacao === null ? {background: 'gray'} : {}}} className={`btn-peruibe btn btn-secondary btn-danger text-white`}>Reprovar</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                        }\r\n                                        {!this.state.pasta_homologar.length &&\r\n                                            <tr className=\"unread\">\r\n                                                <td colspan=\"4\">\r\n                                                    <span>Tente novamente mais tarde ou tente recarregar a página</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableHomologation;","import React, {Component} from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\nimport TableHomologation from '../../App/components/Homologation/Index';\r\n\r\nclass SamplePage extends Component {\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <TableHomologation />\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SamplePage;","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport DEMO from \"../../../store/constant\";\r\n\r\nimport Pagination from \"react-js-pagination\";\r\nrequire(\"./style.scss\");\r\n\r\n/**\r\n * Props\r\n * @param isOption {bollean} - Monstrar menu de opções\r\n *\r\n * @param loading {bollean} - Monstrar carregamento\r\n * @param onCardReload {function} - Chamada quando o botão recarregar é clicado\r\n *\r\n * @param pagination {Object} - Paginação\r\n * @param pagination.itemsCountPerPage {number} - Itens por pagina\r\n * @param pagination.totalItemsCount {number} - Total de itens\r\n * @param onPageChange {function} - Chamado quando a pagina for alterada\r\n *\r\n */\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: this.props.loading,\r\n        cardRemove: false,\r\n        activePage: 1\r\n    };\r\n\r\n    componentWillReceiveProps = (props) => {\r\n        if(this.state.loadCard !== props.loading) this.setState({loadCard: props.loading})\r\n    }\r\n\r\n    cardReloadHandler = () => {\r\n        if(this.props.onCardReload) this.props.onCardReload();\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    handlePageChange(pageNumber) {\r\n        if(pageNumber !== this.state.activePage){\r\n            if(this.props.onPageChange) this.props.onPageChange(pageNumber);\r\n            this.setState({activePage: pageNumber});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [this.props.className];\r\n\r\n        if(this.state.isOption){\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            {this.props.fullscreen &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restaurar' : 'Maximizar'} </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.expand &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expandir' : 'Diminuir'} </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.reload &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Recarregar </a>\r\n                            </Dropdown.Item>}\r\n                            {this.props.excludable &&\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Excluir </a>\r\n                            </Dropdown.Item>}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body className={this.props.bodyClass}>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                        {this.props.pagination &&\r\n                        <Card.Footer style={{padding: 0, paddingLeft: '1em', paddingRight: '1em', paddingTop: '1em', display: 'flex', justifyContent: 'flex-end'}}>\r\n                        <Pagination\r\n                            activePage={this.state.activePage}\r\n                            itemsCountPerPage={this.props.pagination.itemsCountPerPage}\r\n                            totalItemsCount={this.props.pagination.totalItemsCount}\r\n                            pageRangeDisplayed={5}\r\n                            onChange={(pageNumber) => this.handlePageChange(pageNumber)}\r\n                        />\r\n                        </Card.Footer>}\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n"],"sourceRoot":""}