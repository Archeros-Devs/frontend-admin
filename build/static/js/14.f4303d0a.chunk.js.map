{"version":3,"sources":["../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-nvd3/dist/react-nvd3.min.js","../node_modules/d3/d3.js","../node_modules/nvd3/build/nv.d3.js","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/utils/divWithClassName.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","n","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__","DEVICE_SIZES","Col","a","forwardRef","_ref","ref","bsPrefix","className","_ref$as","as","Component","props","Object","prefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","createElement","apply","concat","displayName","__webpack_exports__","Row","noGutters","_props$as","otherProps","decoratedBsPrefix","defaultProps","t","e","module","exports","r","o","id","loaded","call","m","c","p","__esModule","default","defineProperty","value","i","u","s","f","l","d","h","y","v","b","g","_","x","O","j","w","S","P","F","this","arguments","key","addGraph","renderChart","bind","isCallable","ready","resizeHandler","clear","chart","rendering","models","type","renderStart","parsedProps","bindFunctions","context","getValueFunction","margin","options","pick","propsByPrefix","configureComponents","without","configure","selection","select","refs","svg","datum","utils","windowResize","update","pie","dispatch","lines","renderEnd","on","isPlainObject","chartOptions","containerStyle","style","prototype","hasOwnProperty","assign","G","B","W","_e","Function","window","Math","self","__g","version","__e","TypeError","Symbol","split","keys","join","getKeys","getSymbols","isEnum","create","getProto","getPrototypeOf","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","defineProperties","getNames","getOwnPropertyNames","getOwnPropertySymbols","each","toString","slice","enumerable","configurable","writable","ReferenceError","constructor","get","JSON","E","stringify","M","k","C","D","N","T","q","z","_k","set","A","V","H","I","J","R","U","for","keyFor","useSetter","useSimple","_e2","random","Array","isArray","__proto__","setPrototypeOf","check","indexOf","includes","negate","filterObject","name","console","warn","reduce","substr","replace","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","d3_arraySlice","d3_array","list","d3_document","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","array","Date","now","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","ascending","descending","min","max","extent","sum","mean","quantile","values","floor","median","numbers","sort","variance","deviation","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","map","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","range","start","stop","step","Infinity","Error","d3_range_integerScale","object","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","listeners","listenerByName","event","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","_d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","attr","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","enter","exit","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","position","top","padding","border","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","parseRows","eol","EOL","EOF","rows","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","String","fromCharCode","_x","X","toPrecision","toExponential","toFixed","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","dt","times","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","L","Z","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","_d","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","interval","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","names","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","rejoin","d3_geo_clipAntimeridian","_clean","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","ρ0","forward","ρ0_y","clipExtent","_stream","output","valid","conicEqualArea","raw","albers","albersUsa","_point","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","_pointRadius","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","_clean2","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","d3_geo_pathProjectStream","transform","methods","_stream2","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","d3_geo_mercator","d3_geo_conicEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","undefined","nv","dev","tooltip","charts","logs","dom","oThis","aArgs","fToBind","fNOP","fBound","startTime","endTime","totalTime","deprecated","info","render","render_start","renderLoop","graph","generate","render_end","obj","write","fastdom","mutate","read","measure","interactiveGuideline","height","xScale","showGuideLine","svgContainer","isMSIE","ActiveXObject","layer","availableWidth","availableHeight","mouseHandler","mouseX","mouseY","subtractMargin","mouseOutAnyReason","offsetX","offsetY","tagName","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","pointXValue","elementIndex","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","guideLine","NaNtoZero","hideDelay","interactiveBisect","searchVal","xAccessor","_xAccessor","currentValue","nextIndex","nextValue","nearestValueIndex","yDistMax","indexToHighlight","delta","snapDistance","lastPosition","enabled","headerEnabled","valueFormatter","headerFormatter","keyFormatter","contentGenerator","elem","table","trowEnter","highlight","total","percent","opacityScale","outerHTML","footer","pos","client","dataSeriesExists","isObject","positionTooltip","gravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","clientHeight","calcGravityOffset","old_translate","new_translate","translateInterpolator","is_hidden","nvtooltip","newContent","optionsFunc","_options","chartContainer","fixedTop","initOptions","windowSize","innerWidth","innerHeight","compatMode","isFunction","isDate","isNumber","handler","getColor","defaultColor","color_scale","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","content","href","fragment","replaceChild","history","pushState","state","calcApproxTextWidth","svgTextElem","fontSize","textLength","watchTransition","renderWatch","_duration","renderStack","model","__rendered","arg","every","deepExtend","dst","srcObj","_setState","_getState","init","getter","fn","settings","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","calls","inheritOptionsD3","oplist","_d3options","item","arrayUnique","symbolMap","inheritOptions","inherited","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","noData","opt","noDataText","wrapTicks","word","words","lineNumber","tspan","getComputedTextLength","arrayEquals","array1","array2","pointIsInArc","pt","ptData","d3Arc","r2","theta1","dist","tickFormatMaxMin","axisLabelText","showMaxMin","rotateLabels","rotateYLabel","staggerLabels","isOrdinal","axisLabelDistance","fmt","xLabelMargin","axisMaxMin","axisLabel","maxTextWidth","textHeight","xTicks","rotateLabelsRule","box","maxMinRange","boxPlot","xDomain","xRange","yDomain","yRange","xScale0","yScale0","yScale","getX","label","getQ1","Q1","getQ2","Q2","getQ3","Q3","getWl","whisker_low","getWh","whisker_high","getOlItems","outliers","getOlValue","getOlLabel","getOlColor","maxBoxWidth","yData","q3","wl","wh","olItems","boxplots","boxEnter","hover","box_width","box_left","box_right","endpoint","elementMouseover","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","xAxis","yAxis","showXAxis","showYAxis","rightAlignYAxis","beforeUpdate","gEnter","defsEnter","disabled","evt","tooltipContent","bullet","markers","markerLines","measures","rangeLabels","markerLabels","markerLineLabels","measureLabels","forceX","defaultRangeLabels","legacyRangeClassNames","sortLabels","labels","lz","iA","iB","rangez","markerz","markerLinez","measurez","rangeLabelz","markerLabelz","markerLineLabelz","measureLabelz","il","rangeClassNames","xp1","h3","markerData","marker","markerLinesData","bulletChart","title","subtitle","bulletWrap","candlestickBar","getY","getOpen","getClose","close","getHigh","high","getLow","low","forceY","padData","clipEdge","interactive","barWidth","wrapEnter","chartClick","tickGroups","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","legend","controls","interactiveLayer","marginTop","showLegend","showControls","useInteractiveGuideline","rescaleY","defaultState","average","noErrorCheck","updateState","currentYDomain","stateGetter","stateSetter","indexDrag","updateZero","stateChange","idx","indexifyYGetter","indexValue","tempDisabled","display","indexify","getCurrentYDomain","interactivePointerEvents","controlsData","rightAlign","linesWrap","seriesIndex","avgLineData","avgLines","getAvgLineY","yVal","indexLine","oldDuration","_ticks","newState","singlePoint","pointXLocation","allData","yValue","xValue","seriesDomains","useVoronoi","discreteBar","showValues","valueFormat","rectClass","seriesData","bars","barsEnter","element","stopPropagation","elementDblClick","discreteBarChart","discretebar","wrapLabels","distribution","getData","naxis","distWrap","focus","brushExtent","syncBrushing","pointActive","contentWrap","onBrush","brushBG","brushBGenter","gBrush","shouldDispatch","leftWidth","rightWidth","xTickFormat","yTickFormat","forceDirectedGraph","linkDist","nodeExtras","linkExtras","nodeFieldSet","Set","nodeColor","furiousLegend","maxKeyLength","radioButtonMode","expanded","vers","setTextColor","disengaged","setBGColor","seriesShape","seriesEnter","versPadding","seriesText","legendMouseover","legendMouseout","legendClick","userDisabled","legendDblclick","seriesWidths","legendText","nodeTextLength","trimmedKey","seriesPerRow","legendWidth","columnWidths","prev","cur","xPositions","curX","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","enableDoubleClick","setBGOpacity","scatter","strokeWidth","isArea","pointSize","pointDomain","scatterWrap","fillOpacity","areaPaths","linePaths","lineChart","legendPosition","focusEnable","focusEnter","updateXAxis","updateYAxis","disableTooltip","currentValues","pointYValue","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","y4","lines2","bars2","y1Axis","y3Axis","y4Axis","margin2","legendLeftAxisHint","legendRightAxisHint","switchYAxisOrder","allDisabled","availableHeight1","availableHeight2","dataBars","bar","dataLines","series1","series2","contextEnter","legendXPosition","originalKey","bars2Wrap","lines2Wrap","dataLine","focusBarsWrap","focusLinesWrap","barsOpacity","linesOpacity","y1Opacity","y2Opacity","main","getLinesAxis","getBarsAxis","multiBar","stacked","stackOffset","hideable","barColor","groupSpacing","last_datalength","nonStackableCount","parsed","nonStackable","nonStackableSeries","posBase","negBase","exitTransition","barSelection","multiBarChart","multibar","controlLabels","reduceXTicks","controlWidth","grouped","getTranslate","totalInBetweenTicks","multiBarHorizontal","getYerr","yErr","showBarLabels","valuePadding","xerr","yerr","multiBarHorizontalChart","controlsPosition","multiChart","yDomain1","yDomain2","yScale1","yScale2","lines1","scatters1","scatters2","bars1","stack1","stackedArea","stack2","yAxis1","yAxis2","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1BarStacked","aVal","extraValue2BarStacked","mouseover_line","yaxis","mouseover_scatter","mouseover_stack","mouseover_bar","serieIndex","parallelCoordinates","foreground","dimensions","undefinedValuesLabel","dimensionData","enabledDimensions","dimensionNames","displayBrush","filters","axisWithUndefinedValues","lineTension","newData","val","dataValues","currentPosition","oldDomainMaxValue","displayMissingValuesline","currentTicks","onlyUndefinedValues","hasOnlyNaN","hasNaN","missingValuesline","missingValueslineText","axisDrag","__origin__","dimensionPosition","dimensionsOrder","lineData","dimensionsEnter","restoreBrush","actives","extents","formerActive","newscale","brushDomain","updateTicks","isActive","hasActiveBrush","brushEnd","activeChanged","dimensionFormats","parallelCoordinatesChart","nanValue","originalPosition","isSorted","str","tp","dim","dd","showLabels","labelsOutside","labelType","labelThreshold","hideOverlapLabels","donut","growOnHover","titleOffset","labelSunbeamLayout","donutRatio","arcsRadius","arcsOver","arcsRadiusOuter","arcsRadiusInner","outer","inner","g_pie","arcOver","slices","pieLabels","ae","_current","labelsArc","rotateAngle","labelLocationHash","createHashKey","getSlicePercentage","hashKey","getBBox","topLeft","topRight","bottomLeft","bottomRight","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","showTooltipPercent","pieWrap","sankey","nodeWidth","nodePadding","sinksRight","iterations","sourceLinks","targetLinks","nextNodes","remainingNodes","moveSinksRight","computeNodeBreadths","nodesByBreadth","initializeNodeDepth","resolveCollisions","computeLinkDepths","relaxRightToLeft","relaxLeftToRight","weightedSource","breadth","weightedTarget","ty","ascendingDepth","computeNodeDepths","curvature","ascendingSourceDepth","ascendingTargetDepth","sankeyChart","units","formatNumber","linkTitle","nodeFillColor","nodeStrokeColor","nodeTitle","showError","message","testData","isDataValid","dataAvailable","nodeStyle","fillColor","strokeColor","xDom","yDom","width0","height0","timeoutID","pointBorderColor","getSize","getShape","shape","forceSize","notActive","padDataOuter","clipVoronoi","showVoronoi","clipRadius","sizeDomain","sizeRange","interactiveUpdateDelay","needsUpdate","_sizeRange_def","_cache","delCache","getDiffs","cache","getCache","diffs","logScale","scaleDiff","sizeDiff","domainDiff","updateInteractiveLayer","pX","pY","pointArray","pointPaths","vPointPaths","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","titles","pointScale","pointRange","forcePoint","pointShape","scatterChart","distX","distY","showDistX","showDistY","regWrap","regLine","intercept","slope","sparkline","animate","showMinMaxPoints","showCurrentPoint","yValues","maxPoint","minPoint","currentPoint","sparklinePlus","paused","showLastValue","alignValue","rightAlignValue","sparklineWrap","updateValueLine","hoverValue","hoverEnter","closestIndex","getClosestIndex","dataRaw","aseries","dataFiltered","zeroArea","areaMouseover","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","stackedAreaChart","showTotalInTooltip","totalLabel","controlOptions","oldYTickFormat","oldValueFormatter","percentFormatter","xAxisHeight","legendTop","metaKey","stack_percent","requiredTop","stackedWrap","currentFormat","valueSum","allNullValues","atleastOnePoint","tooltipValue","stackedY0","stackedY","stackedAreaWithFocusChart","sunburst","modes","groupColorByParent","prevPositions","rotationToAvoidUpsideDown","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","storeRetrievePrevPositions","pP","updatePrevPosition","zoomClick","centerAngle","cG","sunburstChart","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","divWithClassName","react_default","esm_extends","classnames_default","CardImg","variant","objectWithoutPropertiesLoose","ThemeProvider","esm_CardImg","DivStyledAsH5","DivStyledAsH6","CardBody","createWithBsPrefix","Card","cardContext","react","cardHeaderBsPrefix","CardContext","Provider","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"mappings":"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","file":"static/js/14.f4303d0a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      noGutters = props.noGutters,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, otherProps, {\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters')\n  }));\n});\nRow.defaultProps = defaultProps;\nexport default Row;","!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : \"function\" == typeof define && define.amd ? define([\"react\", \"d3\", \"nvd3\"], e) : \"object\" == typeof exports ? exports.NVD3Chart = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : t.NVD3Chart = e(t.React, t.d3, t.nv);\n}(this, function (t, e, n) {\n  return function (t) {\n    function e(r) {\n      if (n[r]) return n[r].exports;\n      var o = n[r] = {\n        exports: {},\n        id: r,\n        loaded: !1\n      };\n      return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;\n    }\n\n    var n = {};\n    return e.m = t, e.c = n, e.p = \"\", e(0);\n  }([function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var o = n(1),\n        i = r(o),\n        u = n(2),\n        c = r(u),\n        s = n(17),\n        a = r(s),\n        f = n(21),\n        p = r(f),\n        l = n(22),\n        d = r(l),\n        h = n(25),\n        y = r(h),\n        v = n(48),\n        b = r(v),\n        g = n(55),\n        m = r(g),\n        _ = n(56),\n        x = r(_),\n        O = n(57),\n        j = r(O),\n        w = n(58),\n        S = [\"x\", \"y\", \"type\", \"datum\", \"configure\"],\n        P = [\"width\", \"height\"],\n        E = \"margin\",\n        M = \"containerStyle\",\n        k = \"renderStart\",\n        C = \"renderEnd\",\n        D = \"ready\",\n        F = function (t) {\n      function e() {\n        return (0, p[\"default\"])(this, e), (0, y[\"default\"])(this, (0, a[\"default\"])(e).apply(this, arguments));\n      }\n\n      return (0, b[\"default\"])(e, t), (0, d[\"default\"])(e, [{\n        key: \"componentDidMount\",\n        value: function value() {\n          var t = this;\n          j[\"default\"].addGraph(this.renderChart.bind(this), function (e) {\n            (0, w.isCallable)(t.props.ready) && t.props.ready(e, D);\n          });\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function value() {\n          this.renderChart();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          this.resizeHandler && this.resizeHandler.clear();\n        }\n      }, {\n        key: \"renderChart\",\n        value: function value() {\n          var t = void 0;\n\n          switch (this.chart = this.chart && !this.rendering ? this.chart : j[\"default\"].models[this.props.type](), (0, w.isCallable)(this.props.renderStart) && this.props.renderStart(this.chart, k), this.parsedProps = (0, w.bindFunctions)(this.props, this.props.context), this.chart.x && this.chart.x((0, w.getValueFunction)(this.parsedProps.x, \"x\")), this.chart.y && this.chart.y((0, w.getValueFunction)(this.parsedProps.y, \"y\")), this.props.margin && this.chart.margin(this.options(E, w.pick).margin || (0, w.propsByPrefix)(\"margin\", this.props) || {}), this.configureComponents(this.chart, this.options(S.concat(M), w.without)), !this.props.configure || this.props.configure(this.chart), this.selection = x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart), this.resizeHandler || (this.resizeHandler = j[\"default\"].utils.windowResize(this.chart.update)), this.props.type) {\n            case \"pieChart\":\n              t = this.chart.pie.dispatch;\n              break;\n\n            case \"lineChart\":\n              t = this.chart.lines.dispatch;\n              break;\n\n            default:\n              t = this.chart.dispatch;\n          }\n\n          return t.renderEnd && t.on(\"renderEnd\", this.renderEnd.bind(this)), this.rendering = !0, this.chart;\n        }\n      }, {\n        key: \"renderEnd\",\n        value: function value(t) {\n          (0, w.isCallable)(this.props.renderEnd) && this.props.renderEnd(this.chart, C), this.rendering = !1;\n        }\n      }, {\n        key: \"configureComponents\",\n        value: function value(t, e) {\n          for (var n in e) {\n            var r = e[n];\n            t && ((0, w.isPlainObject)(r) ? this.configureComponents(t[n], r) : \"function\" == typeof t[n] && t[n](r));\n          }\n        }\n      }, {\n        key: \"options\",\n        value: function value(t, e) {\n          var n = this.parsedProps.options || this.parsedProps || this.props.chartOptions;\n          return (e = e || w.pick)(n, t);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = (0, w.pick)(this.props, P),\n              e = (0, c[\"default\"])({}, t, this.props.containerStyle);\n          return m[\"default\"].createElement(\"div\", {\n            ref: \"root\",\n            className: \"nv-chart\",\n            style: e\n          }, m[\"default\"].createElement(\"svg\", (0, i[\"default\"])({\n            ref: \"svg\"\n          }, t)));\n        }\n      }]), e;\n    }(m[\"default\"].Component);\n\n    e[\"default\"] = F, t.exports = F;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(2)[\"default\"];\n    e[\"default\"] = r || function (t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var n = arguments[e];\n\n        for (var r in n) {\n          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n        }\n      }\n\n      return t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(3),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(4), t.exports = n(7).Object.assign;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S + r.F, \"Object\", {\n      assign: n(10)\n    });\n  }, function (t, e, n) {\n    var r = n(6),\n        o = n(7),\n        i = n(8),\n        u = \"prototype\",\n        c = function c(t, e, n) {\n      var s,\n          a,\n          f,\n          p = t & c.F,\n          l = t & c.G,\n          d = t & c.S,\n          h = t & c.P,\n          y = t & c.B,\n          v = t & c.W,\n          b = l ? o : o[e] || (o[e] = {}),\n          g = l ? r : d ? r[e] : (r[e] || {})[u];\n      l && (n = e);\n\n      for (s in n) {\n        a = !p && g && s in g, a && s in b || (f = a ? g[s] : n[s], b[s] = l && \"function\" != typeof g[s] ? n[s] : y && a ? i(f, r) : v && g[s] == f ? function (t) {\n          var e = function e(_e) {\n            return this instanceof t ? new t(_e) : t(_e);\n          };\n\n          return e[u] = t[u], e;\n        }(f) : h && \"function\" == typeof f ? i(Function.call, f) : f, h && ((b[u] || (b[u] = {}))[s] = f));\n      }\n    };\n\n    c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, t.exports = c;\n  }, function (t, e) {\n    var n = t.exports = \"undefined\" != typeof window && window.Math == Math ? window : \"undefined\" != typeof self && self.Math == Math ? self : Function(\"return this\")();\n    \"number\" == typeof __g && (__g = n);\n  }, function (t, e) {\n    var n = t.exports = {\n      version: \"1.2.6\"\n    };\n    \"number\" == typeof __e && (__e = n);\n  }, function (t, e, n) {\n    var r = n(9);\n\n    t.exports = function (t, e, n) {\n      if (r(t), void 0 === e) return t;\n\n      switch (n) {\n        case 1:\n          return function (n) {\n            return t.call(e, n);\n          };\n\n        case 2:\n          return function (n, r) {\n            return t.call(e, n, r);\n          };\n\n        case 3:\n          return function (n, r, o) {\n            return t.call(e, n, r, o);\n          };\n      }\n\n      return function () {\n        return t.apply(e, arguments);\n      };\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (\"function\" != typeof t) throw TypeError(t + \" is not a function!\");\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(12),\n        i = n(14);\n    t.exports = n(16)(function () {\n      var t = Object.assign,\n          e = {},\n          n = {},\n          r = Symbol(),\n          o = \"abcdefghijklmnopqrst\";\n      return e[r] = 7, o.split(\"\").forEach(function (t) {\n        n[t] = t;\n      }), 7 != t({}, e)[r] || Object.keys(t({}, n)).join(\"\") != o;\n    }) ? function (t, e) {\n      for (var n = o(t), u = arguments, c = u.length, s = 1, a = r.getKeys, f = r.getSymbols, p = r.isEnum; c > s;) {\n        for (var l, d = i(u[s++]), h = f ? a(d).concat(f(d)) : a(d), y = h.length, v = 0; y > v;) {\n          p.call(d, l = h[v++]) && (n[l] = d[l]);\n        }\n      }\n\n      return n;\n    } : Object.assign;\n  }, function (t, e) {\n    var n = Object;\n    t.exports = {\n      create: n.create,\n      getProto: n.getPrototypeOf,\n      isEnum: {}.propertyIsEnumerable,\n      getDesc: n.getOwnPropertyDescriptor,\n      setDesc: n.defineProperty,\n      setDescs: n.defineProperties,\n      getKeys: n.keys,\n      getNames: n.getOwnPropertyNames,\n      getSymbols: n.getOwnPropertySymbols,\n      each: [].forEach\n    };\n  }, function (t, e, n) {\n    var r = n(13);\n\n    t.exports = function (t) {\n      return Object(r(t));\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (void 0 == t) throw TypeError(\"Can't call method on  \" + t);\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n    t.exports = Object(\"z\").propertyIsEnumerable(0) ? Object : function (t) {\n      return \"String\" == r(t) ? t.split(\"\") : Object(t);\n    };\n  }, function (t, e) {\n    var n = {}.toString;\n\n    t.exports = function (t) {\n      return n.call(t).slice(8, -1);\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      try {\n        return !!t();\n      } catch (e) {\n        return !0;\n      }\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(18),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(19), t.exports = n(7).Object.getPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"getPrototypeOf\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }, function (t, e, n) {\n    var r = n(5),\n        o = n(7),\n        i = n(16);\n\n    t.exports = function (t, e) {\n      var n = (o.Object || {})[t] || Object[t],\n          u = {};\n      u[t] = e(n), r(r.S + r.F * i(function () {\n        n(1);\n      }), \"Object\", u);\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    e[\"default\"] = function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(23),\n        i = r(o);\n    e[\"default\"] = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var r = e[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), (0, i[\"default\"])(t, r.key, r);\n        }\n      }\n\n      return function (e, n, r) {\n        return n && t(e.prototype, n), r && t(e, r), e;\n      };\n    }(), e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(24),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e, n) {\n      return r.setDesc(t, e, n);\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(26),\n        i = r(o);\n    e[\"default\"] = function (t, e) {\n      if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" !== (\"undefined\" == typeof e ? \"undefined\" : (0, i[\"default\"])(e)) && \"function\" != typeof e ? t : e;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(27)[\"default\"];\n    e[\"default\"] = function (t) {\n      return t && t.constructor === r ? \"symbol\" : typeof t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(28),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(29), n(47), t.exports = n(7).Symbol;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(11),\n        o = n(6),\n        i = n(30),\n        u = n(31),\n        c = n(5),\n        s = n(32),\n        a = n(16),\n        f = n(35),\n        p = n(36),\n        l = n(38),\n        d = n(37),\n        h = n(39),\n        y = n(41),\n        v = n(42),\n        b = n(43),\n        g = n(44),\n        m = n(40),\n        _ = n(34),\n        x = r.getDesc,\n        O = r.setDesc,\n        j = r.create,\n        w = y.get,\n        S = o.Symbol,\n        P = o.JSON,\n        E = P && P.stringify,\n        M = !1,\n        k = d(\"_hidden\"),\n        C = r.isEnum,\n        D = f(\"symbol-registry\"),\n        F = f(\"symbols\"),\n        N = \"function\" == typeof S,\n        T = Object.prototype,\n        q = u && a(function () {\n      return 7 != j(O({}, \"a\", {\n        get: function get() {\n          return O(this, \"a\", {\n            value: 7\n          }).a;\n        }\n      })).a;\n    }) ? function (t, e, n) {\n      var r = x(T, e);\n      r && delete T[e], O(t, e, n), r && t !== T && O(T, e, r);\n    } : O,\n        z = function z(t) {\n      var e = F[t] = j(S.prototype);\n      return e._k = t, u && M && q(T, t, {\n        configurable: !0,\n        set: function set(e) {\n          i(this, k) && i(this[k], t) && (this[k][t] = !1), q(this, t, _(1, e));\n        }\n      }), e;\n    },\n        A = function A(t) {\n      return \"symbol\" == typeof t;\n    },\n        V = function V(t, e, n) {\n      return n && i(F, e) ? (n.enumerable ? (i(t, k) && t[k][e] && (t[k][e] = !1), n = j(n, {\n        enumerable: _(0, !1)\n      })) : (i(t, k) || O(t, k, _(1, {})), t[k][e] = !0), q(t, e, n)) : O(t, e, n);\n    },\n        W = function W(t, e) {\n      g(t);\n\n      for (var n, r = v(e = m(e)), o = 0, i = r.length; i > o;) {\n        V(t, n = r[o++], e[n]);\n      }\n\n      return t;\n    },\n        B = function B(t, e) {\n      return void 0 === e ? j(t) : W(j(t), e);\n    },\n        G = function G(t) {\n      var e = C.call(this, t);\n      return e || !i(this, t) || !i(F, t) || i(this, k) && this[k][t] ? e : !0;\n    },\n        H = function H(t, e) {\n      var n = x(t = m(t), e);\n      return !n || !i(F, e) || i(t, k) && t[k][e] || (n.enumerable = !0), n;\n    },\n        I = function I(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) || e == k || r.push(e);\n      }\n\n      return r;\n    },\n        J = function J(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) && r.push(F[e]);\n      }\n\n      return r;\n    },\n        K = function K(t) {\n      if (void 0 !== t && !A(t)) {\n        for (var e, n, r = [t], o = 1, i = arguments; i.length > o;) {\n          r.push(i[o++]);\n        }\n\n        return e = r[1], \"function\" == typeof e && (n = e), (n || !b(e)) && (e = function e(t, _e2) {\n          return n && (_e2 = n.call(this, t, _e2)), A(_e2) ? void 0 : _e2;\n        }), r[1] = e, E.apply(P, r);\n      }\n    },\n        R = a(function () {\n      var t = S();\n      return \"[null]\" != E([t]) || \"{}\" != E({\n        a: t\n      }) || \"{}\" != E(Object(t));\n    });\n\n    N || (S = function S() {\n      if (A(this)) throw TypeError(\"Symbol is not a constructor\");\n      return z(l(arguments.length > 0 ? arguments[0] : void 0));\n    }, s(S.prototype, \"toString\", function () {\n      return this._k;\n    }), A = function A(t) {\n      return t instanceof S;\n    }, r.create = B, r.isEnum = G, r.getDesc = H, r.setDesc = V, r.setDescs = W, r.getNames = y.get = I, r.getSymbols = J, u && !n(46) && s(T, \"propertyIsEnumerable\", G, !0));\n    var U = {\n      \"for\": function _for(t) {\n        return i(D, t += \"\") ? D[t] : D[t] = S(t);\n      },\n      keyFor: function keyFor(t) {\n        return h(D, t);\n      },\n      useSetter: function useSetter() {\n        M = !0;\n      },\n      useSimple: function useSimple() {\n        M = !1;\n      }\n    };\n    r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"), function (t) {\n      var e = d(t);\n      U[t] = N ? e : z(e);\n    }), M = !0, c(c.G + c.W, {\n      Symbol: S\n    }), c(c.S, \"Symbol\", U), c(c.S + c.F * !N, \"Object\", {\n      create: B,\n      defineProperty: V,\n      defineProperties: W,\n      getOwnPropertyDescriptor: H,\n      getOwnPropertyNames: I,\n      getOwnPropertySymbols: J\n    }), P && c(c.S + c.F * (!N || R), \"JSON\", {\n      stringify: K\n    }), p(S, \"Symbol\"), p(Math, \"Math\", !0), p(o.JSON, \"JSON\", !0);\n  }, function (t, e) {\n    var n = {}.hasOwnProperty;\n\n    t.exports = function (t, e) {\n      return n.call(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = !n(16)(function () {\n      return 7 != Object.defineProperty({}, \"a\", {\n        get: function get() {\n          return 7;\n        }\n      }).a;\n    });\n  }, function (t, e, n) {\n    t.exports = n(33);\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(34);\n    t.exports = n(31) ? function (t, e, n) {\n      return r.setDesc(t, e, o(1, n));\n    } : function (t, e, n) {\n      return t[e] = n, t;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      return {\n        enumerable: !(1 & t),\n        configurable: !(2 & t),\n        writable: !(4 & t),\n        value: e\n      };\n    };\n  }, function (t, e, n) {\n    var r = n(6),\n        o = \"__core-js_shared__\",\n        i = r[o] || (r[o] = {});\n\n    t.exports = function (t) {\n      return i[t] || (i[t] = {});\n    };\n  }, function (t, e, n) {\n    var r = n(11).setDesc,\n        o = n(30),\n        i = n(37)(\"toStringTag\");\n\n    t.exports = function (t, e, n) {\n      t && !o(t = n ? t : t.prototype, i) && r(t, i, {\n        configurable: !0,\n        value: e\n      });\n    };\n  }, function (t, e, n) {\n    var r = n(35)(\"wks\"),\n        o = n(38),\n        i = n(6).Symbol;\n\n    t.exports = function (t) {\n      return r[t] || (r[t] = i && i[t] || (i || o)(\"Symbol.\" + t));\n    };\n  }, function (t, e) {\n    var n = 0,\n        r = Math.random();\n\n    t.exports = function (t) {\n      return \"Symbol(\".concat(void 0 === t ? \"\" : t, \")_\", (++n + r).toString(36));\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(40);\n\n    t.exports = function (t, e) {\n      for (var n, i = o(t), u = r.getKeys(i), c = u.length, s = 0; c > s;) {\n        if (i[n = u[s++]] === e) return n;\n      }\n    };\n  }, function (t, e, n) {\n    var r = n(14),\n        o = n(13);\n\n    t.exports = function (t) {\n      return r(o(t));\n    };\n  }, function (t, e, n) {\n    var r = n(40),\n        o = n(11).getNames,\n        i = {}.toString,\n        u = \"object\" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],\n        c = function c(t) {\n      try {\n        return o(t);\n      } catch (e) {\n        return u.slice();\n      }\n    };\n\n    t.exports.get = function (t) {\n      return u && \"[object Window]\" == i.call(t) ? c(t) : o(r(t));\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t) {\n      var e = r.getKeys(t),\n          n = r.getSymbols;\n      if (n) for (var o, i = n(t), u = r.isEnum, c = 0; i.length > c;) {\n        u.call(t, o = i[c++]) && e.push(o);\n      }\n      return e;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n\n    t.exports = Array.isArray || function (t) {\n      return \"Array\" == r(t);\n    };\n  }, function (t, e, n) {\n    var r = n(45);\n\n    t.exports = function (t) {\n      if (!r(t)) throw TypeError(t + \" is not an object!\");\n      return t;\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      return \"object\" == typeof t ? null !== t : \"function\" == typeof t;\n    };\n  }, function (t, e) {\n    t.exports = !0;\n  }, function (t, e) {}, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(49)[\"default\"],\n        o = n(51)[\"default\"];\n    e[\"default\"] = function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n      t.prototype = r(e && e.prototype, {\n        constructor: {\n          value: t,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (o ? o(t, e) : t.__proto__ = e);\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(50),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e) {\n      return r.create(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(52),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(53), t.exports = n(7).Object.setPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S, \"Object\", {\n      setPrototypeOf: n(54).set\n    });\n  }, function (t, e, n) {\n    var r = n(11).getDesc,\n        o = n(45),\n        i = n(44),\n        u = function u(t, e) {\n      if (i(t), !o(e) && null !== e) throw TypeError(e + \": can't set as prototype!\");\n    };\n\n    t.exports = {\n      set: Object.setPrototypeOf || (\"__proto__\" in {} ? function (t, e, o) {\n        try {\n          o = n(8)(Function.call, r(Object.prototype, \"__proto__\").set, 2), o(t, []), e = !(t instanceof Array);\n        } catch (i) {\n          e = !0;\n        }\n\n        return function (t, n) {\n          return u(t, n), e ? t.__proto__ = n : o(t, n), t;\n        };\n      }({}, !1) : void 0),\n      check: u\n    };\n  }, function (e, n) {\n    e.exports = t;\n  }, function (t, n) {\n    t.exports = e;\n  }, function (t, e) {\n    t.exports = n;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    function o(t, e) {\n      return t.indexOf(e) >= 0;\n    }\n\n    function i(t) {\n      return function () {\n        return !t.apply(this, arguments);\n      };\n    }\n\n    function u(t, e, n) {\n      for (var r = {}, o = (0, m[\"default\"])(t), i = 0, u = o.length; u > i; i++) {\n        var c = o[i],\n            s = t[c];\n        n(e, c) && (r[c] = s);\n      }\n\n      return r;\n    }\n\n    function c(t, e) {\n      return u(t, e, o);\n    }\n\n    function s(t, e) {\n      return u(t, e, i(o));\n    }\n\n    function a(t) {\n      if (\"object\" == (\"undefined\" == typeof t ? \"undefined\" : (0, b[\"default\"])(t)) && null !== t) {\n        if (\"function\" == typeof y[\"default\"]) {\n          var e = (0, y[\"default\"])(t);\n          return e === Object.prototype || null === e;\n        }\n\n        return \"[object Object]\" == Object.prototype.toString.call(t);\n      }\n\n      return !1;\n    }\n\n    function f(t, e) {\n      var n, r, o;\n      n = Array.isArray(t) ? [] : {};\n\n      for (o in t) {\n        r = t[o], null != r && (\"object\" === (\"undefined\" == typeof r ? \"undefined\" : (0, b[\"default\"])(r)) && null !== r && \"function\" !== r.type ? n[o] = f(r, e) : \"function\" === r.type ? n[o] = e[r.name] : n[o] = r);\n      }\n\n      return n;\n    }\n\n    function p(t, e) {\n      return \"function\" == typeof t ? t : function (n) {\n        return \"undefined\" != typeof n[t] ? n[t] : n[e];\n      };\n    }\n\n    function l(t, e) {\n      return console.warn(\"Set margin with prefixes is deprecated use an object instead\"), t += \"-\", (0, m[\"default\"])(e).reduce(function (n, r) {\n        return r.substr(0, t.length) === t && (n[r.replace(t, \"\")] = e[r]), n;\n      }, {});\n    }\n\n    function d(t) {\n      return t && \"function\" == typeof t;\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.includes = o, e.negate = i, e.filterObject = u, e.pick = c, e.without = s, e.isPlainObject = a, e.bindFunctions = f, e.getValueFunction = p, e.propsByPrefix = l, e.isCallable = d;\n    var h = n(17),\n        y = r(h),\n        v = n(26),\n        b = r(v),\n        g = n(59),\n        m = r(g);\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(60),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(61), t.exports = n(7).Object.keys;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"keys\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }]);\n});","!function () {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n\n  var d3_arraySlice = [].slice,\n      d3_array = function d3_array(list) {\n    return d3_arraySlice.call(list);\n  };\n\n  var d3_document = this.document;\n\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function d3_array(list) {\n        var i = list.length,\n            array = new Array(i);\n\n        while (i--) {\n          array[i] = list[i];\n        }\n\n        return array;\n      };\n    }\n  }\n\n  if (!Date.now) Date.now = function () {\n    return +new Date();\n  };\n\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype,\n          d3_element_setAttribute = d3_element_prototype.setAttribute,\n          d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,\n          d3_style_prototype = this.CSSStyleDeclaration.prototype,\n          d3_style_setProperty = d3_style_prototype.setProperty;\n\n      d3_element_prototype.setAttribute = function (name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n\n      d3_element_prototype.setAttributeNS = function (space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n\n      d3_style_prototype.setProperty = function (name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n\n  d3.ascending = d3_ascending;\n\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  d3.descending = function (a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n\n  d3.min = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && a > b) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.max = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && b > a) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.extent = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    }\n\n    return [a, c];\n  };\n\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n\n  d3.sum = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = +array[i])) s += a;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n      }\n    }\n\n    return s;\n  };\n\n  d3.mean = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;\n      }\n    }\n\n    if (j) return s / j;\n  };\n\n  d3.quantile = function (values, p) {\n    var H = (values.length - 1) * p + 1,\n        h = Math.floor(H),\n        v = +values[h - 1],\n        e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n\n  d3.median = function (array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n      }\n    }\n\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n\n  d3.variance = function (array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  };\n\n  d3.deviation = function () {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n\n  function d3_bisector(compare) {\n    return {\n      left: function left(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n\n  d3.bisector = function (f) {\n    return d3_bisector(f.length === 1 ? function (d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n\n  d3.shuffle = function (array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n\n    var m = i1 - i0,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n\n    return array;\n  };\n\n  d3.permute = function (array, indexes) {\n    var i = indexes.length,\n        permutes = new Array(i);\n\n    while (i--) {\n      permutes[i] = array[indexes[i]];\n    }\n\n    return permutes;\n  };\n\n  d3.pairs = function (array) {\n    var i = 0,\n        n = array.length - 1,\n        p0,\n        p1 = array[0],\n        pairs = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      pairs[i] = [p0 = p1, p1 = array[++i]];\n    }\n\n    return pairs;\n  };\n\n  d3.transpose = function (matrix) {\n    if (!(n = matrix.length)) return [];\n\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n\n    return transpose;\n  };\n\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n\n  d3.zip = function () {\n    return d3.transpose(arguments);\n  };\n\n  d3.keys = function (map) {\n    var keys = [];\n\n    for (var key in map) {\n      keys.push(key);\n    }\n\n    return keys;\n  };\n\n  d3.values = function (map) {\n    var values = [];\n\n    for (var key in map) {\n      values.push(map[key]);\n    }\n\n    return values;\n  };\n\n  d3.entries = function (map) {\n    var entries = [];\n\n    for (var key in map) {\n      entries.push({\n        key: key,\n        value: map[key]\n      });\n    }\n\n    return entries;\n  };\n\n  d3.merge = function (arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) {\n      j += arrays[i].length;\n    }\n\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  };\n\n  var abs = Math.abs;\n\n  d3.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [],\n        k = d3_range_integerScale(abs(step)),\n        i = -1,\n        j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) {\n      range.push(j / k);\n    } else while ((j = start + step * ++i) < stop) {\n      range.push(j / k);\n    }\n    return range;\n  };\n\n  function d3_range_integerScale(x) {\n    var k = 1;\n\n    while (x * k % 1) {\n      k *= 10;\n    }\n\n    return k;\n  }\n\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n\n  d3.map = function (object, f) {\n    var map = new d3_Map();\n\n    if (object instanceof d3_Map) {\n      object.forEach(function (key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (arguments.length === 1) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f.call(object, o = object[i], i), o);\n      }\n    } else {\n      for (var key in object) {\n        map.set(key, object[key]);\n      }\n    }\n\n    return map;\n  };\n\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n\n  var d3_map_proto = \"__proto__\",\n      d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function get(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function set(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function values() {\n      var values = [];\n\n      for (var key in this._) {\n        values.push(this._[key]);\n      }\n\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n\n      for (var key in this._) {\n        entries.push({\n          key: d3_map_unescape(key),\n          value: this._[key]\n        });\n      }\n\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key), this._[key]);\n      }\n    }\n  });\n\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n\n  function d3_map_keys() {\n    var keys = [];\n\n    for (var key in this._) {\n      keys.push(d3_map_unescape(key));\n    }\n\n    return keys;\n  }\n\n  function d3_map_size() {\n    var size = 0;\n\n    for (var key in this._) {\n      ++size;\n    }\n\n    return size;\n  }\n\n  function d3_map_empty() {\n    for (var key in this._) {\n      return false;\n    }\n\n    return true;\n  }\n\n  d3.nest = function () {\n    var nest = {},\n        keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup;\n\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          object,\n          setter,\n          valuesByKey = new d3_Map(),\n          values;\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [object]);\n        }\n      }\n\n      if (mapType) {\n        object = mapType();\n\n        setter = function setter(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n\n        setter = function setter(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n\n      valuesByKey.forEach(setter);\n      return object;\n    }\n\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [],\n          sortKey = sortKeys[depth++];\n      map.forEach(function (key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function (a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n\n    nest.map = function (array, mapType) {\n      return map(mapType, array, 0);\n    };\n\n    nest.entries = function (array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n\n    nest.key = function (d) {\n      keys.push(d);\n      return nest;\n    };\n\n    nest.sortKeys = function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n\n    nest.sortValues = function (order) {\n      sortValues = order;\n      return nest;\n    };\n\n    nest.rollup = function (f) {\n      rollup = f;\n      return nest;\n    };\n\n    return nest;\n  };\n\n  d3.set = function (array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) {\n      set.add(array[i]);\n    }\n    return set;\n  };\n\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function add(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key));\n      }\n    }\n  });\n  d3.behavior = {};\n\n  function d3_identity(d) {\n    return d;\n  }\n\n  d3.rebind = function (target, source) {\n    var i = 1,\n        n = arguments.length,\n        method;\n\n    while (++i < n) {\n      target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    }\n\n    return target;\n  };\n\n  function d3_rebind(target, source, method) {\n    return function () {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n\n  var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n  function d3_noop() {}\n\n  d3.dispatch = function () {\n    var dispatch = new d3_dispatch(),\n        i = -1,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    return dispatch;\n  };\n\n  function d3_dispatch() {}\n\n  d3_dispatch.prototype.on = function (type, listener) {\n    var i = type.indexOf(\".\"),\n        name = \"\";\n\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n\n  function d3_dispatch_event(dispatch) {\n    var listeners = [],\n        listenerByName = new d3_Map();\n\n    function event() {\n      var z = listeners,\n          i = -1,\n          n = z.length,\n          l;\n\n      while (++i < n) {\n        if (l = z[i].on) l.apply(this, arguments);\n      }\n\n      return dispatch;\n    }\n\n    event.on = function (name, listener) {\n      var l = listenerByName.get(name),\n          i;\n      if (arguments.length < 2) return l && l.on;\n\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n\n    return event;\n  }\n\n  d3.event = null;\n\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n\n  function d3_eventSource() {\n    var e = d3.event,\n        s;\n\n    while (s = e.sourceEvent) {\n      e = s;\n    }\n\n    return e;\n  }\n\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(),\n        i = 0,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    dispatch.of = function (thiz, argumentz) {\n      return function (e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    return dispatch;\n  }\n\n  d3.requote = function (s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    for (var property in prototype) {\n      object[property] = prototype[property];\n    }\n  };\n\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n\n  var d3_select = function d3_select(s, n) {\n    return n.querySelector(s);\n  },\n      d3_selectAll = function d3_selectAll(s, n) {\n    return n.querySelectorAll(s);\n  },\n      _d3_selectMatches = function d3_selectMatches(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\n    _d3_selectMatches = function d3_selectMatches(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n\n    return _d3_selectMatches(n, s);\n  };\n\n  if (typeof Sizzle === \"function\") {\n    d3_select = function d3_select(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n\n    d3_selectAll = Sizzle;\n    _d3_selectMatches = Sizzle.matchesSelector;\n  }\n\n  d3.selection = function () {\n    return d3.select(d3_document.documentElement);\n  };\n\n  var d3_selectionPrototype = d3.selection.prototype = [];\n\n  d3_selectionPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        group,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_select(selector, this);\n    };\n  }\n\n  d3_selectionPrototype.selectAll = function (selector) {\n    var subgroups = [],\n        subgroup,\n        node;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_selectAll(selector, this);\n    };\n  }\n\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function qualify(name) {\n      var i = name.indexOf(\":\"),\n          prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n\n  d3_selectionPrototype.attr = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n\n      for (value in name) {\n        this.each(d3_selection_attr(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_attr(name, value));\n  };\n\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);\n    }\n\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);\n    }\n\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n\n  d3_selectionPrototype.classed = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(),\n            n = (name = d3_selection_classes(name)).length,\n            i = -1;\n\n        if (value = node.classList) {\n          while (++i < n) {\n            if (!value.contains(name[i])) return false;\n          }\n        } else {\n          value = node.getAttribute(\"class\");\n\n          while (++i < n) {\n            if (!d3_selection_classedRe(name[i]).test(value)) return false;\n          }\n        }\n\n        return true;\n      }\n\n      for (value in name) {\n        this.each(d3_selection_classed(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_classed(name, value));\n  };\n\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n\n    function classedConstant() {\n      var i = -1;\n\n      while (++i < n) {\n        name[i](this, value);\n      }\n    }\n\n    function classedFunction() {\n      var i = -1,\n          x = value.apply(this, arguments);\n\n      while (++i < n) {\n        name[i](this, x);\n      }\n    }\n\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function (node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n\n  d3_selectionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.each(d3_selection_style(priority, name[priority], value));\n        }\n\n        return this;\n      }\n\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n\n      priority = \"\";\n    }\n\n    return this.each(d3_selection_style(name, value, priority));\n  };\n\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);\n    }\n\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n\n  d3_selectionPrototype.property = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n\n      for (value in name) {\n        this.each(d3_selection_property(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_property(name, value));\n  };\n\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n\n    function propertyConstant() {\n      this[name] = value;\n    }\n\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name];else this[name] = x;\n    }\n\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n\n  d3_selectionPrototype.text = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.textContent = \"\";\n    } : function () {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n\n  d3_selectionPrototype.html = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.innerHTML = \"\";\n    } : function () {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n\n  d3_selectionPrototype.append = function (name) {\n    name = d3_selection_creator(name);\n    return this.select(function () {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument,\n          namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n\n  d3_selectionPrototype.insert = function (name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function () {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n\n  d3_selectionPrototype.remove = function () {\n    return this.each(d3_selectionRemove);\n  };\n\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  d3_selectionPrototype.data = function (value, key) {\n    var i = -1,\n        n = this.length,\n        group,\n        node;\n\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n\n      return value;\n    }\n\n    function bind(group, groupData) {\n      var i,\n          n = group.length,\n          m = groupData.length,\n          n0 = Math.min(n, m),\n          updateNodes = new Array(m),\n          enterNodes = new Array(m),\n          exitNodes = new Array(n),\n          node,\n          nodeData;\n\n      if (key) {\n        var nodeByKeyValue = new d3_Map(),\n            keyValues = new Array(n),\n            keyValue;\n\n        for (i = -1; ++i < n;) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n\n            keyValues[i] = keyValue;\n          }\n        }\n\n        for (i = -1; ++i < m;) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n\n          nodeByKeyValue.set(keyValue, true);\n        }\n\n        for (i = -1; ++i < n;) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0;) {\n          node = group[i];\n          nodeData = groupData[i];\n\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n\n        for (; i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n\n    var enter = d3_selection_enter([]),\n        update = d3_selection([]),\n        exit = d3_selection([]);\n\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n\n    update.enter = function () {\n      return enter;\n    };\n\n    update.exit = function () {\n      return exit;\n    };\n\n    return update;\n  };\n\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n\n  d3_selectionPrototype.datum = function (value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n\n  d3_selectionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_filter(selector) {\n    return function () {\n      return _d3_selectMatches(this, selector);\n    };\n  }\n\n  d3_selectionPrototype.order = function () {\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  d3_selectionPrototype.sort = function (comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      this[j].sort(comparator);\n    }\n\n    return this.order();\n  };\n\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function (a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n\n  d3_selectionPrototype.each = function (callback) {\n    return d3_selection_each(this, function (node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n\n    return groups;\n  }\n\n  d3_selectionPrototype.call = function (callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n\n  d3_selectionPrototype.empty = function () {\n    return !this.node();\n  };\n\n  d3_selectionPrototype.node = function () {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  };\n\n  d3_selectionPrototype.size = function () {\n    var n = 0;\n    d3_selection_each(this, function () {\n      ++n;\n    });\n    return n;\n  };\n\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\n  d3_selection_enterPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        upgroup,\n        group,\n        node;\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  d3_selection_enterPrototype.insert = function (name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function (d, i, j) {\n      var group = enter[j].update,\n          n = group.length,\n          node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n\n      while (!(node = group[i0]) && ++i0 < n) {\n        ;\n      }\n\n      return node;\n    };\n  }\n\n  d3.select = function (node) {\n    var group;\n\n    if (typeof node === \"string\") {\n      group = [d3_select(node, d3_document)];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [node];\n      group.parentNode = d3_documentElement(node);\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3.selectAll = function (nodes) {\n    var group;\n\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3_selectionPrototype.on = function (type, listener, capture) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n\n        for (capture in type) {\n          this.each(d3_selection_on(capture, type[capture], listener));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type,\n        i = type.indexOf(\".\"),\n        wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n\n    function onRemove() {\n      var l = this[name];\n\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\n          match;\n\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function (k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n\n  function d3_selection_onListener(listener, argumentz) {\n    return function (e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function (e) {\n      var target = this,\n          related = e.relatedTarget;\n\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n\n  var d3_event_dragSelect,\n      d3_event_dragId = 0;\n\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId,\n        click = \"click\" + name,\n        w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style,\n          select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n\n    return function (suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\n      if (suppressClick) {\n        var off = function off() {\n          w.on(click, null);\n        };\n\n        w.on(click, function () {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n\n  d3.mouse = function (container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = container.getBoundingClientRect();\n    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n  }\n\n  d3.touch = function (container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n\n  d3.behavior.drag = function () {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\n        origin = null,\n        mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"),\n        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n\n    function dragstart(id, position, subject, move, end) {\n      return function () {\n        var that = this,\n            target = d3.event.target.correspondingElement || d3.event.target,\n            parent = that.parentNode,\n            dispatch = event.of(that, arguments),\n            dragged = 0,\n            dragId = id(),\n            dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\n            dragOffset,\n            dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended),\n            dragRestore = d3_event_dragSuppress(target),\n            position0 = position(parent, dragId);\n\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\n        } else {\n          dragOffset = [0, 0];\n        }\n\n        dispatch({\n          type: \"dragstart\"\n        });\n\n        function moved() {\n          var position1 = position(parent, dragId),\n              dx,\n              dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n\n    drag.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n\n    return d3.rebind(drag, event, \"on\");\n  };\n\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n\n  d3.touches = function (container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function (touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n\n  var ε = 1e-6,\n      ε2 = ε * ε,\n      π = Math.PI,\n      τ = 2 * π,\n      τε = τ - ε,\n      halfπ = π / 2,\n      d3_radians = π / 180,\n      d3_degrees = 180 / π;\n\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n\n  var ρ = Math.SQRT2,\n      ρ2 = 2,\n      ρ4 = 4;\n\n  d3.interpolateZoom = function (p0, p1) {\n    var ux0 = p0[0],\n        uy0 = p0[1],\n        w0 = p0[2],\n        ux1 = p1[0],\n        uy1 = p1[1],\n        w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n\n      i = function i(t) {\n        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];\n      };\n    } else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = d3_cosh(r0),\n            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n      };\n    }\n\n    i.duration = S * 1e3;\n    return i;\n  };\n\n  d3.behavior.zoom = function () {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    },\n        translate0,\n        center0,\n        center,\n        size = [960, 500],\n        scaleExtent = d3_behavior_zoomInfinity,\n        duration = 250,\n        zooming = 0,\n        mousedown = \"mousedown.zoom\",\n        mousemove = \"mousemove.zoom\",\n        mouseup = \"mouseup.zoom\",\n        mousewheelTimer,\n        touchstart = \"touchstart.zoom\",\n        touchtime,\n        event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\n        x0,\n        x1,\n        y0,\n        y1;\n\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n\n    zoom.event = function (g) {\n      g.each(function () {\n        var dispatch = event.of(this, arguments),\n            view1 = view;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function () {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function () {\n            var dx = size[0],\n                dy = size[1],\n                cx = center0 ? center0[0] : dx / 2,\n                cy = center0 ? center0[1] : dy / 2,\n                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n            return function (t) {\n              var l = i(t),\n                  k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function () {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function () {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n\n    zoom.translate = function (_) {\n      if (!arguments.length) return [view.x, view.y];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scale = function (_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n\n    zoom.scaleExtent = function (_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.center = function (_) {\n      if (!arguments.length) return center;\n      center = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.size = function (_) {\n      if (!arguments.length) return size;\n      size = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n\n    zoom.x = function (z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    zoom.y = function (z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    function location(p) {\n      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n    }\n\n    function point(l) {\n      return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n    }\n\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function (x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function (y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [view.x, view.y]\n      });\n    }\n\n    function zoomended(dispatch) {\n      if (! --zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n\n    function mousedowned() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          dragged = 0,\n          subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended),\n          location0 = location(d3.mouse(that)),\n          dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n\n    function touchstarted() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          locations0 = {},\n          distance0 = 0,\n          scale0,\n          zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier,\n          touchmove = \"touchmove\" + zoomName,\n          touchend = \"touchend\" + zoomName,\n          targets = [],\n          subject = d3.select(that),\n          dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function (t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n\n        var touches = relocate(),\n            now = Date.now();\n\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0],\n              q = touches[1],\n              dx = p[0] - q[0],\n              dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n\n      function moved() {\n        var touches = d3.touches(that),\n            p0,\n            l0,\n            p1,\n            l1;\n        d3_selection_interrupt.call(that);\n\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,\n              scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n          scaleTo(scale1 * scale0);\n        }\n\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function () {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n\n    function dblclicked() {\n      var p = d3.mouse(this),\n          k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n\n    return d3.rebind(zoom, event, \"on\");\n  };\n\n  var d3_behavior_zoomInfinity = [0, Infinity],\n      d3_behavior_zoomDelta,\n      d3_behavior_zoomWheel;\n  d3.color = d3_color;\n\n  function d3_color() {}\n\n  d3_color.prototype.toString = function () {\n    return this.rgb() + \"\";\n  };\n\n  d3.hsl = d3_hsl;\n\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\n  d3_hslPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n\n  d3_hslPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n\n  d3_hslPrototype.rgb = function () {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n\n    function v(h) {\n      if (h > 360) h -= 360;else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n\n  d3.hcl = d3_hcl;\n\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\n  d3_hclPrototype.brighter = function (k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.darker = function (k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.rgb = function () {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n\n  d3.lab = d3_lab;\n\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047,\n      d3_lab_Y = 1,\n      d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\n  d3_labPrototype.brighter = function (k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.darker = function (k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.rgb = function () {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116,\n        x = y + a / 500,\n        z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n\n  d3.rgb = d3_rgb;\n\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\n  d3_rgbPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r,\n        g = this.g,\n        b = this.b,\n        i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n\n  d3_rgbPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n\n  d3_rgbPrototype.hsl = function () {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n\n  d3_rgbPrototype.toString = function () {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0,\n        g = 0,\n        b = 0,\n        m1,\n        m2,\n        color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\n    if (m1) {\n      m2 = m1[2].split(\",\");\n\n      switch (m1[1]) {\n        case \"hsl\":\n          {\n            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n          }\n\n        case \"rgb\":\n          {\n            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n          }\n      }\n    }\n\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n\n    return rgb(r, g, b);\n  }\n\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255),\n        max = Math.max(r, g, b),\n        d = max - min,\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new d3_hsl(h, s, l);\n  }\n\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function (key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n\n  function d3_xhrType(response) {\n    return function (url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {},\n        dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        headers = {},\n        request = new XMLHttpRequest(),\n        responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n      request.readyState > 3 && respond();\n    };\n\n    function respond() {\n      var status = request.status,\n          result;\n\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n\n    request.onprogress = function (event) {\n      var o = d3.event;\n      d3.event = event;\n\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n\n    xhr.header = function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name];else headers[name] = value + \"\";\n      return xhr;\n    };\n\n    xhr.mimeType = function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n\n    xhr.responseType = function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n\n    xhr.response = function (value) {\n      response = value;\n      return xhr;\n    };\n\n    [\"get\", \"post\"].forEach(function (method) {\n      xhr[method] = function () {\n        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n      };\n    });\n\n    xhr.send = function (method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) {\n        request.setRequestHeader(name, headers[name]);\n      }\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n\n    xhr.abort = function () {\n      request.abort();\n      return xhr;\n    };\n\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function (error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n\n  d3.dsv = function (delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\n      xhr.row = function (_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n\n      return xhr;\n    }\n\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n\n    function typedResponse(f) {\n      return function (request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n\n    dsv.parse = function (text, f) {\n      var o;\n      return dsv.parseRows(text, function (row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function (row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n\n    dsv.parseRows = function (text, f) {\n      var EOL = {},\n          EOF = {},\n          rows = [],\n          N = text.length,\n          I = 0,\n          n = 0,\n          t,\n          eol;\n\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n\n        while (I < N) {\n          var c = text.charCodeAt(I++),\n              k = 1;\n          if (c === 10) eol = true;else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    };\n\n    dsv.format = function (rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(),\n          fields = [];\n      rows.forEach(function (row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n        return fields.map(function (field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    dsv.formatRows = function (rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n\n    return dsv;\n  };\n\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\n  var d3_timer_queueHead,\n      d3_timer_queueTail,\n      d3_timer_interval,\n      d3_timer_timeout,\n      d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function (callback) {\n    setTimeout(callback, 17);\n  };\n\n  d3.timer = function () {\n    d3_timer.apply(this, arguments);\n  };\n\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay,\n        timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n\n    return timer;\n  }\n\n  function d3_timer_step() {\n    var now = d3_timer_mark(),\n        delay = d3_timer_sweep() - now;\n\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n\n  d3.timer.flush = function () {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n\n  function d3_timer_mark() {\n    var now = Date.now(),\n        timer = d3_timer_queueHead;\n\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n\n    return now;\n  }\n\n  function d3_timer_sweep() {\n    var t0,\n        t1 = d3_timer_queueHead,\n        time = Infinity;\n\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n\n    d3_timer_queueTail = t0;\n    return time;\n  }\n\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n\n  d3.round = function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n\n  var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n\n  d3.formatPrefix = function (value, precision) {\n    var i = 0;\n\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n\n    return d3_formatPrefixes[8 + i / 3];\n  };\n\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function (d) {\n        return d / k;\n      } : function (d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal,\n        locale_thousands = locale.thousands,\n        locale_grouping = locale.grouping,\n        locale_currency = locale.currency,\n        formatGroup = locale_grouping && locale_thousands ? function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = locale_grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function (specifier) {\n      var match = d3_format_re.exec(specifier),\n          fill = match[1] || \" \",\n          align = match[2] || \">\",\n          sign = match[3] || \"-\",\n          symbol = match[4] || \"\",\n          zfill = match[5],\n          width = +match[6],\n          comma = match[7],\n          precision = match[8],\n          type = match[9],\n          scale = 1,\n          prefix = \"\",\n          suffix = \"\",\n          integer = false,\n          exponent = true;\n      if (precision) precision = +precision.substring(1);\n\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n\n      switch (type) {\n        case \"n\":\n          comma = true;\n          type = \"g\";\n          break;\n\n        case \"%\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"f\";\n          break;\n\n        case \"p\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"r\";\n          break;\n\n        case \"b\":\n        case \"o\":\n        case \"x\":\n        case \"X\":\n          if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n        case \"c\":\n          exponent = false;\n\n        case \"d\":\n          integer = true;\n          precision = 0;\n          break;\n\n        case \"s\":\n          scale = -1;\n          type = \"r\";\n          break;\n      }\n\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision));else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function (value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"),\n            before,\n            after;\n\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\";else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\n            padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function b(x) {\n      return x.toString(2);\n    },\n    c: function c(x) {\n      return String.fromCharCode(x);\n    },\n    o: function o(x) {\n      return x.toString(8);\n    },\n    x: function x(_x) {\n      return _x.toString(16);\n    },\n    X: function X(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function g(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function e(x, p) {\n      return x.toExponential(p);\n    },\n    f: function f(x, p) {\n      return x.toFixed(p);\n    },\n    r: function r(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n\n  var d3_time = d3.time = {},\n      d3_date = Date;\n\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n\n  d3_date_utc.prototype = {\n    getDate: function getDate() {\n      return this._.getUTCDate();\n    },\n    getDay: function getDay() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function getFullYear() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function getHours() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function getMilliseconds() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function getMinutes() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function getMonth() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function getSeconds() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function getTime() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function getTimezoneOffset() {\n      return 0;\n    },\n    valueOf: function valueOf() {\n      return this._.valueOf();\n    },\n    setDate: function setDate() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function setDay() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function setFullYear() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function setHours() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function setMilliseconds() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function setMinutes() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function setMonth() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function setSeconds() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function setTime() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date),\n          d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n\n    function range(t0, t1, dt) {\n      var time = ceil(t0),\n          times = [];\n\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) {\n          times.push(new Date(+time)), step(time, 1);\n        }\n      }\n\n      return times;\n    }\n\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n\n  function d3_time_interval_utc(method) {\n    return function (date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n\n  d3_time.year = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function (date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function (date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function (date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function (date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n\n  d3_time.dayOfYear = function (date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n\n  [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function (date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function (date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n\n    d3_time[day + \"OfYear\"] = function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_days = locale.days,\n        locale_shortDays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    function d3_time_format(template) {\n      var n = template.length;\n\n      function format(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            c,\n            p,\n            f;\n\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n\n      format.parse = function (string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        },\n            i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc,\n            date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j);else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n\n      format.toString = function () {\n        return template;\n      };\n\n      return format;\n    }\n\n    function d3_time_parse(date, template, string, j) {\n      var c,\n          p,\n          t,\n          i = 0,\n          n = template.length,\n          m = string.length;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    d3_time_format.utc = function (template) {\n      var local = d3_time_format(template);\n\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n\n      format.parse = function (string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n\n      format.toString = local.toString;\n      return format;\n    };\n\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(),\n        d3_time_dayRe = d3_time_formatRe(locale_days),\n        d3_time_dayLookup = d3_time_formatLookup(locale_days),\n        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\n        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\n        d3_time_monthRe = d3_time_formatRe(locale_months),\n        d3_time_monthLookup = d3_time_formatLookup(locale_months),\n        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\n        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function (p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function a(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function A(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function b(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function B(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function d(_d, p) {\n        return d3_time_formatPad(_d.getDate(), p, 2);\n      },\n      e: function e(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function H(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function I(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function j(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function L(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function m(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function M(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function p(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function S(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function U(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function w(d) {\n        return d.getDay();\n      },\n      W: function W(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function Y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function _() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n\n    return d3_time_format;\n  }\n\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  },\n      d3_time_numberRe = /^\\s*\\d+/,\n      d3_time_percentRe = /^%/;\n\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map.set(names[i].toLowerCase(), i);\n    }\n\n    return map;\n  }\n\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;\n  }\n\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(),\n        zs = z > 0 ? \"-\" : \"+\",\n        zh = abs(z) / 60 | 0,\n        zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function d3_time_formatMulti(formats) {\n    var n = formats.length,\n        i = -1;\n\n    while (++i < n) {\n      formats[i][0] = this(formats[i][0]);\n    }\n\n    return function (date) {\n      var i = 0,\n          f = formats[i];\n\n      while (!f[1](date)) {\n        f = formats[++i];\n      }\n\n      return f[0](date);\n    };\n  }\n\n  d3.locale = function (locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n\n  function d3_adder() {}\n\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function add(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;\n    },\n    reset: function reset() {\n      this.s = this.t = 0;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n\n  d3.geo.stream = function (object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n\n  var d3_geo_streamObjectType = {\n    Feature: function Feature(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function FeatureCollection(object, listener) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(features[i].geometry, listener);\n      }\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function Sphere(object, listener) {\n      listener.sphere();\n    },\n    Point: function Point(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], listener.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function MultiLineString(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamLine(coordinates[i], listener, 0);\n      }\n    },\n    Polygon: function Polygon(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function MultiPolygon(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamPolygon(coordinates[i], listener);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, listener) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(geometries[i], listener);\n      }\n    }\n  };\n\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    listener.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    listener.lineEnd();\n  }\n\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1,\n        n = coordinates.length;\n    listener.polygonStart();\n\n    while (++i < n) {\n      d3_geo_streamLine(coordinates[i], listener, 1);\n    }\n\n    listener.polygonEnd();\n  }\n\n  d3.geo.area = function (object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n\n  var d3_geo_areaSum,\n      d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function sphere() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n\n    d3_geo_area.point = function (λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0,\n          sdλ = dλ >= 0 ? 1 : -1,\n          adλ = sdλ * dλ,\n          cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          k = sinφ0 * sinφ,\n          u = cosφ0 * cosφ + k * Math.cos(adλ),\n          v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n\n    d3_geo_area.lineEnd = function () {\n      nextPoint(λ00, φ00);\n    };\n  }\n\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0],\n        φ = spherical[1],\n        cosφ = Math.cos(φ);\n    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n  }\n\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function d3_geo_cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n\n  function d3_geo_cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n\n  function d3_geo_spherical(cartesian) {\n    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n  }\n\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n\n  d3.geo.bounds = function () {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n\n    function point(λ, φ) {\n      ranges.push(range = [λ0 = λ, λ1 = λ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p),\n            equatorial = [normal[1], -normal[0], 0],\n            inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_,\n            s = dλ > 0 ? 1 : -1,\n            λi = inflection[0] * d3_degrees * s,\n            antimeridian = abs(dλ) > 180;\n\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n\n      p0 = p, λ_ = λ;\n    }\n\n    function lineStart() {\n      bound.point = linePoint;\n    }\n\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n\n    return function (feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n\n      if (n) {\n        ranges.sort(compareRanges);\n\n        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n          b = ranges[i];\n\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n\n        var best = -Infinity,\n            dλ;\n\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n    };\n  }();\n\n  d3.geo.centroid = function (object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2,\n        y = d3_geo_centroidY2,\n        z = d3_geo_centroidZ2,\n        m = x * x + y * y + z * z;\n\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [NaN, NaN];\n    }\n\n    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n  };\n\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    d3_geo_centroid.lineEnd = function () {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          cx = y0 * z - z0 * y,\n          cy = z0 * x - x0 * z,\n          cz = x0 * y - y0 * x,\n          m = Math.sqrt(cx * cx + cy * cy + cz * cz),\n          u = x0 * x + y0 * y + z0 * z,\n          v = m && -d3_acos(u) / m,\n          w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function d3_true() {\n    return true;\n  }\n\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [],\n        clip = [];\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n];\n\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n\n        for (var i = 0; i < n; ++i) {\n          listener.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        listener.lineEnd();\n        return;\n      }\n\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\n          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      listener.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (var i = points.length - 1; i >= 0; --i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      listener.lineEnd();\n    }\n  }\n\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function (rotate, listener) {\n      var line = clipLine(listener),\n          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      var segments;\n      var buffer = d3_geo_clipBufferListener(),\n          ringListener = clipLine(buffer),\n          polygonStarted = false,\n          polygon,\n          ring;\n\n      function pointRing(λ, φ) {\n        ring.push([λ, φ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(),\n            ringSegments = buffer.buffer(),\n            segment,\n            n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1,\n              i = -1,\n              point;\n\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n\n            while (++i < n) {\n              listener.point((point = segment[i])[0], point[1]);\n            }\n\n            listener.lineEnd();\n          }\n\n          return;\n        }\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n\n      return clip;\n    };\n  }\n\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n\n  function d3_geo_clipBufferListener() {\n    var lines = [],\n        line;\n    return {\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      point: function point(λ, φ) {\n        line.push([λ, φ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function buffer() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN,\n        φ0 = NaN,\n        sλ0 = NaN,\n        _clean;\n\n    return {\n      lineStart: function lineStart() {\n        listener.lineStart();\n        _clean = 1;\n      },\n      point: function point(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π,\n            dλ = abs(λ1 - λ0);\n\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          _clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          _clean = 0;\n        }\n\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function lineEnd() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean;\n      }\n    };\n  }\n\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0,\n        cosφ1,\n        sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0],\n        parallel = point[1],\n        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\n        polarAngle = 0,\n        winding = 0;\n    d3_geo_areaRingSum.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i],\n          m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0],\n          λ0 = point0[0],\n          φ0 = point0[1] / 2 + π / 4,\n          sinφ0 = Math.sin(φ0),\n          cosφ0 = Math.cos(φ0),\n          j = 1;\n\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0],\n            φ = point[1] / 2 + π / 4,\n            sinφ = Math.sin(φ),\n            cosφ = Math.cos(φ),\n            dλ = λ - λ0,\n            sdλ = dλ >= 0 ? 1 : -1,\n            adλ = sdλ * dλ,\n            antimeridian = adλ > π,\n            k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > ε,\n        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n\n    function clipLine(listener) {\n      var point0, c0, v0, v00, _clean2;\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(λ, φ) {\n          var point1 = [λ, φ],\n              point2,\n              v = visible(λ, φ),\n              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a),\n          pb = d3_geo_cartesian(b);\n      var n1 = [1, 0, 0],\n          n2 = d3_geo_cartesianCross(pa, pb),\n          n2n2 = d3_geo_cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = d3_geo_cartesianCross(n1, n2),\n          A = d3_geo_cartesianScale(n1, c1),\n          B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2,\n          w = d3_geo_cartesianDot(A, u),\n          uu = d3_geo_cartesianDot(u, u),\n          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2),\n          q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0],\n          λ1 = b[0],\n          φ0 = a[1],\n          φ1 = b[1],\n          z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0,\n          polar = abs(δλ - π) < ε,\n          meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [q, d3_geo_spherical(q1)];\n      }\n    }\n\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius,\n          code = 0;\n      if (λ < -r) code |= 1;else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4;else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function (line) {\n      var a = line.a,\n          b = line.b,\n          ax = a.x,\n          ay = a.y,\n          bx = b.x,\n          by = b.y,\n          t0 = 0,\n          t1 = 1,\n          dx = bx - ax,\n          dy = by - ay,\n          r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n\n  var d3_geo_clipExtentMAX = 1e9;\n\n  d3.geo.clipExtent = function () {\n    var x0,\n        y0,\n        x1,\n        y1,\n        _stream,\n        clip,\n        clipExtent = {\n      stream: function stream(output) {\n        if (_stream) _stream.valid = false;\n        _stream = clip(output);\n        _stream.valid = true;\n        return _stream;\n      },\n      extent: function extent(_) {\n        if (!arguments.length) return [[x0, y0], [x1, y1]];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (_stream) _stream.valid = false, _stream = null;\n        return clipExtent;\n      }\n    };\n\n    return clipExtent.extent([[0, 0], [960, 500]]);\n  };\n\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function (listener) {\n      var listener_ = listener,\n          bufferListener = d3_geo_clipBufferListener(),\n          clipLine = d3_geom_clipLine(x0, y0, x1, y1),\n          segments,\n          polygon,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function polygonEnd() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([x0, y1]),\n              inside = clean && clipStartInside,\n              visible = segments.length;\n\n          if (inside || visible) {\n            listener.polygonStart();\n\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n\n            listener.polygonEnd();\n          }\n\n          segments = polygon = ring = null;\n        }\n      };\n\n      function insidePolygon(p) {\n        var wn = 0,\n            n = polygon.length,\n            y = p[1];\n\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n\n            a = b;\n          }\n        }\n\n        return wn !== 0;\n      }\n\n      function interpolate(from, to, direction, listener) {\n        var a = 0,\n            a1 = 0;\n\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n\n      var x__, y__, v__, x_, y_, v_, first, clean;\n\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y);else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clip;\n    };\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n\n    function comparePoints(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0,\n        φ1 = π / 3,\n        m = d3_geo_projectionMutator(projectAt),\n        p = m(φ0, φ1);\n\n    p.parallels = function (_) {\n      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n\n    return p;\n  }\n\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0),\n        n = (sinφ0 + Math.sin(φ1)) / 2,\n        C = 1 + sinφ0 * (2 * n - sinφ0),\n        ρ0 = Math.sqrt(C) / n;\n\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = ρ0 - y;\n      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEqualArea = function () {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n\n  d3.geo.albers = function () {\n    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n  };\n\n  d3.geo.albersUsa = function () {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n\n    var _point,\n        pointStream = {\n      point: function point(x, y) {\n        _point = [x, y];\n      }\n    },\n        lower48Point,\n        alaskaPoint,\n        hawaiiPoint;\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      _point = null;\n      (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);\n      return _point;\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      var lower48Stream = lower48.stream(stream),\n          alaskaStream = alaska.stream(stream),\n          hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function point(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function sphere() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function lineStart() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function lineEnd() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function polygonStart() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function polygonEnd() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  };\n\n  var d3_geo_pathAreaSum,\n      d3_geo_pathAreaPolygon,\n      d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathArea.point = function (x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n\n    d3_geo_pathArea.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5),\n        buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function result() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n\n    d3_geo_pathCentroid.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  function d3_geo_pathContext(context) {\n    var _pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        _pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n\n    function point(x, y) {\n      context.moveTo(x + _pointRadius, y);\n      context.arc(x, y, _pointRadius, 0, τ);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function d3_geo_resample(project) {\n    var δ2 = .5,\n        cosMinDistance = Math.cos(30 * d3_radians),\n        maxDepth = 16;\n\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function (x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([λ, φ]),\n            p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resample;\n    }\n\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = Math.sqrt(a * a + b * b + c * c),\n            φ2 = Math.asin(c /= m),\n            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\n            p = project(λ2, φ2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    resample.precision = function (_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n\n    return resample;\n  }\n\n  d3.geo.path = function () {\n    var pointRadius = 4.5,\n        projection,\n        context,\n        projectStream,\n        contextStream,\n        cacheStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n\n    path.centroid = function (object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n    };\n\n    path.bounds = function (object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n    };\n\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function (x, y) {\n      return project([x * d3_degrees, y * d3_degrees]);\n    });\n    return function (stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n\n  d3.geo.transform = function (methods) {\n    return {\n      stream: function stream(_stream2) {\n        var transform = new d3_geo_transform(_stream2);\n\n        for (var k in methods) {\n          transform[k] = methods[k];\n        }\n\n        return transform;\n      }\n    };\n  };\n\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n\n  d3_geo_transform.prototype = {\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function sphere() {\n        stream.sphere();\n      },\n      lineStart: function lineStart() {\n        stream.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n      }\n    };\n  }\n\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function d3_geo_projectionMutator(projectAt) {\n    var project,\n        rotate,\n        projectRotate,\n        projectResample = d3_geo_resample(function (x, y) {\n      x = project(x, y);\n      return [x[0] * k + δx, δy - x[1] * k];\n    }),\n        k = 150,\n        x = 480,\n        y = 250,\n        λ = 0,\n        φ = 0,\n        δλ = 0,\n        δφ = 0,\n        δγ = 0,\n        δx,\n        δy,\n        preclip = d3_geo_clipAntimeridian,\n        postclip = d3_identity,\n        clipAngle = null,\n        clipExtent = null,\n        stream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [point[0] * k + δx, δy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n    }\n\n    projection.stream = function (output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n\n    projection.clipAngle = function (_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n\n    projection.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n\n    projection.scale = function (_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n\n    projection.translate = function (_) {\n      if (!arguments.length) return [x, y];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n\n    projection.center = function (_) {\n      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n\n    projection.rotate = function (_) {\n      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n\n    d3.rebind(projection, projectResample, \"precision\");\n\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function (x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n\n  function d3_geo_equirectangular(λ, φ) {\n    return [λ, φ];\n  }\n\n  (d3.geo.equirectangular = function () {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\n  d3.geo.rotation = function (rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n\n    return forward;\n  };\n\n  function d3_geo_identityRotation(λ, φ) {\n    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n  }\n\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n\n  function d3_geo_forwardRotationλ(δλ) {\n    return function (λ, φ) {\n      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    };\n  }\n\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ),\n        sinδφ = Math.sin(δφ),\n        cosδγ = Math.cos(δγ),\n        sinδγ = Math.sin(δγ);\n\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδφ + x * sinδφ;\n      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n    }\n\n    rotation.invert = function (λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδγ - y * sinδγ;\n      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n    };\n\n    return rotation;\n  }\n\n  d3.geo.circle = function () {\n    var origin = [0, 0],\n        angle,\n        precision = 6,\n        interpolate;\n\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\n          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\n          ring = [];\n      interpolate(null, null, 1, {\n        point: function point(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n    }\n\n    circle.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n\n    circle.angle = function (x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n\n    circle.precision = function (_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n\n    return circle.angle(90);\n  };\n\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius),\n        sr = Math.sin(radius);\n    return function (from, to, direction, listener) {\n      var step = direction * precision;\n\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n      }\n    };\n  }\n\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n\n  d3.geo.distance = function (a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians,\n        φ0 = a[1] * d3_radians,\n        φ1 = b[1] * d3_radians,\n        sinΔλ = Math.sin(Δλ),\n        cosΔλ = Math.cos(Δλ),\n        sinφ0 = Math.sin(φ0),\n        cosφ0 = Math.cos(φ0),\n        sinφ1 = Math.sin(φ1),\n        cosφ1 = Math.cos(φ1),\n        t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n\n  d3.geo.graticule = function () {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n\n    graticule.majorExtent = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.minorExtent = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n\n    graticule.majorStep = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.minorStep = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n  };\n\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_source(d) {\n    return d.source;\n  }\n\n  function d3_target(d) {\n    return d.target;\n  }\n\n  d3.geo.greatArc = function () {\n    var source = d3_source,\n        source_,\n        target = d3_target,\n        target_;\n\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n      };\n    }\n\n    greatArc.distance = function () {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n\n    greatArc.source = function (_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.target = function (_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.precision = function () {\n      return arguments.length ? greatArc : 0;\n    };\n\n    return greatArc;\n  };\n\n  d3.geo.interpolate = function (source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0),\n        sy0 = Math.sin(y0),\n        cy1 = Math.cos(y1),\n        sy1 = Math.sin(y1),\n        kx0 = cy0 * Math.cos(x0),\n        ky0 = cy0 * Math.sin(x0),\n        kx1 = cy1 * Math.cos(x1),\n        ky1 = cy1 * Math.sin(x1),\n        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),\n        k = 1 / Math.sin(d);\n    var interpolate = d ? function (t) {\n      var B = Math.sin(t *= d) * k,\n          A = Math.sin(d - t) * k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n    } : function () {\n      return [x0 * d3_degrees, y0 * d3_degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  d3.geo.length = function (object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n\n    d3_geo_length.point = function (λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n\n    d3_geo_length.lineEnd = function () {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians),\n          cosφ = Math.cos(φ),\n          t = abs((λ *= d3_radians) - λ0),\n          cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ),\n          cosφ = Math.cos(φ),\n          k = scale(cosλ * cosφ);\n      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n    }\n\n    azimuthal.invert = function (x, y) {\n      var ρ = Math.sqrt(x * x + y * y),\n          c = angle(ρ),\n          sinc = Math.sin(c),\n          cosc = Math.cos(c);\n      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n    };\n\n    return azimuthal;\n  }\n\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function (ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function () {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function () {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        t = function t(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    },\n        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),\n        F = cosφ0 * Math.pow(t(φ0), n) / n;\n\n    if (!n) return d3_geo_mercator;\n\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n\n      var ρ = F / Math.pow(t(φ), n);\n      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = F - y,\n          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicConformal = function () {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),\n        G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = G - y;\n      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEquidistant = function () {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function () {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n\n  function d3_geo_mercator(λ, φ) {\n    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n  }\n\n  d3_geo_mercator.invert = function (x, y) {\n    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n  };\n\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function () {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.translate = function () {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.clipExtent = function (_) {\n      var v = clipExtent.apply(m, arguments);\n\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(),\n              t = translate();\n          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n\n      return v;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  (d3.geo.mercator = function () {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function () {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function () {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function (ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function () {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n\n  function d3_geo_transverseMercator(λ, φ) {\n    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n  }\n\n  d3_geo_transverseMercator.invert = function (x, y) {\n    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n  };\n\n  (d3.geo.transverseMercator = function () {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),\n        center = projection.center,\n        rotate = projection.rotate;\n\n    projection.center = function (_) {\n      return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    projection.rotate = function (_) {\n      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n\n  d3.geom.hull = function (vertices) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x),\n          fy = d3_functor(y),\n          i,\n          n = data.length,\n          points = [],\n          flippedPoints = [];\n\n      for (i = 0; i < n; i++) {\n        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n      }\n\n      points.sort(d3_geom_hullOrder);\n\n      for (i = 0; i < n; i++) {\n        flippedPoints.push([points[i][0], -points[i][1]]);\n      }\n\n      var upper = d3_geom_hullUpper(points),\n          lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0],\n          skipRight = lower[lower.length - 1] === upper[upper.length - 1],\n          polygon = [];\n\n      for (i = upper.length - 1; i >= 0; --i) {\n        polygon.push(data[points[upper[i]][2]]);\n      }\n\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) {\n        polygon.push(data[points[lower[i]][2]]);\n      }\n\n      return polygon;\n    }\n\n    hull.x = function (_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n\n    hull.y = function (_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n\n    return hull;\n  };\n\n  function d3_geom_hullUpper(points) {\n    var n = points.length,\n        hull = [0, 1],\n        hs = 2;\n\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {\n        --hs;\n      }\n\n      hull[hs++] = i;\n    }\n\n    return hull.slice(0, hs);\n  }\n\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  d3.geom.polygon = function (coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\n  d3_geom_polygonPrototype.area = function () {\n    var i = -1,\n        n = this.length,\n        a,\n        b = this[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area * .5;\n  };\n\n  d3_geom_polygonPrototype.centroid = function (k) {\n    var i = -1,\n        n = this.length,\n        x = 0,\n        y = 0,\n        a,\n        b = this[n - 1],\n        c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return [x * k, y * k];\n  };\n\n  d3_geom_polygonPrototype.clip = function (subject) {\n    var input,\n        closed = d3_geom_polygonClosed(subject),\n        i = -1,\n        n = this.length - d3_geom_polygonClosed(this),\n        j,\n        m,\n        a = this[n - 1],\n        b,\n        c,\n        d;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  };\n\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  }\n\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n\n  var d3_geom_voronoiEdges,\n      d3_geom_voronoiCells,\n      d3_geom_voronoiBeaches,\n      d3_geom_voronoiBeachPool = [],\n      d3_geom_voronoiFirstCircle,\n      d3_geom_voronoiCircles,\n      d3_geom_voronoiCirclePool = [];\n\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = {\n      x: x,\n      y: y\n    },\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length,\n        iArc;\n\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x,\n        directrix = site.y,\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = d3_geom_voronoiBeaches._;\n\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L;else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site,\n        ax = lSite.x,\n        ay = lSite.y,\n        bx = site.x - ax,\n        by = site.y - ay,\n        rSite = rArc.site,\n        cx = rSite.x - ax,\n        cy = rSite.y - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site.x,\n        rfocy = site.y,\n        pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x,\n        lfocy = site.y,\n        plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n\n  d3_geom_voronoiCell.prototype.prepare = function () {\n    var halfEdges = this.edges,\n        iHalfEdge = halfEdges.length,\n        edge;\n\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        x2,\n        y2,\n        x3,\n        y3,\n        cells = d3_geom_voronoiCells,\n        iCell = cells.length,\n        cell,\n        iHalfEdge,\n        halfEdges,\n        nHalfEdges,\n        start,\n        end;\n\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x,\n        by = cSite.y,\n        ax = lSite.x - bx,\n        ay = lSite.y - by,\n        cx = rSite.x - bx,\n        cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d,\n        cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null,\n        node = d3_geom_voronoiCircles._;\n\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L;else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R;else {\n          before = node;\n          break;\n        }\n      }\n    }\n\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges,\n        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),\n        i = edges.length,\n        e;\n\n    while (i--) {\n      e = edges[i];\n\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a,\n        x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        lSite = edge.l,\n        rSite = edge.r,\n        lx = lSite.x,\n        ly = lSite.y,\n        rx = rSite.x,\n        ry = rSite.y,\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        };else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        };else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          };else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          };else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a,\n        vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function start() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function end() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function insert(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n\n        if (after.R) {\n          after = after.R;\n\n          while (after.L) {\n            after = after.L;\n          }\n\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n\n      while (parent && parent.C) {\n        grandpa = parent.U;\n\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n\n        parent = after.U;\n      }\n\n      this._.C = false;\n    },\n    remove: function remove(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n\n      do {\n        if (node === this._) break;\n\n        if (node === parent.L) {\n          sibling = parent.R;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) {\n      node = node.L;\n    }\n\n    return node;\n  }\n\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),\n        x0,\n        y0,\n        circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n\n  d3.geom.voronoi = function (points) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        fx = x,\n        fy = y,\n        clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n\n    function voronoi(data) {\n      var polygons = new Array(data.length),\n          x0 = clipExtent[0][0],\n          y0 = clipExtent[0][1],\n          x1 = clipExtent[1][0],\n          y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n        var edges = cell.edges,\n            site = cell.site,\n            polygon = polygons[i] = edges.length ? edges.map(function (e) {\n          var s = e.start();\n          return [s.x, s.y];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n\n    function sites(data) {\n      return data.map(function (d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n\n    voronoi.links = function (data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n        return edge.l && edge.r;\n      }).map(function (edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n\n    voronoi.triangles = function (data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n        var site = cell.site,\n            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),\n            j = -1,\n            m = edges.length,\n            e0,\n            s0,\n            e1 = edges[m - 1].edge,\n            s1 = e1.l === site ? e1.r : e1.l;\n\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([data[i], data[s0.i], data[s1.i]]);\n          }\n        }\n      });\n      return triangles;\n    };\n\n    voronoi.x = function (_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n\n    voronoi.y = function (_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n\n    voronoi.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n\n    voronoi.size = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [[0, 0], _]);\n    };\n\n    return voronoi;\n  };\n\n  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n\n  d3.geom.delaunay = function (vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n\n  d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        compat;\n\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n\n      return quadtree(points);\n    }\n\n    function quadtree(data) {\n      var d,\n          fx = d3_functor(x),\n          fy = d3_functor(y),\n          xs,\n          ys,\n          i,\n          n,\n          x1_,\n          y1_,\n          x2_,\n          y2_;\n\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i),\n              y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n\n      var dx = x2_ - x1_,\n          dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;\n\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n\n        if (n.leaf) {\n          var nx = n.x,\n              ny = n.y;\n\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5,\n            ym = (y1 + y2) * .5,\n            right = x >= xm,\n            below = y >= ym,\n            i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm;else x2 = xm;\n        if (below) y1 = ym;else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n\n      var root = d3_geom_quadtreeNode();\n\n      root.add = function (d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n\n      root.visit = function (f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n\n      root.find = function (point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n\n      i = -1;\n\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n\n        --i;\n      } else data.forEach(root.add);\n\n      xs = ys = data = d = null;\n      return root;\n    }\n\n    quadtree.x = function (_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n\n    quadtree.y = function (_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n\n    quadtree.extent = function (_) {\n      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n      return quadtree;\n    };\n\n    quadtree.size = function (_) {\n      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n\n    return quadtree;\n  };\n\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5,\n          sy = (y1 + y2) * .5,\n          children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity,\n        closestPoint;\n\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n      if (point = node.point) {\n        var point,\n            dx = x - node.x,\n            dy = y - node.y,\n            distance2 = dx * dx + dy * dy;\n\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n\n      var children = node.nodes,\n          xm = (x1 + x2) * .5,\n          ym = (y1 + y2) * .5,\n          right = x >= xm,\n          below = y >= ym;\n\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n          case 0:\n            find(node, x1, y1, xm, ym);\n            break;\n\n          case 1:\n            find(node, xm, y1, x2, ym);\n            break;\n\n          case 2:\n            find(node, x1, ym, xm, y2);\n            break;\n\n          case 3:\n            find(node, xm, ym, x2, y2);\n            break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n\n    return closestPoint;\n  }\n\n  d3.interpolateRgb = d3_interpolateRgb;\n\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function (t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n\n  d3.interpolateObject = d3_interpolateObject;\n\n  function d3_interpolateObject(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  d3.interpolateNumber = d3_interpolateNumber;\n\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function (t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n\n  d3.interpolateString = d3_interpolateString;\n\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,\n        am,\n        bm,\n        bs,\n        i = -1,\n        s = [],\n        q = [];\n    a = a + \"\", b = b + \"\";\n\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs;else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm;else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs;else s[++i] = bs;\n    }\n\n    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {\n      return b(t) + \"\";\n    }) : function () {\n      return b;\n    } : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length,\n        f;\n\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {\n      ;\n    }\n\n    return f;\n  }\n\n  d3.interpolators = [function (a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  }];\n  d3.interpolateArray = d3_interpolateArray;\n\n  function d3_interpolateArray(a, b) {\n    var x = [],\n        c = [],\n        na = a.length,\n        nb = b.length,\n        n0 = Math.min(a.length, b.length),\n        i;\n\n    for (i = 0; i < n0; ++i) {\n      x.push(d3_interpolate(a[i], b[i]));\n    }\n\n    for (; i < na; ++i) {\n      c[i] = a[i];\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < n0; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  var d3_ease_default = function d3_ease_default() {\n    return d3_identity;\n  };\n\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function quad() {\n      return d3_ease_quad;\n    },\n    cubic: function cubic() {\n      return d3_ease_cubic;\n    },\n    sin: function sin() {\n      return d3_ease_sin;\n    },\n    exp: function exp() {\n      return d3_ease_exp;\n    },\n    circle: function circle() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function bounce() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function outIn(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n\n  d3.ease = function (name) {\n    var i = name.indexOf(\"-\"),\n        t = i >= 0 ? name.slice(0, i) : name,\n        m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n\n  function d3_ease_clamp(f) {\n    return function (t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n\n  function d3_ease_reverse(f) {\n    return function (t) {\n      return 1 - f(1 - t);\n    };\n  }\n\n  function d3_ease_reflect(f) {\n    return function (t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t,\n        t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n\n  function d3_ease_poly(e) {\n    return function (t) {\n      return Math.pow(t, e);\n    };\n  }\n\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;\n    return function (t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n\n  d3.interpolateHcl = d3_interpolateHcl;\n\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h,\n        ac = a.c,\n        al = a.l,\n        bh = b.h - ah,\n        bc = b.c - ac,\n        bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateHsl = d3_interpolateHsl;\n\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h,\n        as = a.s,\n        al = a.l,\n        bh = b.h - ah,\n        bs = b.s - as,\n        bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateLab = d3_interpolateLab;\n\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function (t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n\n  d3.interpolateRound = d3_interpolateRound;\n\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  d3.transform = function (string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function (string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n\n  function d3_transform(m) {\n    var r0 = [m.a, m.b],\n        r1 = [m.c, m.d],\n        kx = d3_transformNormalize(r0),\n        kz = d3_transformDot(r0, r1),\n        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [m.e, m.f];\n    this.scale = [kx, ky];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n\n  d3_transform.prototype.toString = function () {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n\n    return k;\n  }\n\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n\n  function d3_interpolateTransform(a, b) {\n    var s = [],\n        q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  }\n\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return (x - a) / b;\n    };\n  }\n\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n\n  d3.layout = {};\n\n  d3.layout.bundle = function () {\n    return function (links) {\n      var paths = [],\n          i = -1,\n          n = links.length;\n\n      while (++i < n) {\n        paths.push(d3_layout_bundlePath(links[i]));\n      }\n\n      return paths;\n    };\n  };\n\n  function d3_layout_bundlePath(link) {\n    var start = link.source,\n        end = link.target,\n        lca = d3_layout_bundleLeastCommonAncestor(start, end),\n        points = [start];\n\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n\n    var k = points.length;\n\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return points;\n  }\n\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [],\n        parent = node.parent;\n\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n\n    ancestors.push(node);\n    return ancestors;\n  }\n\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a),\n        bNodes = d3_layout_bundleAncestors(b),\n        aNode = aNodes.pop(),\n        bNode = bNodes.pop(),\n        sharedNode = null;\n\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n\n    return sharedNode;\n  }\n\n  d3.layout.chord = function () {\n    var chord = {},\n        chords,\n        groups,\n        matrix,\n        n,\n        padding = 0,\n        sortGroups,\n        sortSubgroups,\n        sortChords;\n\n    function relayout() {\n      var subgroups = {},\n          groupSums = [],\n          groupIndex = d3.range(n),\n          subgroupIndex = [],\n          k,\n          x,\n          x0,\n          i,\n          j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n\n      while (++i < n) {\n        x = 0, j = -1;\n\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n\n      while (++i < n) {\n        x0 = x, j = -1;\n\n        while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        j = i - 1;\n\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j],\n              target = subgroups[j + \"-\" + i];\n\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) resort();\n    }\n\n    function resort() {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n\n    chord.matrix = function (x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.padding = function (x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortGroups = function (x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n\n    chord.sortChords = function (x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n\n    chord.chords = function () {\n      if (!chords) relayout();\n      return chords;\n    };\n\n    chord.groups = function () {\n      if (!groups) relayout();\n      return groups;\n    };\n\n    return chord;\n  };\n\n  d3.layout.force = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        timer,\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = .9,\n        linkDistance = d3_layout_forceLinkDistance,\n        linkStrength = d3_layout_forceLinkStrength,\n        charge = -30,\n        chargeDistance2 = d3_layout_forceChargeDistance2,\n        gravity = .1,\n        theta2 = .64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x,\n              dy = quad.cy - node.y,\n              dw = x2 - x1,\n              dn = dx * dx + dy * dy;\n\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n          m = links.length,\n          q,\n          i,\n          o,\n          s,\n          t,\n          l,\n          k,\n          x,\n          y;\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        o = nodes[i];\n\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.distance = force.linkDistance;\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n          n = nodes.length,\n          m = links.length,\n          w = size[0],\n          h = size[1],\n          neighbors,\n          o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) {\n        distances[i] = +linkDistance.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        distances[i] = linkDistance;\n      }\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) {\n        strengths[i] = +linkStrength.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        strengths[i] = linkStrength;\n      }\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) {\n        charges[i] = +charge.call(this, nodes[i], i);\n      } else for (i = 0; i < n; ++i) {\n        charges[i] = charge;\n      }\n\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n            j = -1,\n            l = candidates.length,\n            x;\n\n        while (++j < l) {\n          if (!isNaN(x = candidates[j][dimension])) return x;\n        }\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0,\n        cy = 0;\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n          n = nodes.length,\n          i = -1,\n          c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  var d3_layout_forceLinkDistance = 20,\n      d3_layout_forceLinkStrength = 1,\n      d3_layout_forceChargeDistance2 = Infinity;\n\n  d3.layout.hierarchy = function () {\n    var sort = d3_layout_hierarchySort,\n        children = d3_layout_hierarchyChildren,\n        value = d3_layout_hierarchyValue;\n\n    function hierarchy(root) {\n      var stack = [root],\n          nodes = [],\n          node;\n      root.depth = 0;\n\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n\n    hierarchy.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n\n    hierarchy.children = function (x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n\n    hierarchy.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n\n    hierarchy.revalue = function (root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function (node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function (node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n\n      return root;\n    };\n\n    return hierarchy;\n  };\n\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [node];\n\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n\n        while (--n >= 0) {\n          nodes.push(children[n]);\n        }\n      }\n    }\n  }\n\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [node],\n        nodes2 = [];\n\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1,\n            n,\n            children;\n\n        while (++i < n) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function (parent) {\n      return (parent.children || []).map(function (child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n\n  d3.layout.partition = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        size = [1, 1];\n\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n,\n            c,\n            d;\n        dx = node.value ? dx / node.value : 0;\n\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n\n    function depth(node) {\n      var children = node.children,\n          d = 0;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n;\n\n        while (++i < n) {\n          d = Math.max(d, depth(children[i]));\n        }\n      }\n\n      return 1 + d;\n    }\n\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n\n    partition.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n\n  d3.layout.pie = function () {\n    var value = Number,\n        sort = d3_layout_pieSortByValue,\n        startAngle = 0,\n        endAngle = τ,\n        padAngle = 0;\n\n    function pie(data) {\n      var n = data.length,\n          values = data.map(function (d, i) {\n        return +value.call(pie, d, i);\n      }),\n          a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle),\n          da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a,\n          p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)),\n          pa = p * (da < 0 ? -1 : 1),\n          sum = d3.sum(values),\n          k = sum ? (da - n * pa) / sum : 0,\n          index = d3.range(n),\n          arcs = [],\n          v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n        return values[j] - values[i];\n      } : function (i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function (i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n\n    pie.value = function (_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n\n    pie.sort = function (_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n\n    pie.startAngle = function (_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n\n    pie.endAngle = function (_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n\n    pie.padAngle = function (_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n\n    return pie;\n  };\n\n  var d3_layout_pieSortByValue = {};\n\n  d3.layout.stack = function () {\n    var values = d3_identity,\n        order = d3_layout_stackOrderDefault,\n        offset = d3_layout_stackOffsetZero,\n        out = d3_layout_stackOut,\n        x = d3_layout_stackX,\n        y = d3_layout_stackY;\n\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function (d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function (d) {\n        return d.map(function (v, i) {\n          return [x.call(stack, v, i), y.call(stack, v, i)];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length,\n          n,\n          i,\n          j,\n          o;\n\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n\n      return data;\n    }\n\n    stack.values = function (x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n\n    stack.order = function (x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n\n    stack.offset = function (x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n\n    stack.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n\n    stack.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n\n    stack.out = function (z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n\n    return stack;\n  };\n\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function insideOut(data) {\n      var n = data.length,\n          i,\n          j,\n          max = data.map(d3_layout_stackMaxIndex),\n          sums = data.map(d3_layout_stackReduceSum),\n          index = d3.range(n).sort(function (a, b) {\n        return max[a] - max[b];\n      }),\n          top = 0,\n          bottom = 0,\n          tops = [],\n          bottoms = [];\n\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function reverse(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function silhouette(data) {\n      var n = data.length,\n          m = data[0].length,\n          sums = [],\n          max = 0,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o > max) max = o;\n        sums.push(o);\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n\n      return y0;\n    },\n    wiggle: function wiggle(data) {\n      var n = data.length,\n          x = data[0],\n          m = x.length,\n          i,\n          j,\n          k,\n          s1,\n          s2,\n          s3,\n          dx,\n          o,\n          o0,\n          y0 = [];\n      y0[0] = o = o0 = 0;\n\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) {\n          s1 += data[i][j][1];\n        }\n\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n\n          s2 += s3 * data[i][j][1];\n        }\n\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] -= o0;\n      }\n\n      return y0;\n    },\n    expand: function expand(data) {\n      var n = data.length,\n          m = data[0].length,\n          k = 1 / n,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o) for (i = 0; i < n; i++) {\n          data[i][j][1] /= o;\n        } else for (i = 0; i < n; i++) {\n          data[i][j][1] = k;\n        }\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = 0;\n      }\n\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1,\n        m = data[0].length,\n        y0 = [];\n\n    while (++j < m) {\n      y0[j] = 0;\n    }\n\n    return y0;\n  }\n\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1,\n        j = 0,\n        v = array[0][1],\n        k,\n        n = array.length;\n\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n\n    return j;\n  }\n\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n\n  d3.layout.histogram = function () {\n    var frequency = true,\n        valuer = Number,\n        ranger = d3_layout_histogramRange,\n        binner = d3_layout_histogramBinSturges;\n\n    function histogram(data, i) {\n      var bins = [],\n          values = data.map(valuer, this),\n          range = ranger.call(this, values, i),\n          thresholds = binner.call(this, range, values, i),\n          bin,\n          i = -1,\n          n = values.length,\n          m = thresholds.length - 1,\n          k = frequency ? 1 : 1 / n,\n          x;\n\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n\n      if (m > 0) {\n        i = -1;\n\n        while (++i < n) {\n          x = values[i];\n\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n\n    histogram.range = function (x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n\n    histogram.bins = function (x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function (range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n\n    histogram.frequency = function (x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n\n    return histogram;\n  };\n\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1,\n        b = +range[0],\n        m = (range[1] - b) / n,\n        f = [];\n\n    while (++x <= n) {\n      f[x] = m * x + b;\n    }\n\n    return f;\n  }\n\n  function d3_layout_histogramRange(values) {\n    return [d3.min(values), d3.max(values)];\n  }\n\n  d3.layout.pack = function () {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),\n        padding = 0,\n        size = [1, 1],\n        radius;\n\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          w = size[0],\n          h = size[1],\n          r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function (d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r -= dr;\n        });\n      }\n\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n\n    pack.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n\n    pack.radius = function (_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n\n    pack.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes,\n        xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity,\n        a,\n        b,\n        c,\n        i,\n        j,\n        k,\n        n;\n\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0,\n              s1 = 1,\n              s2 = 1;\n\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n\n    var cx = (xMin + xMax) / 2,\n        cy = (yMin + yMax) / 2,\n        cr = 0;\n\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n\n    if (children) {\n      var i = -1,\n          n = children.length;\n\n      while (++i < n) {\n        d3_layout_packTransform(children[i], x, y, k);\n      }\n    }\n  }\n\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n\n    if (db && (dx || dy)) {\n      var da = b.r + c.r,\n          dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n\n  d3.layout.tree = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = null;\n\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root0 = nodes[0],\n          root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {\n        var left = root0,\n            right = root0,\n            bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x,\n            kx = size[0] / (right.x + separation(right, left) / 2 + tx),\n            ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [root0]\n      },\n          queue = [root1],\n          node1;\n\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n\n      return root1.children[0];\n    }\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n\n    tree.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n\n    tree.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n\n    tree.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n\n  function d3_layout_treeRight(v) {\n    var children = v.children,\n        n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  function d3_layout_treeShift(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  d3.layout.cluster = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = false;\n\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          previousNode,\n          x = 0;\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var children = node.children;\n\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root),\n          right = d3_layout_clusterRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n\n    cluster.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n\n    cluster.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n\n    cluster.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function (child) {\n      return child.y;\n    });\n  }\n\n  function d3_layout_clusterX(children) {\n    return children.reduce(function (x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n\n  function d3_layout_clusterRight(node) {\n    var children = node.children,\n        n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n\n  d3.layout.treemap = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        round = Math.round,\n        size = [1, 1],\n        padding = null,\n        pad = d3_layout_treemapPadNull,\n        sticky = false,\n        stickies,\n        mode = \"squarify\",\n        ratio = .5 * (1 + Math.sqrt(5));\n\n    function scale(children, k) {\n      var i = -1,\n          n = children.length,\n          child,\n          area;\n\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n\n    function squarify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            row = [],\n            remaining = children.slice(),\n            child,\n            best = Infinity,\n            score,\n            u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),\n            n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n\n        children.forEach(squarify);\n      }\n    }\n\n    function stickify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            remaining = children.slice(),\n            child,\n            row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n\n        children.forEach(stickify);\n      }\n    }\n\n    function worst(row, u) {\n      var s = row.area,\n          r,\n          rmax = 0,\n          rmin = Infinity,\n          i = -1,\n          n = row.length;\n\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n\n    function position(row, u, rect, flush) {\n      var i = -1,\n          n = row.length,\n          x = rect.x,\n          y = rect.y,\n          v = u ? round(row.area / u) : 0,\n          o;\n\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d),\n          root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1];else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([root], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n\n    treemap.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n\n    treemap.padding = function (x) {\n      if (!arguments.length) return padding;\n\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n      }\n\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x], padConstant) : padConstant;\n      return treemap;\n    };\n\n    treemap.round = function (x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n\n    treemap.sticky = function (x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n\n    treemap.ratio = function (x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n\n    treemap.mode = function (x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3],\n        y = node.y + padding[0],\n        dx = node.dx - padding[1] - padding[3],\n        dy = node.dy - padding[0] - padding[2];\n\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  d3.random = {\n    normal: function normal(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function () {\n        var x, y, r;\n\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function logNormal() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function () {\n        return Math.exp(random());\n      };\n    },\n    bates: function bates(m) {\n      var random = d3.random.irwinHall(m);\n      return function () {\n        return random() / m;\n      };\n    },\n    irwinHall: function irwinHall(m) {\n      return function () {\n        for (var s = 0, j = 0; j < m; j++) {\n          s += Math.random();\n        }\n\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n\n  function d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  }\n\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]),\n        i = interpolate(range[0], range[1]);\n    return function (x) {\n      return i(u(x));\n    };\n  }\n\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        dx;\n\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function floor(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function ceil(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [],\n        i = [],\n        j = 0,\n        k = Math.min(domain.length, range.length) - 1;\n\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n\n    return function (x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n\n  d3.scale.linear = function () {\n    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n  };\n\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,\n          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n\n    function scale(x) {\n      return output(x);\n    }\n\n    scale.invert = function (y) {\n      return input(y);\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.rangeRound = function (x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n\n    scale.clamp = function (x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n\n    scale.interpolate = function (x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n\n    scale.copy = function () {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n\n    return rescale();\n  }\n\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain),\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step;\n    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function (d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n\n    return d3.format(format);\n  }\n\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n\n  d3.scale.log = function () {\n    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n  };\n\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n\n    function scale(x) {\n      return linear(log(x));\n    }\n\n    scale.invert = function (x) {\n      return pow(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n\n    scale.base = function (_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n\n    scale.nice = function () {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n\n    scale.ticks = function () {\n      var extent = d3_scaleExtent(domain),\n          ticks = [],\n          u = extent[0],\n          v = extent[1],\n          i = Math.floor(log(u)),\n          j = Math.ceil(log(v)),\n          n = base % 1 ? 2 : base;\n\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (; i < j; i++) {\n            for (var k = 1; k < n; k++) {\n              ticks.push(pow(i) * k);\n            }\n          }\n\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n\n          for (; i++ < j;) {\n            for (var k = n - 1; k > 0; k--) {\n              ticks.push(pow(i) * k);\n            }\n          }\n        }\n\n        for (i = 0; ticks[i] < u; i++) {}\n\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\n        ticks = ticks.slice(i, j);\n      }\n\n      return ticks;\n    };\n\n    scale.tickFormat = function (n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function (d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n\n    scale.copy = function () {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  var d3_scale_logFormat = d3.format(\".0e\"),\n      d3_scale_logNiceNegative = {\n    floor: function floor(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function ceil(x) {\n      return -Math.floor(-x);\n    }\n  };\n\n  d3.scale.pow = function () {\n    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n  };\n\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent),\n        powb = d3_scale_powPow(1 / exponent);\n\n    function scale(x) {\n      return linear(powp(x));\n    }\n\n    scale.invert = function (x) {\n      return powb(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n\n    scale.exponent = function (x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n\n    scale.copy = function () {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_scale_powPow(e) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n\n  d3.scale.sqrt = function () {\n    return d3.scale.pow().exponent(.5);\n  };\n\n  d3.scale.ordinal = function () {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [[]]\n    });\n  };\n\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n\n    function steps(start, step) {\n      return d3.range(domain.length).map(function (i) {\n        return start + step * i;\n      });\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1,\n          n = x.length,\n          xi;\n\n      while (++i < n) {\n        if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      }\n\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangePoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundPoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBand = function () {\n      return rangeBand;\n    };\n\n    scale.rangeExtent = function () {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n\n    scale.copy = function () {\n      return d3_scale_ordinal(domain, ranger);\n    };\n\n    return scale.domain(domain);\n  }\n\n  d3.scale.category10 = function () {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n\n  d3.scale.category20 = function () {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n\n  d3.scale.category20b = function () {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n\n  d3.scale.category20c = function () {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n\n  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n\n  d3.scale.quantile = function () {\n    return d3_scale_quantile([], []);\n  };\n\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n\n    function rescale() {\n      var k = 0,\n          q = range.length;\n      thresholds = [];\n\n      while (++k < q) {\n        thresholds[k - 1] = d3.quantile(domain, k / q);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.quantiles = function () {\n      return thresholds;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantile(domain, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.quantize = function () {\n    return d3_scale_quantize(0, 1, [0, 1]);\n  };\n\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return [x0, x1];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [y, y + 1 / kx];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantize(x0, x1, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.threshold = function () {\n    return d3_scale_threshold([.5], [0, 1]);\n  };\n\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n\n    scale.range = function (_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return [domain[y - 1], domain[y]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_threshold(domain, range);\n    };\n\n    return scale;\n  }\n\n  d3.scale.identity = function () {\n    return d3_scale_identity([0, 1]);\n  };\n\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n\n    identity.invert = identity;\n\n    identity.domain = identity.range = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n\n    identity.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    identity.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    identity.copy = function () {\n      return d3_scale_identity(domain);\n    };\n\n    return identity;\n  }\n\n  d3.svg = {};\n\n  function d3_zero() {\n    return 0;\n  }\n\n  d3.svg.arc = function () {\n    var innerRadius = d3_svg_arcInnerRadius,\n        outerRadius = d3_svg_arcOuterRadius,\n        cornerRadius = d3_zero,\n        padRadius = d3_svg_arcAuto,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle,\n        padAngle = d3_svg_arcPadAngle;\n\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)),\n          r1 = Math.max(0, +outerRadius.apply(this, arguments)),\n          a0 = startAngle.apply(this, arguments) - halfπ,\n          a1 = endAngle.apply(this, arguments) - halfπ,\n          da = Math.abs(a1 - a0),\n          cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc,\n          cr,\n          rp,\n          ap,\n          p0 = 0,\n          p1 = 0,\n          x0,\n          y0,\n          x1,\n          y1,\n          x2,\n          y2,\n          x3,\n          y3,\n          path = [];\n\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc,\n            rc0 = rc;\n\n        if (da < π) {\n          var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),\n              ax = x0 - oc[0],\n              ay = y0 - oc[1],\n              bx = x1 - oc[0],\n              by = y1 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),\n              t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);\n\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),\n              t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);\n\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n\n    arc.innerRadius = function (v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.outerRadius = function (v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.cornerRadius = function (v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.padRadius = function (v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n\n    arc.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.padAngle = function (v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.centroid = function () {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    return arc;\n  };\n\n  var d3_svg_arcAuto = \"auto\";\n\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0],\n        y01 = p0[1] - p1[1],\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x1 = p0[0] + ox,\n        y1 = p0[1] + oy,\n        x2 = p1[0] + ox,\n        y2 = p1[1] + oy,\n        x3 = (x1 + x2) / 2,\n        y3 = (y1 + y2) / 2,\n        dx = x2 - x1,\n        dy = y2 - y1,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x1 * y2 - x2 * y1,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x3,\n        dy0 = cy0 - y3,\n        dx1 = cx1 - x3,\n        dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];\n  }\n\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        tension = .7;\n\n    function line(data) {\n      var segments = [],\n          points = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx = d3_functor(x),\n          fy = d3_functor(y);\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    line.x = function (_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n\n    line.y = function (_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n\n    line.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n\n    line.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n\n    line.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n\n    return line;\n  }\n\n  d3.svg.line = function () {\n    return d3_svg_line(d3_identity);\n  };\n\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function (key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n\n  function d3_svg_lineStep(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    }\n\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepBefore(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepAfter(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n  }\n\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n\n    var quad = points.length != tangents.length,\n        path = \"\",\n        p0 = points[0],\n        p = points[1],\n        t0 = tangents[0],\n        t = t0,\n        pi = 1;\n\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n\n    return path;\n  }\n\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [],\n        a = (1 - tension) / 2,\n        p0,\n        p1 = points[0],\n        p2 = points[1],\n        i = 1,\n        n = points.length;\n\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1,\n        n = points.length,\n        pi = points[0],\n        x0 = pi[0],\n        y0 = pi[1],\n        px = [x0, x0, x0, (pi = points[1])[0]],\n        py = [y0, y0, y0, pi[1]],\n        path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    points.push(points[n - 1]);\n\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [],\n        i = -1,\n        n = points.length,\n        pi,\n        px = [0],\n        py = [0];\n\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisClosed(points) {\n    var path,\n        i = -1,\n        n = points.length,\n        m = n + 4,\n        pi,\n        px = [],\n        py = [];\n\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    --i;\n\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n\n    if (n) {\n      var x0 = points[0][0],\n          y0 = points[0][1],\n          dx = points[n][0] - x0,\n          dy = points[n][1] - y0,\n          i = -1,\n          p,\n          t;\n\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n\n    return d3_svg_lineBasis(points);\n  }\n\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n\n  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],\n      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],\n      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0,\n        j = points.length - 1,\n        m = [],\n        p0 = points[0],\n        p1 = points[1],\n        d = m[0] = d3_svg_lineSlope(p0, p1);\n\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n\n    m[i] = d;\n    return m;\n  }\n\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [],\n        d,\n        a,\n        b,\n        s,\n        m = d3_svg_lineFiniteDifferences(points),\n        i = -1,\n        j = points.length - 1;\n\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n\n    i = -1;\n\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([s || 0, m[i] * s || 0]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n\n  d3.svg.line.radial = function () {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n\n  function d3_svg_lineRadial(points) {\n    var point,\n        i = -1,\n        n = points.length,\n        r,\n        a;\n\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n\n    return points;\n  }\n\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX,\n        x1 = d3_geom_pointX,\n        y0 = 0,\n        y1 = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        interpolateReverse = interpolate,\n        L = \"L\",\n        tension = .7;\n\n    function area(data) {\n      var segments = [],\n          points0 = [],\n          points1 = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx0 = d3_functor(x0),\n          fy0 = d3_functor(y0),\n          fx1 = x0 === x1 ? function () {\n        return x;\n      } : d3_functor(x1),\n          fy1 = y0 === y1 ? function () {\n        return y;\n      } : d3_functor(y1),\n          x,\n          y;\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    area.x = function (_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n\n    area.x0 = function (_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n\n    area.x1 = function (_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n\n    area.y = function (_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n\n    area.y0 = function (_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n\n    area.y1 = function (_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n\n    area.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n\n    area.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n\n    area.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n\n    return area;\n  }\n\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\n  d3.svg.area = function () {\n    return d3_svg_area(d3_identity);\n  };\n\n  d3.svg.area.radial = function () {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n\n  d3.svg.chord = function () {\n    var source = d3_source,\n        target = d3_target,\n        radius = d3_svg_chordRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i),\n          t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i),\n          r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) - halfπ,\n          a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [r * Math.cos(a0), r * Math.sin(a0)],\n        p1: [r * Math.cos(a1), r * Math.sin(a1)]\n      };\n    }\n\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n\n    chord.radius = function (v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n\n    chord.source = function (v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n\n    chord.target = function (v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n\n    chord.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n\n    chord.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n\n    return chord;\n  };\n\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n\n  d3.svg.diagonal = function () {\n    var source = d3_source,\n        target = d3_target,\n        projection = d3_svg_diagonalProjection;\n\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i),\n          p3 = target.call(this, d, i),\n          m = (p0.y + p3.y) / 2,\n          p = [p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n\n    diagonal.source = function (x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.target = function (x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.projection = function (x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalProjection(d) {\n    return [d.x, d.y];\n  }\n\n  d3.svg.diagonal.radial = function () {\n    var diagonal = d3.svg.diagonal(),\n        projection = d3_svg_diagonalProjection,\n        projection_ = diagonal.projection;\n\n    diagonal.projection = function (x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function () {\n      var d = projection.apply(this, arguments),\n          r = d[0],\n          a = d[1] - halfπ;\n      return [r * Math.cos(a), r * Math.sin(a)];\n    };\n  }\n\n  d3.svg.symbol = function () {\n    var type = d3_svg_symbolType,\n        size = d3_svg_symbolSize;\n\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n\n    symbol.type = function (x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n\n    symbol.size = function (x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n\n    return symbol;\n  };\n\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function cross(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function diamond(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),\n          rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function square(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function triangleDown(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function triangleUp(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3),\n      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n  d3_selectionPrototype.transition = function (name) {\n    var id = d3_transitionInheritId || ++d3_transitionId,\n        ns = d3_transitionNamespace(name),\n        subgroups = [],\n        subgroup,\n        node,\n        transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_selectionPrototype.interrupt = function (name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\n  function d3_selection_interruptNS(ns) {\n    return function () {\n      var lock, activeId, active;\n\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId];else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n\n  var d3_transitionPrototype = [],\n      d3_transitionId = 0,\n      d3_transitionInheritId,\n      d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\n  d3.transition = function (selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n\n  d3.transition.prototype = d3_transitionPrototype;\n\n  d3_transitionPrototype.select = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnode,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.selectAll = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnodes,\n        node,\n        subnode,\n        transition;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n\n          for (var k = -1, o = subnodes.length; ++k < o;) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n\n  d3_transitionPrototype.tween = function (name, tween) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function (node) {\n      node[ns][id].tween.remove(name);\n    } : function (node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id,\n        ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function (node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n\n  d3_transitionPrototype.attr = function (nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) {\n        this.attr(value, nameNS[value]);\n      }\n\n      return this;\n    }\n\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\n        name = d3.ns.qualify(nameNS);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function () {\n        var a = this.getAttribute(name),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function () {\n        var a = this.getAttributeNS(name.space, name.local),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.attrTween = function (nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function (t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function (t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.style(priority, name[priority], value);\n        }\n\n        return this;\n      }\n\n      priority = \"\";\n    }\n\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function () {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name),\n            i;\n        return a !== b && (i = d3_interpolate(a, b), function (t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n\n  d3_transitionPrototype.styleTween = function (name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function (t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n\n    return this.tween(\"style.\" + name, styleTween);\n  };\n\n  d3_transitionPrototype.text = function (value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function () {\n      this.textContent = b;\n    };\n  }\n\n  d3_transitionPrototype.remove = function () {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function () {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n\n  d3_transitionPrototype.ease = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function (node) {\n      node[ns][id].ease = value;\n    });\n  };\n\n  d3_transitionPrototype.delay = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function (node) {\n      node[ns][id].delay = value;\n    }));\n  };\n\n  d3_transitionPrototype.duration = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function (node) {\n      node[ns][id].duration = value;\n    }));\n  };\n\n  d3_transitionPrototype.each = function (type, listener) {\n    var id = this.id,\n        ns = this.namespace;\n\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit,\n          inheritId = d3_transitionInheritId;\n\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function (node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function (node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n\n    return this;\n  };\n\n  d3_transitionPrototype.transition = function () {\n    var id0 = this.id,\n        id1 = ++d3_transitionId,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        group,\n        node,\n        transition;\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id1);\n  };\n\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }),\n        transition = lock[id],\n        time,\n        timer,\n        duration,\n        ease,\n        tweens;\n\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n\n    function start(elapsed) {\n      var activeId = lock.active,\n          active = lock[activeId];\n\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n\n      timer.c = tick;\n      d3_timer(function () {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function (key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed / duration,\n          e = ease(t),\n          n = tweens.length;\n\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id];else delete node[ns];\n        return 1;\n      }\n    }\n\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n\n  d3.svg.axis = function () {\n    var scale = d3.scale.linear(),\n        orient = d3_svg_axisDefaultOrient,\n        innerTickSize = 6,\n        outerTickSize = 6,\n        tickPadding = 3,\n        tickArguments_ = [10],\n        tickValues = null,\n        tickFormat_;\n\n    function axis(g) {\n      g.each(function () {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale,\n            scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,\n            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε),\n            tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(),\n            tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1),\n            tickSpacing = Math.max(innerTickSize, 0) + tickPadding,\n            tickTransform;\n        var range = d3_scaleRange(scale1),\n            path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"),\n            lineUpdate = tickUpdate.select(\"line\"),\n            text = tick.select(\"text\").text(tickFormat),\n            textEnter = tickEnter.select(\"text\"),\n            textUpdate = tickUpdate.select(\"text\"),\n            sign = orient === \"top\" || orient === \"left\" ? -1 : 1,\n            x1,\n            x2,\n            y1,\n            y2;\n\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n\n    axis.tickFormat = function (x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n\n    axis.tickSize = function (x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n\n    axis.innerTickSize = function (x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n\n    axis.outerTickSize = function (x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n\n    axis.tickPadding = function (x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n\n    axis.tickSubdivide = function () {\n      return arguments.length && axis;\n    };\n\n    return axis;\n  };\n\n  var d3_svg_axisDefaultOrient = \"bottom\",\n      d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n\n  d3.svg.brush = function () {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"),\n        x = null,\n        y = null,\n        xExtent = [0, 0],\n        yExtent = [0, 0],\n        xExtentDomain,\n        yExtentDomain,\n        xClamp = true,\n        yClamp = true,\n        resizes = d3_svg_brushResizes[0];\n\n    function brush(g) {\n      g.each(function () {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([0]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function (d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function (d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function (d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function (d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g),\n            backgroundUpdate = d3.transition(background),\n            range;\n\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n\n        redraw(gUpdate);\n      });\n    }\n\n    brush.event = function (g) {\n      g.each(function () {\n        var event_ = event.of(this, arguments),\n            extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        },\n            extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function () {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function () {\n            var xi = d3_interpolateArray(xExtent, extent1.x),\n                yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function (t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function () {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function (d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n\n    function brushstart() {\n      var target = this,\n          eventTarget = d3.select(d3.event.target),\n          event_ = event.of(target, arguments),\n          g = d3.select(target),\n          resizing = eventTarget.datum(),\n          resizingX = !/^(n|s)$/.test(resizing) && x,\n          resizingY = !/^(e|w)$/.test(resizing) && y,\n          dragging = eventTarget.classed(\"extent\"),\n          dragRestore = d3_event_dragSuppress(target),\n          center,\n          origin = d3.mouse(target),\n          offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n\n      g.interrupt().selectAll(\"*\").interrupt();\n\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing),\n            ey = +/^n/.test(resizing);\n        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n\n          d3_eventPreventDefault();\n        }\n      }\n\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n\n      function brushmove() {\n        var point = d3.mouse(target),\n            moved = false;\n\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale),\n            r0 = range[0],\n            r1 = range[1],\n            position = origin[i],\n            extent = i ? yExtent : xExtent,\n            size = extent[1] - extent[0],\n            min,\n            max;\n\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null;else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n\n    brush.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.clamp = function (z) {\n      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;\n      return brush;\n    };\n\n    brush.extent = function (z) {\n      var x0, x1, y0, y1, t;\n\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n\n        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n      }\n\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [x0, x1];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n      }\n\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [y0, y1];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n      }\n\n      return brush;\n    };\n\n    brush.clear = function () {\n      if (!brush.empty()) {\n        xExtent = [0, 0], yExtent = [0, 0];\n        xExtentDomain = yExtentDomain = null;\n      }\n\n      return brush;\n    };\n\n    brush.empty = function () {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n\n    return d3.rebind(brush, event, \"on\");\n  };\n\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  d3_time_formatIsoNative.parse = function (string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function (date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function (date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function (date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function (date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function (date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function (date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n\n    scale.invert = function (x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0],\n          target = span / count,\n          i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n        return d / 31536e6;\n      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n\n    scale.nice = function (interval, skip) {\n      var domain = scale.domain(),\n          extent = d3_scaleExtent(domain),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function floor(date) {\n          while (skipped(date = interval.floor(date))) {\n            date = d3_time_scaleDate(date - 1);\n          }\n\n          return date;\n        },\n        ceil: function ceil(date) {\n          while (skipped(date = interval.ceil(date))) {\n            date = d3_time_scaleDate(+date + 1);\n          }\n\n          return date;\n        }\n      } : interval));\n    };\n\n    scale.ticks = function (interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n        range: interval\n      }, skip];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n\n    scale.tickFormat = function () {\n      return format;\n    };\n\n    scale.copy = function () {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n\n  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n    return d.getMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getHours();\n  }], [\"%a %d\", function (d) {\n    return d.getDay() && d.getDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getMonth();\n  }], [\"%Y\", d3_true]]);\n  var d3_time_scaleMilliseconds = {\n    range: function range(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n\n  d3_time.scale = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n    return [m[0].utc, m[1]];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n    return d.getUTCMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getUTCSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getUTCMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getUTCHours();\n  }], [\"%a %d\", function (d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getUTCDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getUTCMonth();\n  }], [\"%Y\", d3_true]]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\n  d3_time.scale.utc = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n\n  d3.text = d3_xhrType(function (request) {\n    return request.responseText;\n  });\n\n  d3.json = function (url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n\n  d3.html = function (url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n\n  d3.xml = d3_xhrType(function (request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3);else if (typeof module === \"object\" && module.exports) module.exports = d3;else this.d3 = d3;\n}();","/* nvd3 version 1.8.6 (https://github.com/novus/nvd3) 2017-08-23 */\n(function () {\n  // set up main nv object\n  var nv = {}; // the major global objects under the nv namespace\n\n  nv.dev = false; //set false when in production\n\n  nv.tooltip = nv.tooltip || {}; // For the tooltip system\n\n  nv.utils = nv.utils || {}; // Utility subsystem\n\n  nv.models = nv.models || {}; //stores all the possible models/components\n\n  nv.charts = {}; //stores all the ready to use charts\n\n  nv.logs = {}; //stores some statistics and potential error messages\n\n  nv.dom = {}; //DOM manipulation functions\n  // Node/CommonJS - require D3\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined' && typeof d3 == 'undefined') {\n    d3 = require('d3');\n  }\n\n  nv.dispatch = d3.dispatch('render_start', 'render_end'); // Function bind polyfill\n  // Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n  // https://github.com/ariya/phantomjs/issues/10522\n  // http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n  // phantomJS is used for running the test suite\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== \"function\") {\n        // closest thing possible to the ECMAScript 5 internal IsCallable function\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  } //  Development render timers - disabled if dev = false\n\n\n  if (nv.dev) {\n    nv.dispatch.on('render_start', function (e) {\n      nv.logs.startTime = +new Date();\n    });\n    nv.dispatch.on('render_end', function (e) {\n      nv.logs.endTime = +new Date();\n      nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n      nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n  } // Logs all arguments, and returns the last so you can test things in place\n  // Note: in IE8 console.log is an object not a function, and if modernizr is used\n  // then calling Function.prototype.bind with with anything other than a function\n  // causes a TypeError to be thrown.\n\n\n  nv.log = function () {\n    if (nv.dev && window.console && console.log && console.log.apply) console.log.apply(console, arguments);else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n      var log = Function.prototype.bind.call(console.log, console);\n      log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n  }; // print console warning, should be used by deprecated functions\n\n\n  nv.deprecated = function (name, info) {\n    if (console && console.warn) {\n      console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n  }; // The nv.render function is used to queue up chart rendering\n  // in non-blocking async functions.\n  // When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\n\n  nv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function renderLoop() {\n      var chart, graph;\n\n      for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n        chart = graph.generate();\n        if (typeof graph.callback == typeof Function) graph.callback(chart);\n      }\n\n      nv.render.queue.splice(0, i);\n\n      if (nv.render.queue.length) {\n        setTimeout(renderLoop);\n      } else {\n        nv.dispatch.render_end();\n        nv.render.active = false;\n      }\n    };\n\n    setTimeout(renderLoop);\n  };\n\n  nv.render.active = false;\n  nv.render.queue = [];\n  /*\n  Adds a chart to the async rendering queue. This method can take arguments in two forms:\n  nv.addGraph({\n      generate: <Function>\n      callback: <Function>\n  })\n  \n  or\n  \n  nv.addGraph(<generate Function>, <callback Function>)\n  \n  The generate function should contain code that creates the NVD3 model, sets options\n  on it, adds data to an SVG element, and invokes the chart model. The generate function\n  should return the chart model.  See examples/lineChart.html for a usage example.\n  \n  The callback function is optional, and it is called when the generate function completes.\n  */\n\n  nv.addGraph = function (obj) {\n    if (typeof arguments[0] === typeof Function) {\n      obj = {\n        generate: arguments[0],\n        callback: arguments[1]\n      };\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n      nv.render();\n    }\n  }; // Node/CommonJS exports\n\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = nv;\n  }\n\n  if (typeof window !== 'undefined') {\n    window.nv = nv;\n  }\n  /* Facade for queueing DOM write operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.write = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.mutate(callback);\n    }\n\n    return callback();\n  };\n  /* Facade for queueing DOM read operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.read = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.measure(callback);\n    }\n\n    return callback();\n  };\n  /* Utility class to handle creation of an interactive layer.\n   This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n   containing the X-coordinate. It can also render a vertical line where the mouse is located.\n  \n   dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n   the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n   It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n   */\n\n\n  nv.interactiveGuideline = function () {\n    \"use strict\";\n\n    var margin = {\n      left: 0,\n      top: 0 //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\n    },\n        width = null,\n        height = null,\n        xScale = d3.scale.linear(),\n        dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp'),\n        showGuideLine = true,\n        svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n    ,\n        tooltip = nv.models.tooltip(),\n        isMSIE = window.ActiveXObject // Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n    tooltip.duration(0).hideDelay(0).hidden(false);\n\n    function layer(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this);\n        var availableWidth = width || 960,\n            availableHeight = height || 400;\n        var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\").data([data]);\n        var wrapEnter = wrap.enter().append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n        wrapEnter.append(\"g\").attr(\"class\", \"nv-interactiveGuideLine\");\n\n        if (!svgContainer) {\n          return;\n        }\n\n        function mouseHandler() {\n          var mouseX = d3.event.clientX - this.getBoundingClientRect().left;\n          var mouseY = d3.event.clientY - this.getBoundingClientRect().top;\n          var subtractMargin = true;\n          var mouseOutAnyReason = false;\n\n          if (isMSIE) {\n            /*\n             D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n             d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n             over a rect in IE 10.\n             However, d3.event.offsetX/Y also returns the mouse coordinates\n             relative to the triggering <rect>. So we use offsetX/Y on IE.\n             */\n            mouseX = d3.event.offsetX;\n            mouseY = d3.event.offsetY;\n            /*\n             On IE, if you attach a mouse event listener to the <svg> container,\n             it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n             When this happens on IE, the offsetX/Y is set to where ever the child element\n             is located.\n             As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n             position under this scenario. Removing the line below *will* cause\n             the interactive layer to not work right on IE.\n             */\n\n            if (d3.event.target.tagName !== \"svg\") {\n              subtractMargin = false;\n            }\n\n            if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n              mouseOutAnyReason = true;\n            }\n          }\n\n          if (subtractMargin) {\n            mouseX -= margin.left;\n            mouseY -= margin.top;\n          }\n          /* If mouseX/Y is outside of the chart's bounds,\n           trigger a mouseOut event.\n           */\n\n\n          if (d3.event.type === 'mouseout' || mouseX < 0 || mouseY < 0 || mouseX > availableWidth || mouseY > availableHeight || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || mouseOutAnyReason) {\n            if (isMSIE) {\n              if (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && (d3.event.relatedTarget.className === undefined || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n                return;\n              }\n            }\n\n            dispatch.elementMouseout({\n              mouseX: mouseX,\n              mouseY: mouseY\n            });\n            layer.renderGuideLine(null); //hide the guideline\n\n            tooltip.hidden(true);\n            return;\n          } else {\n            tooltip.hidden(false);\n          }\n\n          var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n          var pointXValue = undefined; // Ordinal scale has no invert method\n\n          if (scaleIsOrdinal) {\n            var elementIndex = d3.bisect(xScale.range(), mouseX) - 1; // Check if mouseX is in the range band\n\n            if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n              pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n            } else {\n              dispatch.elementMouseout({\n                mouseX: mouseX,\n                mouseY: mouseY\n              });\n              layer.renderGuideLine(null); //hide the guideline\n\n              tooltip.hidden(true);\n              return;\n            }\n          } else {\n            pointXValue = xScale.invert(mouseX);\n          }\n\n          dispatch.elementMousemove({\n            mouseX: mouseX,\n            mouseY: mouseY,\n            pointXValue: pointXValue\n          }); //If user double clicks the layer, fire a elementDblclick\n\n          if (d3.event.type === \"dblclick\") {\n            dispatch.elementDblclick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user single clicks the layer, fire elementClick\n\n\n          if (d3.event.type === 'click') {\n            dispatch.elementClick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseDown\n\n\n          if (d3.event.type === 'mousedown') {\n            dispatch.elementMouseDown({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseUp\n\n\n          if (d3.event.type === 'mouseup') {\n            dispatch.elementMouseUp({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          }\n        }\n\n        svgContainer.on(\"touchmove\", mouseHandler).on(\"mousemove\", mouseHandler, true).on(\"mouseout\", mouseHandler, true).on(\"mousedown\", mouseHandler, true).on(\"mouseup\", mouseHandler, true).on(\"dblclick\", mouseHandler).on(\"click\", mouseHandler);\n        layer.guideLine = null; //Draws a vertical guideline at the given X postion.\n\n        layer.renderGuideLine = function (x) {\n          if (!showGuideLine) return;\n          if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n          nv.dom.write(function () {\n            var line = wrap.select(\".nv-interactiveGuideLine\").selectAll(\"line\").data(x != null ? [nv.utils.NaNtoZero(x)] : [], String);\n            line.enter().append(\"line\").attr(\"class\", \"nv-guideline\").attr(\"x1\", function (d) {\n              return d;\n            }).attr(\"x2\", function (d) {\n              return d;\n            }).attr(\"y1\", availableHeight).attr(\"y2\", 0);\n            line.exit().remove();\n          });\n        };\n      });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return layer;\n    };\n\n    layer.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return layer;\n    };\n\n    layer.height = function (_) {\n      if (!arguments.length) return height;\n      height = _;\n      return layer;\n    };\n\n    layer.xScale = function (_) {\n      if (!arguments.length) return xScale;\n      xScale = _;\n      return layer;\n    };\n\n    layer.showGuideLine = function (_) {\n      if (!arguments.length) return showGuideLine;\n      showGuideLine = _;\n      return layer;\n    };\n\n    layer.svgContainer = function (_) {\n      if (!arguments.length) return svgContainer;\n      svgContainer = _;\n      return layer;\n    };\n\n    return layer;\n  };\n  /* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n   This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n  \n   For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n   Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n   because 28 is closer to 30 than 10.\n  \n   Unit tests can be found in: interactiveBisectTest.html\n  \n   Has the following known issues:\n   * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n   * Won't work if there are duplicate x coordinate values.\n   */\n\n\n  nv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n\n    if (!(values instanceof Array)) {\n      return null;\n    }\n\n    var _xAccessor;\n\n    if (typeof xAccessor !== 'function') {\n      _xAccessor = function _xAccessor(d) {\n        return d.x;\n      };\n    } else {\n      _xAccessor = xAccessor;\n    }\n\n    var _cmp = function _cmp(d, v) {\n      // Accessors are no longer passed the index of the element along with\n      // the element itself when invoked by d3.bisector.\n      //\n      // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n      // function passed to determine if it should consider it an accessor\n      // or a comparator. This meant that accessors that take two arguments\n      // (expecting an index as the second parameter) are treated as\n      // comparators where the second argument is the search value against\n      // which the first argument is compared.\n      return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values, searchVal) - 1]);\n\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n      currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n      return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index + 1, values.length - 1]);\n\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n      nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n      return index;\n    } else {\n      return nextIndex;\n    }\n  };\n  /*\n   Returns the index in the array \"values\" that is closest to searchVal.\n   Only returns an index if searchVal is within some \"threshold\".\n   Otherwise, returns null.\n   */\n\n\n  nv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n\n    var yDistMax = Infinity,\n        indexToHighlight = null;\n    values.forEach(function (d, i) {\n      var delta = Math.abs(searchVal - d);\n\n      if (d != null && delta <= yDistMax && delta < threshold) {\n        yDistMax = delta;\n        indexToHighlight = i;\n      }\n    });\n    return indexToHighlight;\n  };\n  /* Model which can be instantiated to handle tooltip rendering.\n   Example usage:\n   var tip = nv.models.tooltip().gravity('w').distance(23)\n   .data(myDataObject);\n  \n   tip();    //just invoke the returned function to render tooltip.\n   */\n\n\n  nv.models.tooltip = function () {\n    \"use strict\";\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n    ,\n        data = null,\n        gravity = 'w' // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n    ,\n        distance = 25 // Distance to offset tooltip from the mouse location.\n    ,\n        snapDistance = 0 // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n    ,\n        classes = null // Attaches additional CSS classes to the tooltip DIV that is created.\n    ,\n        hidden = true // Start off hidden, toggle with hide/show functions below.\n    ,\n        hideDelay = 200 // Delay (in ms) before the tooltip hides after calling hide().\n    ,\n        tooltip = null // d3 select of the tooltip div.\n    ,\n        lastPosition = {\n      left: null,\n      top: null // Last position the tooltip was in.\n\n    },\n        enabled = true // True -> tooltips are rendered. False -> don't render tooltips.\n    ,\n        duration = 100 // Tooltip movement duration, in ms.\n    ,\n        headerEnabled = true // If is to show the tooltip header.\n    ,\n        nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ; // Format function for the tooltip values column.\n    // d is value,\n    // i is series index\n    // p is point containing the value\n\n    var valueFormatter = function valueFormatter(d, i, p) {\n      return d;\n    }; // Format function for the tooltip header value.\n\n\n    var headerFormatter = function headerFormatter(d) {\n      return d;\n    };\n\n    var keyFormatter = function keyFormatter(d, i) {\n      return d;\n    }; // By default, the tooltip model renders a beautiful table inside a DIV, returned as HTML\n    // You can override this function if a custom tooltip is desired. For instance, you could directly manipulate\n    // the DOM by accessing elem and returning false.\n\n\n    var contentGenerator = function contentGenerator(d, elem) {\n      if (d === null) {\n        return '';\n      }\n\n      var table = d3.select(document.createElement(\"table\"));\n\n      if (headerEnabled) {\n        var theadEnter = table.selectAll(\"thead\").data([d]).enter().append(\"thead\");\n        theadEnter.append(\"tr\").append(\"td\").attr(\"colspan\", 3).append(\"strong\").classed(\"x-value\", true).html(headerFormatter(d.value));\n      }\n\n      var tbodyEnter = table.selectAll(\"tbody\").data([d]).enter().append(\"tbody\");\n      var trowEnter = tbodyEnter.selectAll(\"tr\").data(function (p) {\n        return p.series;\n      }).enter().append(\"tr\").classed(\"highlight\", function (p) {\n        return p.highlight;\n      });\n      trowEnter.append(\"td\").classed(\"legend-color-guide\", true).append(\"div\").style(\"background-color\", function (p) {\n        return p.color;\n      });\n      trowEnter.append(\"td\").classed(\"key\", true).classed(\"total\", function (p) {\n        return !!p.total;\n      }).html(function (p, i) {\n        return keyFormatter(p.key, i);\n      });\n      trowEnter.append(\"td\").classed(\"value\", true).html(function (p, i) {\n        return valueFormatter(p.value, i, p);\n      });\n      trowEnter.filter(function (p, i) {\n        return p.percent !== undefined;\n      }).append(\"td\").classed(\"percent\", true).html(function (p, i) {\n        return \"(\" + d3.format('%')(p.percent) + \")\";\n      });\n      trowEnter.selectAll(\"td\").each(function (p) {\n        if (p.highlight) {\n          var opacityScale = d3.scale.linear().domain([0, 1]).range([\"#fff\", p.color]);\n          var opacity = 0.6;\n          d3.select(this).style(\"border-bottom-color\", opacityScale(opacity)).style(\"border-top-color\", opacityScale(opacity));\n        }\n      });\n      var html = table.node().outerHTML;\n      if (d.footer !== undefined) html += \"<div class='footer'>\" + d.footer + \"</div>\";\n      return html;\n    };\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n\n\n    var position = function position() {\n      var pos = {\n        left: d3.event !== null ? d3.event.clientX : 0,\n        top: d3.event !== null ? d3.event.clientY : 0\n      };\n\n      if (getComputedStyle(document.body).transform != 'none') {\n        // Take the offset into account, as now the tooltip is relative\n        // to document.body.\n        var client = document.body.getBoundingClientRect();\n        pos.left -= client.left;\n        pos.top -= client.top;\n      }\n\n      return pos;\n    };\n\n    var dataSeriesExists = function dataSeriesExists(d) {\n      if (d && d.series) {\n        if (nv.utils.isArray(d.series)) {\n          return true;\n        } // if object, it's okay just convert to array of the object\n\n\n        if (nv.utils.isObject(d.series)) {\n          d.series = [d.series];\n          return true;\n        }\n      }\n\n      return false;\n    }; // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n\n\n    var calcGravityOffset = function calcGravityOffset(pos) {\n      var height = tooltip.node().offsetHeight,\n          width = tooltip.node().offsetWidth,\n          clientWidth = document.documentElement.clientWidth,\n          // Don't want scrollbars.\n      clientHeight = document.documentElement.clientHeight,\n          // Don't want scrollbars.\n      left,\n          top,\n          tmp; // calculate position based on gravity\n\n      switch (gravity) {\n        case 'e':\n          left = -width - distance;\n          top = -(height / 2);\n          if (pos.left + left < 0) left = distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'w':\n          left = distance;\n          top = -(height / 2);\n          if (pos.left + left + width > clientWidth) left = -width - distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'n':\n          left = -(width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\n          top = distance;\n          if (pos.top + top + height > clientHeight) top = -height - distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 's':\n          left = -(width / 2);\n          top = -height - distance;\n          if (pos.top + top < 0) top = distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 'center':\n          left = -(width / 2);\n          top = -(height / 2);\n          break;\n\n        default:\n          left = 0;\n          top = 0;\n          break;\n      }\n\n      return {\n        'left': left,\n        'top': top\n      };\n    };\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n\n\n    var positionTooltip = function positionTooltip() {\n      nv.dom.read(function () {\n        var pos = position(),\n            gravityOffset = calcGravityOffset(pos),\n            left = pos.left + gravityOffset.left,\n            top = pos.top + gravityOffset.top; // delay hiding a bit to avoid flickering\n\n        if (hidden) {\n          tooltip.interrupt().transition().delay(hideDelay).duration(0).style('opacity', 0);\n        } else {\n          // using tooltip.style('transform') returns values un-usable for tween\n          var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n          var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n          var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n          var is_hidden = tooltip.style('opacity') < 0.1;\n          tooltip.interrupt() // cancel running transitions\n          .transition().duration(is_hidden ? 0 : duration) // using tween since some versions of d3 can't auto-tween a translate on a div\n          .styleTween('transform', function (d) {\n            return translateInterpolator;\n          }, 'important') // Safari has its own `-webkit-transform` and does not support `transform`\n          .styleTween('-webkit-transform', function (d) {\n            return translateInterpolator;\n          }).style('-ms-transform', new_translate).style('opacity', 1);\n        }\n\n        lastPosition.left = left;\n        lastPosition.top = top;\n      });\n    }; // Creates new tooltip container, or uses existing one on DOM.\n\n\n    function initTooltip() {\n      if (!tooltip || !tooltip.node()) {\n        // Create new tooltip div if it doesn't exist on DOM.\n        var data = [1];\n        tooltip = d3.select(document.body).select('#' + id).data(data);\n        tooltip.enter().append('div').attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\")).attr(\"id\", id).style(\"top\", 0).style(\"left\", 0).style('opacity', 0).style('position', 'fixed').selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true).classed(nvPointerEventsClass, true);\n        tooltip.exit().remove();\n      }\n    } // Draw the tooltip onto the DOM.\n\n\n    function nvtooltip() {\n      if (!enabled) return;\n      if (!dataSeriesExists(data)) return;\n      nv.dom.write(function () {\n        initTooltip(); // Generate data and set it into tooltip.\n        // Bonus - If you override contentGenerator and return false, you can use something like\n        //         Angular, React or Knockout to bind the data for your tooltip directly to the DOM.\n\n        var newContent = contentGenerator(data, tooltip.node());\n\n        if (newContent) {\n          tooltip.node().innerHTML = newContent;\n        }\n\n        positionTooltip();\n      });\n      return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n    nvtooltip._options = Object.create({}, {\n      // simple read/write options\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      distance: {\n        get: function get() {\n          return distance;\n        },\n        set: function set(_) {\n          distance = _;\n        }\n      },\n      snapDistance: {\n        get: function get() {\n          return snapDistance;\n        },\n        set: function set(_) {\n          snapDistance = _;\n        }\n      },\n      classes: {\n        get: function get() {\n          return classes;\n        },\n        set: function set(_) {\n          classes = _;\n        }\n      },\n      enabled: {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(_) {\n          enabled = _;\n        }\n      },\n      hideDelay: {\n        get: function get() {\n          return hideDelay;\n        },\n        set: function set(_) {\n          hideDelay = _;\n        }\n      },\n      contentGenerator: {\n        get: function get() {\n          return contentGenerator;\n        },\n        set: function set(_) {\n          contentGenerator = _;\n        }\n      },\n      valueFormatter: {\n        get: function get() {\n          return valueFormatter;\n        },\n        set: function set(_) {\n          valueFormatter = _;\n        }\n      },\n      headerFormatter: {\n        get: function get() {\n          return headerFormatter;\n        },\n        set: function set(_) {\n          headerFormatter = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      headerEnabled: {\n        get: function get() {\n          return headerEnabled;\n        },\n        set: function set(_) {\n          headerEnabled = _;\n        }\n      },\n      position: {\n        get: function get() {\n          return position;\n        },\n        set: function set(_) {\n          position = _;\n        }\n      },\n      // Deprecated options\n      chartContainer: {\n        get: function get() {\n          return document.body;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.3\n          nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }\n      },\n      fixedTop: {\n        get: function get() {\n          return null;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }\n      },\n      offset: {\n        get: function get() {\n          return {\n            left: 0,\n            top: 0\n          };\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }\n      },\n      // options with extra logic\n      hidden: {\n        get: function get() {\n          return hidden;\n        },\n        set: function set(_) {\n          if (hidden != _) {\n            hidden = !!_;\n            nvtooltip();\n          }\n        }\n      },\n      data: {\n        get: function get() {\n          return data;\n        },\n        set: function set(_) {\n          // if showing a single data point, adjust data format with that\n          if (_.point) {\n            _.value = _.point.x;\n            _.series = _.series || {};\n            _.series.value = _.point.y;\n            _.series.color = _.point.color || _.series.color;\n          }\n\n          data = _;\n        }\n      },\n      // read only properties\n      node: {\n        get: function get() {\n          return tooltip.node();\n        },\n        set: function set(_) {}\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {}\n      }\n    });\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n  };\n  /*\n  Gets the browser window size\n  \n  Returns object with height and width properties\n   */\n\n\n  nv.utils.windowSize = function () {\n    // Sane defaults\n    var size = {\n      width: 640,\n      height: 480\n    }; // Most recent browsers use\n\n    if (window.innerWidth && window.innerHeight) {\n      size.width = window.innerWidth;\n      size.height = window.innerHeight;\n      return size;\n    } // IE can use depending on mode it is in\n\n\n    if (document.compatMode == 'CSS1Compat' && document.documentElement && document.documentElement.offsetWidth) {\n      size.width = document.documentElement.offsetWidth;\n      size.height = document.documentElement.offsetHeight;\n      return size;\n    } // Earlier IE uses Doc.body\n\n\n    if (document.body && document.body.offsetWidth) {\n      size.width = document.body.offsetWidth;\n      size.height = document.body.offsetHeight;\n      return size;\n    }\n\n    return size;\n  };\n  /* handle dumb browser quirks...  isinstance breaks if you use frames\n  typeof returns 'object' for null, NaN is a number, etc.\n   */\n\n\n  nv.utils.isArray = Array.isArray;\n\n  nv.utils.isObject = function (a) {\n    return a !== null && typeof a === 'object';\n  };\n\n  nv.utils.isFunction = function (a) {\n    return typeof a === 'function';\n  };\n\n  nv.utils.isDate = function (a) {\n    return toString.call(a) === '[object Date]';\n  };\n\n  nv.utils.isNumber = function (a) {\n    return !isNaN(a) && typeof a === 'number';\n  };\n  /*\n  Binds callback function to run when window is resized\n   */\n\n\n  nv.utils.windowResize = function (handler) {\n    if (window.addEventListener) {\n      window.addEventListener('resize', handler);\n    } else {\n      nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    } // return object with clear function to remove the single added callback.\n\n\n    return {\n      callback: handler,\n      clear: function clear() {\n        window.removeEventListener('resize', handler);\n      }\n    };\n  };\n  /*\n  Backwards compatible way to implement more d3-like coloring of graphs.\n  Can take in nothing, an array, or a function/scale\n  To use a normal scale, get the range and pass that because we must be able\n  to take two arguments and use the index to keep backward compatibility\n  */\n\n\n  nv.utils.getColor = function (color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n      return nv.utils.defaultColor(); //if passed an array, turn it into a color scale\n    } else if (nv.utils.isArray(color)) {\n      var color_scale = d3.scale.ordinal().range(color);\n      return function (d, i) {\n        var key = i === undefined ? d : i;\n        return d.color || color_scale(key);\n      }; //if passed a function or scale, return it, or whatever it may be\n      //external libs, such as angularjs-nvd3-directives use this\n    } else {\n      //can't really help it if someone passes rubbish as color\n      return color;\n    }\n  };\n  /*\n  Default color chooser uses a color scale of 20 colors from D3\n   https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n   */\n\n\n  nv.utils.defaultColor = function () {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n  };\n  /*\n  Returns a color function that takes the result of 'getKey' for each series and\n  looks for a corresponding color from the dictionary\n  */\n\n\n  nv.utils.customTheme = function (dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function (series) {\n      return series.key;\n    };\n\n    defaultColors = defaultColors || d3.scale.category20().range(); // start at end of default color list and walk back to index 0\n\n    var defIndex = defaultColors.length;\n    return function (series, index) {\n      var key = getKey(series);\n\n      if (nv.utils.isFunction(dictionary[key])) {\n        return dictionary[key]();\n      } else if (dictionary[key] !== undefined) {\n        return dictionary[key];\n      } else {\n        // no match in dictionary, use a default color\n        if (!defIndex) {\n          // used all the default colors, start over\n          defIndex = defaultColors.length;\n        }\n\n        defIndex = defIndex - 1;\n        return defaultColors[defIndex];\n      }\n    };\n  };\n  /*\n  From the PJAX example on d3js.org, while this is not really directly needed\n  it's a very cool method for doing pjax, I may expand upon it a little bit,\n  open to suggestions on anything that may be useful\n  */\n\n\n  nv.utils.pjax = function (links, content) {\n    var load = function load(href) {\n      d3.html(href, function (fragment) {\n        var target = d3.select(content).node();\n        target.parentNode.replaceChild(d3.select(fragment).select(content).node(), target);\n        nv.utils.pjax(links, content);\n      });\n    };\n\n    d3.selectAll(links).on(\"click\", function () {\n      history.pushState(this.href, this.textContent, this.href);\n      load(this.href);\n      d3.event.preventDefault();\n    });\n    d3.select(window).on(\"popstate\", function () {\n      if (d3.event.state) {\n        load(d3.event.state);\n      }\n    });\n  };\n  /*\n  For when we want to approximate the width in pixels for an SVG:text element.\n  Most common instance is when the element is in a display:none; container.\n  Forumla is : text.length * font-size * constant_factor\n  */\n\n\n  nv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n      var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\", \"\"), 10);\n      var textLength = svgTextElem.text().length;\n      return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n\n    return 0;\n  };\n  /*\n  Numbers that are undefined, null or NaN, convert them to zeros.\n  */\n\n\n  nv.utils.NaNtoZero = function (n) {\n    if (!nv.utils.isNumber(n) || isNaN(n) || n === null || n === Infinity || n === -Infinity) {\n      return 0;\n    }\n\n    return n;\n  };\n  /*\n  Add a way to watch for d3 transition ends to d3\n  */\n\n\n  d3.selection.prototype.watchTransition = function (renderWatch) {\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n  };\n  /*\n  Helper object to watch when d3 has rendered something\n  */\n\n\n  nv.utils.renderWatch = function (dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n      return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n\n    var renderStack = [];\n    var self = this;\n\n    this.models = function (models) {\n      models = [].slice.call(arguments, 0);\n      models.forEach(function (model) {\n        model.__rendered = false;\n\n        (function (m) {\n          m.dispatch.on('renderEnd', function (arg) {\n            m.__rendered = true;\n            self.renderEnd('model');\n          });\n        })(model);\n\n        if (renderStack.indexOf(model) < 0) {\n          renderStack.push(model);\n        }\n      });\n      return this;\n    };\n\n    this.reset = function (duration) {\n      if (duration !== undefined) {\n        _duration = duration;\n      }\n\n      renderStack = [];\n    };\n\n    this.transition = function (selection, args, duration) {\n      args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n      if (args.length > 1) {\n        duration = args.pop();\n      } else {\n        duration = _duration !== undefined ? _duration : 250;\n      }\n\n      selection.__rendered = false;\n\n      if (renderStack.indexOf(selection) < 0) {\n        renderStack.push(selection);\n      }\n\n      if (duration === 0) {\n        selection.__rendered = true;\n\n        selection.delay = function () {\n          return this;\n        };\n\n        selection.duration = function () {\n          return this;\n        };\n\n        return selection;\n      } else {\n        if (selection.length === 0) {\n          selection.__rendered = true;\n        } else if (selection.every(function (d) {\n          return !d.length;\n        })) {\n          selection.__rendered = true;\n        } else {\n          selection.__rendered = false;\n        }\n\n        var n = 0;\n        return selection.transition().duration(duration).each(function () {\n          ++n;\n        }).each('end', function (d, i) {\n          if (--n === 0) {\n            selection.__rendered = true;\n            self.renderEnd.apply(this, args);\n          }\n        });\n      }\n    };\n\n    this.renderEnd = function () {\n      if (renderStack.every(function (d) {\n        return d.__rendered;\n      })) {\n        renderStack.forEach(function (d) {\n          d.__rendered = false;\n        });\n        dispatch.renderEnd.apply(this, arguments);\n      }\n    };\n  };\n  /*\n  Takes multiple objects and combines them into the first one (dst)\n  example:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n  gives:  {a: 2, b: 3, c: 4}\n  */\n\n\n  nv.utils.deepExtend = function (dst) {\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function (source) {\n      for (var key in source) {\n        var isArray = nv.utils.isArray(dst[key]);\n        var isObject = nv.utils.isObject(dst[key]);\n        var srcObj = nv.utils.isObject(source[key]);\n\n        if (isObject && !isArray && srcObj) {\n          nv.utils.deepExtend(dst[key], source[key]);\n        } else {\n          dst[key] = source[key];\n        }\n      }\n    });\n  };\n  /*\n  state utility object, used to track d3 states in the models\n  */\n\n\n  nv.utils.state = function () {\n    if (!(this instanceof nv.utils.state)) {\n      return new nv.utils.state();\n    }\n\n    var state = {};\n\n    var _self = this;\n\n    var _setState = function _setState() {};\n\n    var _getState = function _getState() {\n      return {};\n    };\n\n    var init = null;\n    var changed = null;\n    this.dispatch = d3.dispatch('change', 'set');\n    this.dispatch.on('set', function (state) {\n      _setState(state, true);\n    });\n\n    this.getter = function (fn) {\n      _getState = fn;\n      return this;\n    };\n\n    this.setter = function (fn, callback) {\n      if (!callback) {\n        callback = function callback() {};\n      }\n\n      _setState = function _setState(state, update) {\n        fn(state);\n\n        if (update) {\n          callback();\n        }\n      };\n\n      return this;\n    };\n\n    this.init = function (state) {\n      init = init || {};\n      nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function _set() {\n      var settings = _getState();\n\n      if (JSON.stringify(settings) === JSON.stringify(state)) {\n        return false;\n      }\n\n      for (var key in settings) {\n        if (state[key] === undefined) {\n          state[key] = {};\n        }\n\n        state[key] = settings[key];\n        changed = true;\n      }\n\n      return true;\n    };\n\n    this.update = function () {\n      if (init) {\n        _setState(init, false);\n\n        init = null;\n      }\n\n      if (_set.call(this)) {\n        this.dispatch.change(state);\n      }\n    };\n  };\n  /*\n  Snippet of code you can insert into each nv.models.* to give you the ability to\n  do things like:\n  chart.options({\n    showXAxis: true,\n    tooltips: true\n  });\n  \n  To enable in the chart:\n  chart.options = nv.utils.optionsFunc.bind(chart);\n  */\n\n\n  nv.utils.optionsFunc = function (args) {\n    if (args) {\n      d3.map(args).forEach(function (key, value) {\n        if (nv.utils.isFunction(this[key])) {\n          this[key](value);\n        }\n      }.bind(this));\n    }\n\n    return this;\n  };\n  /*\n  numTicks:  requested number of ticks\n  data:  the chart data\n  \n  returns the number of ticks to actually use on X axis, based on chart data\n  to avoid duplicate ticks with the same value\n  */\n\n\n  nv.utils.calcTicksX = function (numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n\n    for (i; i < data.length; i += 1) {\n      var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n      numValues = stream_len > numValues ? stream_len : numValues;\n    }\n\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues); // make sure we don't have more ticks than values to avoid duplicates\n\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks; // make sure we have at least one tick\n\n    numTicks = numTicks < 1 ? 1 : numTicks; // make sure it's an integer\n\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n  };\n  /*\n  returns number of ticks to actually use on Y axis, based on chart data\n  */\n\n\n  nv.utils.calcTicksY = function (numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n  };\n  /*\n  Add a particular option from an options object onto chart\n  Options exposed on a chart are a getter/setter function that returns chart\n  on set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n  \n  option objects should be generated via Object.create() to provide\n  the option of manipulating data via get/set functions.\n  */\n\n\n  nv.utils.initOption = function (chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n      chart[name] = chart._calls[name];\n    } else {\n      chart[name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n        chart._overrides[name] = true;\n        chart._options[name] = _;\n        return chart;\n      }; // calling the option as _option will ignore if set by option already\n      // so nvd3 can set options internally but the stop if set manually\n\n\n      chart['_' + name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n\n        if (!chart._overrides[name]) {\n          chart._options[name] = _;\n        }\n\n        return chart;\n      };\n    }\n  };\n  /*\n  Add all options in an options object to the chart\n  */\n\n\n  nv.utils.initOptions = function (chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n\n    for (var i in ops) {\n      nv.utils.initOption(chart, ops[i]);\n    }\n  };\n  /*\n  Inherit options from a D3 object\n  d3.rebind makes calling the function on target actually call it on source\n  Also use _d3options so we can track what we inherit for documentation and chained inheritance\n  */\n\n\n  nv.utils.inheritOptionsD3 = function (target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []); // Find unique d3 options (string) and update d3options\n\n    target._d3options = (target._d3options || []).filter(function (item, i, ar) {\n      return ar.indexOf(item) === i;\n    });\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n  };\n  /*\n  Remove duplicates from an array\n  */\n\n\n  nv.utils.arrayUnique = function (a) {\n    return a.sort().filter(function (item, pos) {\n      return !pos || item != a[pos - 1];\n    });\n  };\n  /*\n  Keeps a list of custom symbols to draw from in addition to d3.svg.symbol\n  Necessary since d3 doesn't let you extend its list -_-\n  Add new symbols by doing nv.utils.symbols.set('name', function(size){...});\n  */\n\n\n  nv.utils.symbolMap = d3.map();\n  /*\n  Replaces d3.svg.symbol so that we can look both there and our own map\n   */\n\n  nv.utils.symbol = function () {\n    var type,\n        size = 64;\n\n    function symbol(d, i) {\n      var t = type.call(this, d, i);\n      var s = size.call(this, d, i);\n\n      if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n        return d3.svg.symbol().type(t).size(s)();\n      } else {\n        return nv.utils.symbolMap.get(t)(s);\n      }\n    }\n\n    symbol.type = function (_) {\n      if (!arguments.length) return type;\n      type = d3.functor(_);\n      return symbol;\n    };\n\n    symbol.size = function (_) {\n      if (!arguments.length) return size;\n      size = d3.functor(_);\n      return symbol;\n    };\n\n    return symbol;\n  };\n  /*\n  Inherit option getter/setter functions from source to target\n  d3.rebind makes calling the function on target actually call it on source\n  Also track via _inherited and _d3options so we can track what we inherit\n  for documentation generation purposes and chained inheritance\n  */\n\n\n  nv.utils.inheritOptions = function (target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args); // pass along the lists to keep track of them, don't allow duplicates\n\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n  };\n  /*\n  Runs common initialize code on the svg before the chart builds\n  */\n\n\n  nv.utils.initSVG = function (svg) {\n    svg.classed({\n      'nvd3-svg': true\n    });\n  };\n  /*\n  Sanitize and provide default for the container height.\n  */\n\n\n  nv.utils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n  };\n  /*\n  Sanitize and provide default for the container width.\n  */\n\n\n  nv.utils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n  };\n  /*\n  Calculate the available height for a chart.\n  */\n\n\n  nv.utils.availableHeight = function (height, container, margin) {\n    return Math.max(0, nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n  };\n  /*\n  Calculate the available width for a chart.\n  */\n\n\n  nv.utils.availableWidth = function (width, container, margin) {\n    return Math.max(0, nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n  };\n  /*\n  Clear any rendered chart components and display a chart's 'noData' message\n  */\n\n\n  nv.utils.noData = function (chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = noData == null ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width / 2,\n        y = margin.top + height / 2; //Remove any previously created chart components\n\n    container.selectAll('g').remove();\n    var noDataText = container.selectAll('.nv-noData').data(data);\n    noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n    noDataText.attr('x', x).attr('y', y).text(function (t) {\n      return t;\n    });\n  };\n  /*\n   Wrap long labels.\n   */\n\n\n  nv.utils.wrapTicks = function (text, width) {\n    text.each(function () {\n      var text = d3.select(this),\n          words = text.text().split(/\\s+/).reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1.1,\n          y = text.attr(\"y\"),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n      while (word = words.pop()) {\n        line.push(word);\n        tspan.text(line.join(\" \"));\n\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\" \"));\n          line = [word];\n          tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n        }\n      }\n    });\n  };\n  /*\n  Check equality of 2 array\n  */\n\n\n  nv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2) return true;\n    if (!array1 || !array2) return false; // compare lengths - can save a lot of time\n\n    if (array1.length != array2.length) return false;\n\n    for (var i = 0, l = array1.length; i < l; i++) {\n      // Check if we have nested arrays\n      if (array1[i] instanceof Array && array2[i] instanceof Array) {\n        // recurse into the nested arrays\n        if (!nv.arrayEquals(array1[i], array2[i])) return false;\n      } else if (array1[i] != array2[i]) {\n        // Warning - two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /*\n   Check if a point within an arc\n   */\n\n\n  nv.utils.pointIsInArc = function (pt, ptData, d3Arc) {\n    // Center of the arc is assumed to be 0,0\n    // (pt.x, pt.y) are assumed to be relative to the center\n    var r1 = d3Arc.innerRadius()(ptData),\n        // Note: Using the innerRadius\n    r2 = d3Arc.outerRadius()(ptData),\n        theta1 = d3Arc.startAngle()(ptData),\n        theta2 = d3Arc.endAngle()(ptData);\n    var dist = pt.x * pt.x + pt.y * pt.y,\n        angle = Math.atan2(pt.x, -pt.y); // Note: different coordinate system.\n\n    angle = angle < 0 ? angle + Math.PI * 2 : angle;\n    return r1 * r1 <= dist && dist <= r2 * r2 && theta1 <= angle && angle <= theta2;\n  };\n\n  nv.models.axis = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 75 //only used for tickLabel currently\n    ,\n        height = 60 //only used for tickLabel currently\n    ,\n        axisLabelText = null,\n        showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n    ,\n        rotateLabels = 0,\n        rotateYLabel = true,\n        staggerLabels = false,\n        isOrdinal = false,\n        ticks = null,\n        axisLabelDistance = 0,\n        fontSize = undefined,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'),\n        tickFormatMaxMin;\n    axis.scale(scale).orient('bottom').tickFormat(function (d) {\n      return d;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        if (ticks !== null) axis.ticks(ticks);else if (axis.orient() == 'top' || axis.orient() == 'bottom') axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100); //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\n        g.watchTransition(renderWatch, 'axis').call(axis);\n        scale0 = scale0 || axis.scale();\n        var fmt = axis.tickFormat();\n\n        if (fmt == null) {\n          fmt = scale0.tickFormat();\n        }\n\n        var axisLabel = g.selectAll('text.nv-axislabel').data([axisLabelText || null]);\n        axisLabel.exit().remove(); //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\n        if (fontSize !== undefined) {\n          g.selectAll('g').select(\"text\").style('font-size', fontSize);\n        }\n\n        var xLabelMargin;\n        var axisMaxMin;\n        var w;\n\n        switch (axis.orient()) {\n          case 'top':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', 0).attr('x', w / 2);\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)';\n              }).select('text').attr('dy', '-0.5em').attr('y', -axis.tickPadding()).attr('text-anchor', 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max top').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'bottom':\n            xLabelMargin = axisLabelDistance + 36;\n            var maxTextWidth = 30;\n            var textHeight = 0;\n            var xTicks = g.selectAll('g').select(\"text\");\n            var rotateLabelsRule = '';\n\n            if (rotateLabels % 360) {\n              //Reset transform on ticks so textHeight can be calculated correctly\n              xTicks.attr('transform', ''); //Calculate the longest xTick width\n\n              xTicks.each(function (d, i) {\n                var box = this.getBoundingClientRect();\n                var width = box.width;\n                textHeight = box.height;\n                if (width > maxTextWidth) maxTextWidth = width;\n              });\n              rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight / 2 + axis.tickPadding()) + ')'; //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\n              var sin = Math.abs(Math.sin(rotateLabels * Math.PI / 180));\n              xLabelMargin = (sin ? sin * maxTextWidth : maxTextWidth) + 30; //Rotate all xTicks\n\n              xTicks.attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels % 360 > 0 ? 'start' : 'end');\n            } else {\n              if (staggerLabels) {\n                xTicks.attr('transform', function (d, i) {\n                  return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')';\n                });\n              } else {\n                xTicks.attr('transform', \"translate(0,0)\");\n              }\n            }\n\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', xLabelMargin).attr('x', w / 2);\n\n            if (showMaxMin) {\n              //if (showMaxMin && !isOrdinal) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin') //.data(scale.domain())\n              .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              }).select('text').attr('dy', '.71em').attr('y', axis.tickPadding()).attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels ? rotateLabels % 360 > 0 ? 'start' : 'end' : 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max bottom').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'right':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'begin').attr('transform', rotateYLabel ? 'rotate(90)' : '').attr('y', rotateYLabel ? -Math.max(margin.right, width) + 12 - (axisLabelDistance || 0) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n            .attr('x', rotateYLabel ? d3.max(scale.range()) / 2 : axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', axis.tickPadding()).style('text-anchor', 'start').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n\n          case 'left':\n            /*\n             //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n             var yTicks = g.selectAll('g').select(\"text\");\n             yTicks.each(function(d,i){\n             var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n             if(labelPadding > width) width = labelPadding;\n             });\n             */\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'end').attr('transform', rotateYLabel ? 'rotate(-90)' : '').attr('y', rotateYLabel ? -Math.max(margin.left, width) + 25 - (axisLabelDistance || 0) : -10).attr('x', rotateYLabel ? -d3.max(scale.range()) / 2 : -axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', -axis.tickPadding()).attr('text-anchor', 'end').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n        }\n\n        axisLabel.text(function (d) {\n          return d;\n        });\n\n        if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n          //check if max and min overlap other values, if so, hide the values that overlap\n          g.selectAll('g') // the g's wrapping each tick\n          .each(function (d, i) {\n            d3.select(this).select('text').attr('opacity', 1);\n\n            if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) {\n              // 10 is assuming text height is 16... if d is 0, leave it!\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).attr('opacity', 0);\n              d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n            }\n          }); //if Max and Min = 0 only show min, Issue #281\n\n          if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n            wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n              return !i ? 1 : 0;\n            });\n          }\n        }\n\n        if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n          var maxMinRange = [];\n          wrap.selectAll('g.nv-axisMaxMin').each(function (d, i) {\n            try {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4);\n            } catch (err) {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + 4);\n            }\n          }); // the g's wrapping each tick\n\n          g.selectAll('g').each(function (d, i) {\n            if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).remove();else d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n            }\n          });\n        } //Highlight zero tick line\n\n\n        g.selectAll('.tick').filter(function (d) {\n          /*\n          The filter needs to return only ticks at or near zero.\n          Numbers like 0.00001 need to count as zero as well,\n          and the arithmetic trick below solves that.\n          */\n          return !parseFloat(Math.round(d * 100000) / 1000000) && d !== undefined;\n        }).classed('zero', true); //store old scales for use in transitions on update\n\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('axis immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      axisLabelDistance: {\n        get: function get() {\n          return axisLabelDistance;\n        },\n        set: function set(_) {\n          axisLabelDistance = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      rotateYLabel: {\n        get: function get() {\n          return rotateYLabel;\n        },\n        set: function set(_) {\n          rotateYLabel = _;\n        }\n      },\n      showMaxMin: {\n        get: function get() {\n          return showMaxMin;\n        },\n        set: function set(_) {\n          showMaxMin = _;\n        }\n      },\n      axisLabel: {\n        get: function get() {\n          return axisLabelText;\n        },\n        set: function set(_) {\n          axisLabelText = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      fontSize: {\n        get: function get() {\n          return fontSize;\n        },\n        set: function set(_) {\n          fontSize = _;\n        }\n      },\n      tickFormatMaxMin: {\n        get: function get() {\n          return tickFormatMaxMin;\n        },\n        set: function set(_) {\n          tickFormatMaxMin = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      scale: {\n        get: function get() {\n          return scale;\n        },\n        set: function set(_) {\n          scale = _;\n          axis.scale(scale);\n          isOrdinal = typeof scale.rangeBands === 'function';\n          nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n    return chart;\n  };\n\n  nv.models.boxPlot = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000),\n        // Create semi-unique ID in case user doesn't select one\n    xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.label;\n    },\n        // Default data model selectors.\n    getQ1 = function getQ1(d) {\n      return d.values.Q1;\n    },\n        getQ2 = function getQ2(d) {\n      return d.values.Q2;\n    },\n        getQ3 = function getQ3(d) {\n      return d.values.Q3;\n    },\n        getWl = function getWl(d) {\n      return d.values.whisker_low;\n    },\n        getWh = function getWh(d) {\n      return d.values.whisker_high;\n    },\n        getColor = function getColor(d) {\n      return d.color;\n    },\n        getOlItems = function getOlItems(d) {\n      return d.values.outliers;\n    },\n        getOlValue = function getOlValue(d, i, j) {\n      return d;\n    },\n        getOlLabel = function getOlLabel(d, i, j) {\n      return d;\n    },\n        getOlColor = function getOlColor(d, i, j) {\n      return undefined;\n    },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain,\n        xRange,\n        yDomain,\n        yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        xScale.domain(xDomain || data.map(function (d, i) {\n          return getX(d, i);\n        })).rangeBands(xRange || [0, availableWidth], 0.1); // if we know yDomain, no need to calculate\n\n        var yData = [];\n\n        if (!yDomain) {\n          // (y-range is based on quartiles, whiskers and outliers)\n          var values = [],\n              yMin,\n              yMax;\n          data.forEach(function (d, i) {\n            var q1 = getQ1(d),\n                q3 = getQ3(d),\n                wl = getWl(d),\n                wh = getWh(d);\n            var olItems = getOlItems(d);\n\n            if (olItems) {\n              olItems.forEach(function (e, i) {\n                values.push(getOlValue(e, i, undefined));\n              });\n            }\n\n            if (wl) {\n              values.push(wl);\n            }\n\n            if (q1) {\n              values.push(q1);\n            }\n\n            if (q3) {\n              values.push(q3);\n            }\n\n            if (wh) {\n              values.push(wh);\n            }\n          });\n          yMin = d3.min(values);\n          yMax = d3.max(values);\n          yData = [yMin, yMax];\n        }\n\n        yScale.domain(yDomain || yData);\n        yScale.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        xScale0 = xScale0 || xScale;\n        yScale0 = yScale0 || yScale.copy().range([yScale(0), yScale(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var boxplots = wrap.selectAll('.nv-boxplot').data(function (d) {\n          return d;\n        });\n        var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        boxplots.attr('class', 'nv-boxplot').attr('transform', function (d, i, j) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        boxplots.watchTransition(renderWatch, 'nv-boxplot: boxplots').style('stroke-opacity', 1).style('fill-opacity', 0.75).delay(function (d, i) {\n          return i * duration / data.length;\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        });\n        boxplots.exit().remove(); // ----- add the SVG elements for each boxPlot -----\n        // conditionally append whisker lines\n\n        boxEnter.each(function (d, i) {\n          var box = d3.select(this);\n          [getWl, getWh].forEach(function (f) {\n            if (f(d) !== undefined && f(d) !== null) {\n              var key = f === getWl ? 'low' : 'high';\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n            }\n          });\n        });\n\n        var box_width = function box_width() {\n          return maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9);\n        };\n\n        var box_left = function box_left() {\n          return xScale.rangeBand() * 0.45 - box_width() / 2;\n        };\n\n        var box_right = function box_right() {\n          return xScale.rangeBand() * 0.45 + box_width() / 2;\n        }; // update whisker lines and ticks\n\n\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          var endpoint = f === getWl ? getQ1 : getQ3;\n          boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', xScale.rangeBand() * 0.45).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', xScale.rangeBand() * 0.45).attr('y2', function (d, i) {\n            return yScale(endpoint(d));\n          });\n          boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', box_left).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', box_right).attr('y2', function (d, i) {\n            return yScale(f(d));\n          });\n        });\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          boxEnter.selectAll('.nv-boxplot-' + key).on('mouseover', function (d, i, j) {\n            d3.select(this).classed('hover', true);\n            dispatch.elementMouseover({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mouseout', function (d, i, j) {\n            d3.select(this).classed('hover', false);\n            dispatch.elementMouseout({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mousemove', function (d, i) {\n            dispatch.elementMousemove({\n              e: d3.event\n            });\n          });\n        }); // boxes\n\n        boxEnter.append('rect').attr('class', 'nv-boxplot-box') // tooltip events\n        .on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        }); // box transitions\n\n        boxplots.select('rect.nv-boxplot-box').watchTransition(renderWatch, 'nv-boxplot: boxes').attr('y', function (d, i) {\n          return yScale(getQ3(d));\n        }).attr('width', box_width).attr('x', box_left).attr('height', function (d, i) {\n          return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1;\n        }).style('fill', function (d, i) {\n          return getColor(d) || color(d, i);\n        }).style('stroke', function (d, i) {\n          return getColor(d) || color(d, i);\n        }); // median line\n\n        boxEnter.append('line').attr('class', 'nv-boxplot-median');\n        boxplots.select('line.nv-boxplot-median').watchTransition(renderWatch, 'nv-boxplot: boxplots line').attr('x1', box_left).attr('y1', function (d, i) {\n          return yScale(getQ2(d));\n        }).attr('x2', box_right).attr('y2', function (d, i) {\n          return yScale(getQ2(d));\n        }); // outliers\n\n        var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function (d) {\n          return getOlItems(d) || [];\n        });\n        outliers.enter().append('circle').style('fill', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('stroke', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('z-index', 9000).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        });\n        outliers.attr('class', 'nv-boxplot-outlier');\n        outliers.watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier').attr('cx', xScale.rangeBand() * 0.45).attr('cy', function (d, i, j) {\n          return yScale(getOlValue(d, i, j));\n        }).attr('r', '3');\n        outliers.exit().remove(); //store old scales for use in transitions on update\n\n        xScale0 = xScale.copy();\n        yScale0 = yScale.copy();\n      });\n      renderWatch.renderEnd('nv-boxplot immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      maxBoxWidth: {\n        get: function get() {\n          return maxBoxWidth;\n        },\n        set: function set(_) {\n          maxBoxWidth = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      q1: {\n        get: function get() {\n          return getQ1;\n        },\n        set: function set(_) {\n          getQ1 = _;\n        }\n      },\n      q2: {\n        get: function get() {\n          return getQ2;\n        },\n        set: function set(_) {\n          getQ2 = _;\n        }\n      },\n      q3: {\n        get: function get() {\n          return getQ3;\n        },\n        set: function set(_) {\n          getQ3 = _;\n        }\n      },\n      wl: {\n        get: function get() {\n          return getWl;\n        },\n        set: function set(_) {\n          getWl = _;\n        }\n      },\n      wh: {\n        get: function get() {\n          return getWh;\n        },\n        set: function set(_) {\n          getWh = _;\n        }\n      },\n      itemColor: {\n        get: function get() {\n          return getColor;\n        },\n        set: function set(_) {\n          getColor = _;\n        }\n      },\n      outliers: {\n        get: function get() {\n          return getOlItems;\n        },\n        set: function set(_) {\n          getOlItems = _;\n        }\n      },\n      outlierValue: {\n        get: function get() {\n          return getOlValue;\n        },\n        set: function set(_) {\n          getOlValue = _;\n        }\n      },\n      outlierLabel: {\n        get: function get() {\n          return getOlLabel;\n        },\n        set: function set(_) {\n          getOlLabel = _;\n        }\n      },\n      outlierColor: {\n        get: function get() {\n          return getOlColor;\n        },\n        set: function set(_) {\n          getOlColor = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return xScale;\n        },\n        set: function set(_) {\n          xScale = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return yScale;\n        },\n        set: function set(_) {\n          yScale = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n      y: {\n        get: function get() {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n          return {};\n        },\n        set: function set(_) {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.boxPlotChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x,\n        y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(boxplot);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = (width || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n        var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n        // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\n        if (!data || !data.length) {\n          var noDataText = container.selectAll('.nv-noData').data([noData]);\n          noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n          noDataText.attr('x', margin.left + availableWidth / 2).attr('y', margin.top + availableHeight / 2).text(function (d) {\n            return d;\n          });\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = boxplot.xScale();\n        y = boxplot.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(' + availableWidth + ',0)');\n        } // Main Chart Component(s)\n\n\n        boxplot.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(boxplot);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + boxplot.id()).append('rect');\n        g.select('#nv-x-label-clip-' + boxplot.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x).ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')';\n            });\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y).ticks(Math.floor(availableHeight / 36)) // can't use nv.utils.calcTicksY with Object data\n          .tickSize(-availableWidth, 0);\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select('.nv-zeroLine line').attr('x1', 0).attr('x2', availableWidth).attr('y1', y(0)).attr('y2', y(0)); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n      });\n      renderWatch.renderEnd('nv-boxplot chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.data(evt).hidden(false);\n    });\n    boxplot.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.data(evt).hidden(true);\n    });\n    boxplot.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      tooltipContent: {\n        get: function get() {\n          return tooltip;\n        },\n        set: function set(_) {\n          tooltip = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          boxplot.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          boxplot.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bullet = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        markerLines = function markerLines(d) {\n      return d.markerLines ? d.markerLines : [0];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        rangeLabels = function rangeLabels(d) {\n      return d.rangeLabels ? d.rangeLabels : [];\n    },\n        markerLabels = function markerLabels(d) {\n      return d.markerLabels ? d.markerLabels : [];\n    },\n        markerLineLabels = function markerLineLabels(d) {\n      return d.markerLineLabels ? d.markerLineLabels : [];\n    },\n        measureLabels = function measureLabels(d) {\n      return d.measureLabels ? d.measureLabels : [];\n    },\n        forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        width = 380,\n        height = 30,\n        container = null,\n        tickFormat = null,\n        color = nv.utils.getColor(['#1f77b4']),\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove'),\n        defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"],\n        legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"],\n        duration = 1000;\n\n    function sortLabels(labels, values) {\n      var lz = labels.slice();\n      labels.sort(function (a, b) {\n        var iA = lz.indexOf(a);\n        var iB = lz.indexOf(b);\n        return d3.descending(values[iA], values[iB]);\n      });\n    }\n\n    ;\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var rangez = ranges.call(this, d, i).slice(),\n            markerz = markers.call(this, d, i).slice(),\n            markerLinez = markerLines.call(this, d, i).slice(),\n            measurez = measures.call(this, d, i).slice(),\n            rangeLabelz = rangeLabels.call(this, d, i).slice(),\n            markerLabelz = markerLabels.call(this, d, i).slice(),\n            markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n            measureLabelz = measureLabels.call(this, d, i).slice(); // Sort labels according to their sorted values\n\n        sortLabels(rangeLabelz, rangez);\n        sortLabels(markerLabelz, markerz);\n        sortLabels(markerLineLabelz, markerLinez);\n        sortLabels(measureLabelz, measurez); // sort values descending\n\n        rangez.sort(d3.descending);\n        markerz.sort(d3.descending);\n        markerLinez.sort(d3.descending);\n        measurez.sort(d3.descending); // Setup Scales\n        // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain(d3.extent(d3.merge([forceX, rangez]))).range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n        var rangeMin = d3.min(rangez),\n            //rangez[2]\n        rangeMax = d3.max(rangez),\n            //rangez[0]\n        rangeAvg = rangez[1]; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var rangeClassNames = 'nv-range nv-range' + i;\n\n          if (i <= 2) {\n            rangeClassNames = rangeClassNames + ' nv-range' + legacyRangeClassNames[i];\n          }\n\n          gEnter.append('rect').attr('class', rangeClassNames);\n        }\n\n        gEnter.append('rect').attr('class', 'nv-measure');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var xp0 = function xp0(d) {\n          return d < 0 ? x0(d) : x0(0);\n        },\n            xp1 = function xp1(d) {\n          return d < 0 ? x1(d) : x1(0);\n        };\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var range = rangez[i];\n          g.select('rect.nv-range' + i).datum(range).attr('height', availableHeight).transition().duration(duration).attr('width', w1(range)).attr('x', xp1(range));\n        }\n\n        g.select('rect.nv-measure').style('fill', color).attr('height', availableHeight / 3).attr('y', availableHeight / 3).on('mouseover', function () {\n          dispatch.elementMouseover({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function () {\n          dispatch.elementMouseout({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).transition().duration(duration).attr('width', measurez < 0 ? x1(0) - x1(measurez[0]) : x1(measurez[0]) - x1(0)).attr('x', xp1(measurez));\n        var h3 = availableHeight / 6;\n        var markerData = markerz.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"path.nv-markerTriangle\").data(markerData).enter().append('path').attr('class', 'nv-markerTriangle').attr('d', 'M0,' + h3 + 'L' + h3 + ',' + -h3 + ' ' + -h3 + ',' + -h3 + 'Z').on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"path.nv-markerTriangle\").data(markerData).transition().duration(duration).attr('transform', function (d) {\n          return 'translate(' + x1(d.value) + ',' + availableHeight / 2 + ')';\n        });\n        var markerLinesData = markerLinez.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLineLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"line.nv-markerLine\").data(markerLinesData).enter().append('line').attr('cursor', '').attr('class', 'nv-markerLine').attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('y1', '2').attr('x2', function (d) {\n          return x1(d.value);\n        }).attr('y2', availableHeight - 2).on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"line.nv-markerLine\").data(markerLinesData).transition().duration(duration).attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('x2', function (d) {\n          return x1(d.value);\n        });\n        wrap.selectAll('.nv-range').on('mouseover', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseover({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseout({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bulletChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        margin = {\n      top: 5,\n      right: 40,\n      bottom: 20,\n      left: 120\n    },\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        width = null,\n        height = 55,\n        tickFormat = null,\n        ticks = null,\n        noData = null,\n        dispatch = d3.dispatch();\n\n    tooltip.duration(0).headerEnabled(false);\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom,\n            that = this;\n\n        chart.update = function () {\n          chart(selection);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!d || !ranges.call(this, d, i)) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n            markerz = markers.call(this, d, i).slice().sort(d3.descending),\n            measurez = measures.call(this, d, i).slice().sort(d3.descending); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bulletWrap');\n        gEnter.append('g').attr('class', 'nv-titles');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain([0, Math.max(rangez[0], markerz[0] || 0, measurez[0])]) // TODO: need to allow forceX and forceY, and xDomain, yDomain\n        .range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var title = gEnter.select('.nv-titles').append('g').attr('text-anchor', 'end').attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n        title.append('text').attr('class', 'nv-title').text(function (d) {\n          return d.title;\n        });\n        title.append('text').attr('class', 'nv-subtitle').attr('dy', '1em').text(function (d) {\n          return d.subtitle;\n        });\n        bullet.width(availableWidth).height(availableHeight);\n        var bulletWrap = g.select('.nv-bulletWrap');\n        d3.transition(bulletWrap).call(bullet); // Compute the tick format.\n\n        var format = tickFormat || x1.tickFormat(availableWidth / 100); // Update the tick groups.\n\n        var tick = g.selectAll('g.nv-tick').data(x1.ticks(ticks ? ticks : availableWidth / 50), function (d) {\n          return this.textContent || format(d);\n        }); // Initialize the ticks with the old scale, x0.\n\n        var tickEnter = tick.enter().append('g').attr('class', 'nv-tick').attr('transform', function (d) {\n          return 'translate(' + x0(d) + ',0)';\n        }).style('opacity', 1e-6);\n        tickEnter.append('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickEnter.append('text').attr('text-anchor', 'middle').attr('dy', '1em').attr('y', availableHeight * 7 / 6).text(format); // Transition the updating ticks to the new scale, x1.\n\n        var tickUpdate = d3.transition(tick).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1);\n        tickUpdate.select('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickUpdate.select('text').attr('y', availableHeight * 7 / 6); // Transition the exiting ticks to the new scale, x1.\n\n        d3.transition(tick.exit()).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1e-6).remove();\n      });\n      d3.timer.flush();\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bullet.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: evt.label,\n        value: evt.value,\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bullet.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bullet.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.candlestickBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Width of the candlestick bars.\n\n        var barWidth = availableWidth / data[0].values.length * .45; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        var tickGroups = ticks.enter().append('g'); // The colors are currently controlled by CSS.\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        var lines = tickGroups.append('line').attr('class', 'nv-candlestick-lines').attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        var rects = tickGroups.append('rect').attr('class', 'nv-candlestick-rects nv-bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n        ticks.select('.nv-candlestick-lines').transition().attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        ticks.select('.nv-candlestick-rects').transition().attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-candlestickBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.cumulativeLineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        showControls = true,\n        useInteractiveGuideline = false,\n        rescaleY = true,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        id = lines.id(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        average = function average(d) {\n      return d.average;\n    },\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250,\n        duration = 250,\n        noErrorCheck = false //if set to TRUE, will bypass an error check in the indexify function.\n    ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear(),\n        index = {\n      i: 0,\n      x: 0\n    },\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        currentYDomain;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          index: index.i,\n          rescaleY: rescaleY\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.index !== undefined) index.i = state.index;\n        if (state.rescaleY !== undefined) rescaleY = state.rescaleY;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        container.classed('nv-chart-' + id, true);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        }\n\n        var indexDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd);\n\n        function dragStart(d, i) {\n          d3.select(chart.container).style('cursor', 'ew-resize');\n        }\n\n        function dragMove(d, i) {\n          index.x = d3.event.x;\n          index.i = Math.round(dx.invert(index.x));\n          updateZero();\n        }\n\n        function dragEnd(d, i) {\n          d3.select(chart.container).style('cursor', 'auto'); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = lines.xScale();\n        y = lines.yScale();\n        dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n        .range([0, availableWidth]).clamp(true);\n        var data = indexify(index.i, data); // initialize the starting yDomain for the not-rescale case after indexify (to have calculated point.display)\n\n        if (typeof currentYDomain === \"undefined\") {\n          currentYDomain = getCurrentYDomain(data);\n        }\n\n        if (!rescaleY) {\n          lines.yDomain(currentYDomain);\n          lines.clipEdge(true);\n        } else {\n          lines.yDomain(null);\n        } // Setup containers and skeleton of chart\n\n\n        var interactivePointerEvents = useInteractiveGuideline ? \"none\" : \"all\";\n        var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-background');\n        gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\", interactivePointerEvents);\n        gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: 'Re-scale y-axis',\n            disabled: !rescaleY\n          }];\n          controls.width(140).color(['#444', '#444', '#444']).rightAlign(false).margin({\n            top: 5,\n            right: 0,\n            bottom: 5,\n            left: 20\n          });\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Show error if index point value is 0 (division by zero avoided)\n\n\n        var tempDisabled = data.filter(function (d) {\n          return d.tempDisabled;\n        });\n        wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\n        if (tempDisabled.length) {\n          wrap.append('text').attr('class', 'tempDisabled').attr('x', availableWidth / 2).attr('y', '-.71em').style('text-anchor', 'end').text(tempDisabled.map(function (d) {\n            return d.key;\n          }).join(', ') + ' values cannot be calculated for this time period.');\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        gEnter.select('.nv-background').append('rect');\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines //.x(function(d) { return d.x })\n        .y(function (d) {\n          return d.display.y;\n        }).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].tempDisabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled && !d.tempDisabled;\n        }));\n        linesWrap.call(lines); //Store a series index number in the data array.\n\n        data.forEach(function (d, i) {\n          d.seriesIndex = i;\n        });\n        var avgLineData = data.filter(function (d) {\n          return !d.disabled && !!average(d);\n        });\n        var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\").data(avgLineData, function (d) {\n          return d.key;\n        });\n\n        var getAvgLineY = function getAvgLineY(d) {\n          //If average lines go off the svg element, clamp them to the svg bounds.\n          var yVal = y(average(d));\n          if (yVal < 0) return 0;\n          if (yVal > availableHeight) return availableHeight;\n          return yVal;\n        };\n\n        avgLines.enter().append('line').style('stroke-width', 2).style('stroke-dasharray', '10,10').style('stroke', function (d, i) {\n          return lines.color()(d, d.seriesIndex);\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.style('stroke-opacity', function (d) {\n          //If average lines go offscreen, make them transparent\n          var yVal = y(average(d));\n          if (yVal < 0 || yVal > availableHeight) return 0;\n          return 1;\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.exit().remove(); //Create index line\n\n        var indexLine = linesWrap.selectAll('.nv-indexLine').data([index]);\n        indexLine.enter().append('rect').attr('class', 'nv-indexLine').attr('width', 3).attr('x', -2).attr('fill', 'red').attr('fill-opacity', .5).style(\"pointer-events\", \"all\").call(indexDrag);\n        indexLine.attr('transform', function (d) {\n          return 'translate(' + dx(d.i) + ',0)';\n        }).attr('height', availableHeight); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 70, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        function updateZero() {\n          indexLine.data([index]); //When dragging the index line, turn off line transitions.\n          // Then turn them back on when done dragging.\n\n          var oldDuration = chart.duration();\n          chart.duration(0);\n          chart.update();\n          chart.duration(oldDuration);\n        }\n\n        g.select('.nv-background rect').on('click', function () {\n          index.x = d3.mouse(this)[0];\n          index.i = Math.round(dx.invert(index.x)); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        lines.dispatch.on('elementClick', function (e) {\n          index.i = e.pointIndex;\n          index.x = dx(index.i); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n          rescaleY = !d.disabled;\n          state.rescaleY = rescaleY;\n\n          if (!rescaleY) {\n            currentYDomain = getCurrentYDomain(data); // rescale is turned off, so set the currentYDomain\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !(series.disabled || series.tempDisabled);\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            lines.highlightPoint(i, pointIndex, true);\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex)\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex), pointIndex);\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.index !== 'undefined') {\n            index.i = e.index;\n            index.x = dx(index.i);\n            state.index = e.index;\n            indexLine.data([index]);\n          }\n\n          if (typeof e.rescaleY !== 'undefined') {\n            rescaleY = e.rescaleY;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('cumulativeLineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var point = {\n        x: chart.x()(evt.point),\n        y: chart.y()(evt.point),\n        color: evt.point.color\n      };\n      evt.point = point;\n      tooltip.data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n\n    function indexify(idx, data) {\n      if (!indexifyYGetter) indexifyYGetter = lines.y();\n      return data.map(function (line, i) {\n        if (!line.values) {\n          return line;\n        }\n\n        var indexValue = line.values[idx];\n\n        if (indexValue == null) {\n          return line;\n        }\n\n        var v = indexifyYGetter(indexValue, idx); // avoid divide by zero\n\n        if (Math.abs(v) < 0.00001 && !noErrorCheck) {\n          line.tempDisabled = true;\n          return line;\n        }\n\n        line.tempDisabled = false;\n        line.values = line.values.map(function (point, pointIndex) {\n          point.display = {\n            'y': (indexifyYGetter(point, pointIndex) - v) / v\n          };\n          return point;\n        });\n        return line;\n      });\n    }\n\n    function getCurrentYDomain(data) {\n      var seriesDomains = data.filter(function (series) {\n        return !(series.disabled || series.tempDisabled);\n      }).map(function (series, i) {\n        return d3.extent(series.values, function (d) {\n          return d.display.y;\n        });\n      });\n      return [d3.min(seriesDomains, function (d) {\n        return d[0];\n      }), d3.max(seriesDomains, function (d) {\n        return d[1];\n      })];\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      average: {\n        get: function get() {\n          return average;\n        },\n        set: function set(_) {\n          average = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noErrorCheck: {\n        get: function get() {\n          return noErrorCheck;\n        },\n        set: function set(_) {\n          noErrorCheck = _;\n        }\n      },\n      // options that require extra logic in the setter\n      rescaleY: {\n        get: function get() {\n          return rescaleY;\n        },\n        set: function set(_) {\n          rescaleY = _;\n          chart.state.rescaleY = _; // also update state\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n            chart.useVoronoi(false);\n          }\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          lines.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating by adding necessary features to multiBar model\n\n\n  nv.models.discreteBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        showValues = false,\n        valueFormat = d3.format(',.2f'),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        rectClass = 'discreteBar',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], .1);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return d.y;\n        }).concat(forceY))); // If showValues, pad the Y axis range to account for label height\n\n        if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);else y.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        x0 = x0 || x;\n        y0 = y0 || y.copy().range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'discreteBar: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'discreteBar: groups').style('stroke-opacity', 1).style('fill-opacity', .75);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + (x(getX(d, i)) + x.rangeBand() * .05) + ', ' + y(0) + ')';\n        }).on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        barsEnter.append('rect').attr('height', 0).attr('width', x.rangeBand() * .9 / data.length);\n\n        if (showValues) {\n          barsEnter.append('text').attr('text-anchor', 'middle');\n          bars.select('text').text(function (d, i) {\n            return valueFormat(getY(d, i));\n          }).watchTransition(renderWatch, 'discreteBar: bars text').attr('x', x.rangeBand() * .9 / 2).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(getY(d, i)) - y(0) + 12 : -4;\n          });\n        } else {\n          bars.selectAll('text').remove();\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).style('fill', function (d, i) {\n          return d.color || color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).select('rect').attr('class', rectClass).watchTransition(renderWatch, 'discreteBar: bars rect').attr('width', x.rangeBand() * .9 / data.length);\n        bars.watchTransition(renderWatch, 'discreteBar: bars') //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n        .attr('transform', function (d, i) {\n          var left = x(getX(d, i)) + x.rangeBand() * .05,\n              top = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : //make 1 px positive bars show up above y=0\n          y(getY(d, i));\n          return 'translate(' + left + ', ' + top + ')';\n        }).select('rect').attr('height', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('discreteBar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      rectClass: {\n        get: function get() {\n          return rectClass;\n        },\n        set: function set(_) {\n          rectClass = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.discreteBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x,\n        y,\n        noData = null,\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).keyFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(discretebar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = discretebar.xScale();\n        y = discretebar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        discretebar.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(discretebar);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + discretebar.id()).append('rect');\n        g.select('#nv-x-label-clip-' + discretebar.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + (y.range()[0] + (discretebar.showValues() && y.domain()[0] < 0 ? 16 : 0)) + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')';\n            });\n          }\n\n          if (rotateLabels) {\n            xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", 0).attr(\"x2\", rightAlignYAxis ? -availableWidth : availableWidth).attr(\"y1\", y(0)).attr(\"y2\", y(0));\n      });\n      renderWatch.renderEnd('discreteBar chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    discretebar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    discretebar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          discretebar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          discretebar.color(color);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.distribution = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 400 //technically width or height depending on x or y....\n    ,\n        size = 8,\n        axis = 'x' // 'x' or 'y'... horizontal or vertical\n    ,\n        getData = function getData(d) {\n      return d[axis];\n    } // defaults d.x or d.y\n    ,\n        color = nv.utils.defaultColor(),\n        scale = d3.scale.linear(),\n        domain,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n            naxis = axis == 'x' ? 'y' : 'x',\n            container = d3.select(this);\n        nv.utils.initSVG(container); //------------------------------------------------------------\n        // Setup Scales\n\n        scale0 = scale0 || scale; //------------------------------------------------------------\n        //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-distribution').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //------------------------------------------------------------\n\n        var distWrap = g.selectAll('g.nv-dist').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        distWrap.enter().append('g');\n        distWrap.attr('class', function (d, i) {\n          return 'nv-dist nv-series-' + i;\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        var dist = distWrap.selectAll('line.nv-dist' + axis).data(function (d) {\n          return d.values;\n        });\n        dist.enter().append('line').attr(axis + '1', function (d, i) {\n          return scale0(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale0(getData(d, i));\n        });\n        renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        }).style('stroke-opacity', 0).remove();\n        dist.attr('class', function (d, i) {\n          return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i;\n        }).attr(naxis + '1', 0).attr(naxis + '2', size);\n        renderWatch.transition(dist, 'dist') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        });\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('distribution immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n      margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return chart;\n    };\n\n    chart.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return chart;\n    };\n\n    chart.axis = function (_) {\n      if (!arguments.length) return axis;\n      axis = _;\n      return chart;\n    };\n\n    chart.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return chart;\n    };\n\n    chart.getData = function (_) {\n      if (!arguments.length) return getData;\n      getData = d3.functor(_);\n      return chart;\n    };\n\n    chart.scale = function (_) {\n      if (!arguments.length) return scale;\n      scale = _;\n      return chart;\n    };\n\n    chart.color = function (_) {\n      if (!arguments.length) return color;\n      color = nv.utils.getColor(_);\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      return chart;\n    }; //============================================================\n\n\n    return chart;\n  };\n\n  nv.models.focus = function (content) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        brush = d3.svg.brush();\n    var margin = {\n      top: 10,\n      right: 0,\n      bottom: 30,\n      left: 0\n    },\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = 70,\n        showXAxis = true,\n        showYAxis = false,\n        rightAlignYAxis = false,\n        ticks = null,\n        x,\n        y,\n        brushExtent = null,\n        duration = 250,\n        dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd'),\n        syncBrushing = true;\n    content.interactive(false);\n    content.pointActive(function (d) {\n      return false;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(content);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom;\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this; // Setup Scales\n\n        x = content.xScale();\n        y = content.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-focus').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        gEnter.append('g').attr('class', 'nv-background').append('rect');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-contentWrap');\n        gEnter.append('g').attr('class', 'nv-brushBackground');\n        gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        }\n\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        content.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var contentWrap = g.select('.nv-contentWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        d3.transition(contentWrap).call(content); // Setup Brush\n\n        brush.x(x).on('brush', function () {\n          onBrush(syncBrushing);\n        });\n        brush.on('brushend', function () {\n          if (!syncBrushing) {\n            dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n          }\n        });\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect').attr('height', availableHeight);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n        onBrush(true);\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          d3.transition(g.select('.nv-y.nv-axis')).call(yAxis);\n        }\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')'); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x(d[0]) - x.range()[0],\n                rightWidth = availableWidth - x(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush(shouldDispatch) {\n          brushExtent = brush.empty() ? null : brush.extent();\n          var extent = brush.empty() ? x.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG();\n\n          if (shouldDispatch) {\n            dispatch.onBrush(extent);\n          }\n        }\n      });\n      renderWatch.renderEnd('focus immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      syncBrushing: {\n        get: function get() {\n          return syncBrushing;\n        },\n        set: function set(_) {\n          syncBrushing = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          content.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          content.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return content.interpolate();\n        },\n        set: function set(_) {\n          content.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return content.x();\n        },\n        set: function set(_) {\n          content.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return content.y();\n        },\n        set: function set(_) {\n          content.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.forceDirectedGraph = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        dispatch = d3.dispatch('renderEnd'),\n        color = nv.utils.getColor(['#000']),\n        tooltip = nv.models.tooltip(),\n        noData = null // Force directed graph specific parameters [default values]\n    ,\n        linkStrength = 0.1,\n        friction = 0.9,\n        linkDist = 30,\n        charge = -120,\n        gravity = 0.1,\n        theta = 0.8,\n        alpha = 0.1,\n        radius = 5 // These functions allow to add extra attributes to ndes and links\n    ,\n        nodeExtras = function nodeExtras(nodes) {\n      /* Do nothing */\n    },\n        linkExtras = function linkExtras(links) {\n      /* Do nothing */\n    },\n        getX = d3.functor(0.0),\n        getY = d3.functor(0.0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        container.attr(\"width\", availableWidth).attr(\"height\", availableHeight); // Display No Data message if there's nothing to show.\n\n        if (!data || !data.links || !data.nodes) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        container.selectAll('*').remove(); // Collect names of all fields in the nodes\n\n        var nodeFieldSet = new Set();\n        data.nodes.forEach(function (node) {\n          var keys = Object.keys(node);\n          keys.forEach(function (key) {\n            nodeFieldSet.add(key);\n          });\n        });\n        var force = d3.layout.force().nodes(data.nodes).links(data.links).size([availableWidth, availableHeight]).linkStrength(linkStrength).friction(friction).linkDistance(linkDist).charge(charge).gravity(gravity).theta(theta).alpha(alpha).start();\n        var link = container.selectAll(\".link\").data(data.links).enter().append(\"line\").attr(\"class\", \"nv-force-link\").style(\"stroke-width\", function (d) {\n          return Math.sqrt(d.value);\n        });\n        var node = container.selectAll(\".node\").data(data.nodes).enter().append(\"g\").attr(\"class\", \"nv-force-node\").call(force.drag);\n        node.append(\"circle\").attr(\"r\", radius).style(\"fill\", function (d) {\n          return color(d);\n        }).on(\"mouseover\", function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.py);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.px); // Add 'series' object to\n\n          var nodeColor = color(evt);\n          evt.series = [];\n          nodeFieldSet.forEach(function (field) {\n            evt.series.push({\n              color: nodeColor,\n              key: field,\n              value: evt[field]\n            });\n          });\n          tooltip.data(evt).hidden(false);\n        }).on(\"mouseout\", function (d) {\n          tooltip.hidden(true);\n        });\n        tooltip.headerFormatter(function (d) {\n          return \"Node\";\n        }); // Apply extra attributes to nodes and links (if any)\n\n        linkExtras(link);\n        nodeExtras(node);\n        force.on(\"tick\", function () {\n          link.attr(\"x1\", function (d) {\n            return d.source.x;\n          }).attr(\"y1\", function (d) {\n            return d.source.y;\n          }).attr(\"x2\", function (d) {\n            return d.target.x;\n          }).attr(\"y2\", function (d) {\n            return d.target.y;\n          });\n          node.attr(\"transform\", function (d) {\n            return \"translate(\" + d.x + \", \" + d.y + \")\";\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      // Force directed graph specific parameters\n      linkStrength: {\n        get: function get() {\n          return linkStrength;\n        },\n        set: function set(_) {\n          linkStrength = _;\n        }\n      },\n      friction: {\n        get: function get() {\n          return friction;\n        },\n        set: function set(_) {\n          friction = _;\n        }\n      },\n      linkDist: {\n        get: function get() {\n          return linkDist;\n        },\n        set: function set(_) {\n          linkDist = _;\n        }\n      },\n      charge: {\n        get: function get() {\n          return charge;\n        },\n        set: function set(_) {\n          charge = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      theta: {\n        get: function get() {\n          return theta;\n        },\n        set: function set(_) {\n          theta = _;\n        }\n      },\n      alpha: {\n        get: function get() {\n          return alpha;\n        },\n        set: function set(_) {\n          alpha = _;\n        }\n      },\n      radius: {\n        get: function get() {\n          return radius;\n        },\n        set: function set(_) {\n          radius = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nodeExtras: {\n        get: function get() {\n          return nodeExtras;\n        },\n        set: function set(_) {\n          nodeExtras = _;\n        }\n      },\n      linkExtras: {\n        get: function get() {\n          return linkExtras;\n        },\n        set: function set(_) {\n          linkExtras = _;\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.furiousLegend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 28 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('circle');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('rect');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (vers == 'furious' && expanded) return;\n          dispatch.legendDblclick(d, i);\n\n          if (updateState) {\n            // make sure we re-get data in case it was modified\n            var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n            // is to set all other series' to false, and make the double clicked series enabled.\n\n            data.forEach(function (series) {\n              series.disabled = true;\n              if (vers == 'furious') series.userDisabled = series.disabled;\n            });\n            d.disabled = false;\n            if (vers == 'furious') d.userDisabled = d.disabled;\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              })\n            });\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var legendWidth = 0;\n          var columnWidths = [];\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15);\n        }\n\n        seriesShape.style('fill', setBGColor).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? color(d, i) : '#fff';\n        } else if (!expanded) {\n          return !!d.disabled ? color(d, i) : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#fff' : color(d, i);\n        } else {\n          return !!d.disabled ? '#fff' : color(d, i);\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating and using multibar with single series for this\n\n\n  nv.models.historicalBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceX = [],\n        forceY = [0],\n        padData = false,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        interactive = true;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bars');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var bars = wrap.select('.nv-bars').selectAll('.nv-bar').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return getX(d, i);\n        });\n        bars.exit().remove();\n        bars.enter().append('rect').attr('x', 0).attr('y', function (d, i) {\n          return nv.utils.NaNtoZero(y(Math.max(0, getY(d, i))));\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.abs(y(getY(d, i)) - y(0)));\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }).on('mouseover', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          if (!interactive) return;\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('fill', function (d, i) {\n          return color(d, i);\n        }).attr('class', function (d, i, j) {\n          return (getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i;\n        }).watchTransition(renderWatch, 'bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }) //TODO: better width calculations that don't assume always uniform data spacing;w\n        .attr('width', availableWidth / data[0].values.length * .9);\n        bars.watchTransition(renderWatch, 'bars').attr('y', function (d, i) {\n          var rval = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i));\n          return nv.utils.NaNtoZero(rval);\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d, i)) - y(0)), 1));\n        });\n      });\n      renderWatch.renderEnd('historicalBar immediate');\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      container.select(\".nv-bars .nv-bar-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-bars .nv-bar.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.historicalBarChart = function (bar_model) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 90,\n      bottom: 50,\n      left: 90\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        state = {},\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        renderWatch.models(bars);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this; //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = bars.xScale();\n        y = bars.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        bars.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(bars); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').transition().call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').transition().call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          bars.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            bars.highlightPoint(pointIndex, true);\n            var point = series.values[pointIndex];\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex),\n              data: series.values[pointIndex]\n            });\n          });\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex));\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          dispatch.tooltipHide();\n          bars.clearHighlights();\n        });\n        legend.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n\n          if (!data.filter(function (d) {\n            return !d.disabled;\n          }).length) {\n            data.map(function (d) {\n              d.disabled = false;\n              wrap.selectAll('.nv-series').classed('disabled', false);\n              return d;\n            });\n          }\n\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          selection.transition().call(chart);\n        });\n        legend.dispatch.on('legendDblclick', function (d) {\n          //Double clicking should always enable current series, and disabled all others.\n          data.forEach(function (d) {\n            d.disabled = true;\n          });\n          d.disabled = false;\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('historicalBarChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          bars.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n          renderWatch.reset(transitionDuration);\n          yAxis.duration(transitionDuration);\n          xAxis.duration(transitionDuration);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // ohlcChart is just a historical chart with ohlc bars and some tweaks\n\n\n  nv.models.ohlcBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  }; // candlestickChart is just a historical chart with candlestick bars and some tweaks\n\n\n  nv.models.candlestickBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  };\n\n  nv.models.legend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 32 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        enableDoubleClick = true //If true, legend will enable double click handling\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        if (rightAlign) wrap.attr('transform', 'translate(' + -margin.right + ',' + margin.top + ')');else wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('.nv-legend-symbol');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('.nv-legend-symbol');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (enableDoubleClick) {\n            if (vers == 'furious' && expanded) return;\n            dispatch.legendDblclick(d, i);\n\n            if (updateState) {\n              // make sure we re-get data in case it was modified\n              var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n              // is to set all other series' to false, and make the double clicked series enabled.\n\n              data.forEach(function (series) {\n                series.disabled = true;\n                if (vers == 'furious') series.userDisabled = series.disabled;\n              });\n              d.disabled = false;\n              if (vers == 'furious') d.userDisabled = d.disabled;\n              dispatch.stateChange({\n                disabled: data.map(function (d) {\n                  return !!d.disabled;\n                })\n              });\n            }\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var legendWidth = 0;\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var columnWidths = [];\n          legendWidth = 0;\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n\n            if (legendWidth < xpos + maxwidth) {\n              legendWidth = xpos + maxwidth;\n            }\n\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15); // The background for the expanded legend (UI)\n\n          gEnter.insert('rect', ':first-child').attr('class', 'nv-legend-bg').attr('fill', '#eee') // .attr('stroke', '#444')\n          .attr('opacity', 0);\n          var seriesBG = g.select('.nv-legend-bg');\n          seriesBG.transition().duration(300).attr('x', -versPadding).attr('width', legendWidth + versPadding - 12).attr('height', height + 10).attr('y', -margin.top - 10).attr('opacity', expanded ? 1 : 0);\n        }\n\n        seriesShape.style('fill', setBGColor).style('fill-opacity', setBGOpacity).style('stroke', setBGColor);\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? '#000' : '#fff';\n        } else if (!expanded) {\n          if (!d.color) d.color = color(d, i);\n          return !!d.disabled ? d.color : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#eee' : d.color || color(d, i);\n        } else {\n          return d.color || color(d, i);\n        }\n      }\n\n      function setBGOpacity(d, i) {\n        if (expanded && vers == 'furious') {\n          return 1;\n        } else {\n          return !!d.disabled ? 0 : 1;\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      enableDoubleClick: {\n        get: function get() {\n          return enableDoubleClick;\n        },\n        set: function set(_) {\n          enableDoubleClick = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.line = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        container = null,\n        strokeWidth = 1.5,\n        color = nv.utils.defaultColor() // a function that returns a color\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        isArea = function isArea(d) {\n      return d.area;\n    } // decides if a line is an area or just a line\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        interpolate = \"linear\" // controls the line interpolation\n    ,\n        duration = 250,\n        dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    scatter.pointSize(16) // default size\n    .pointDomain([16, 256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        scatter.width(availableWidth).height(availableHeight);\n        var scatterWrap = wrap.select('.nv-scatterWrap');\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + scatter.id()).append('rect');\n        wrap.select('#nv-edge-clip-' + scatter.id() + ' rect').attr('width', availableWidth).attr('height', availableHeight > 0 ? availableHeight : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        scatterWrap.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('stroke-width', function (d) {\n          return d.strokeWidth || strokeWidth;\n        }).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'line: groups').style('stroke-opacity', 1).style('fill-opacity', function (d) {\n          return d.fillOpacity || .5;\n        });\n        var areaPaths = groups.selectAll('path.nv-area').data(function (d) {\n          return isArea(d) ? [d] : [];\n        }); // this is done differently than lines because I need to check if series is an area\n\n        areaPaths.enter().append('path').attr('class', 'nv-area').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x0(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y0(getY(d, i)));\n          }).y1(function (d, i) {\n            return y0(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        groups.exit().selectAll('path.nv-area').remove();\n        areaPaths.watchTransition(renderWatch, 'line: areaPaths').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y(getY(d, i)));\n          }).y1(function (d, i) {\n            return y(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        var linePaths = groups.selectAll('path.nv-line').data(function (d) {\n          return [d.values];\n        });\n        linePaths.enter().append('path').attr('class', 'nv-line').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x0(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y0(getY(d, i)));\n        }));\n        linePaths.watchTransition(renderWatch, 'line: linePaths').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y(getY(d, i)));\n        })); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter; // Pass through events\n\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      },\n      isArea: {\n        get: function get() {\n          return isArea;\n        },\n        set: function set(_) {\n          isArea = d3.functor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          scatter.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          scatter.y(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          scatter.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.line());\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        focusEnable = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        duration = 250; // set options on sub-objects for this chart\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    lines.clipEdge(true).duration(0);\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n        /* Update `main' graph on brush update. */\n\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Setup Scales\n\n        x = lines.xScale();\n        y = lines.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-linesWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive');\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Main (Focus) Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(duration).call(yAxis);\n          }\n        }\n\n        g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')'); //============================================================\n        // Update Focus\n        //============================================================\n\n        if (!focusEnable && focus.brush.extent() === null) {\n          linesWrap.call(lines);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').style('display', focusEnable ? 'initial' : 'none').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled && !series.disableTooltip;\n          }).forEach(function (series, i) {\n            var extent = focus.brush.extent() !== null ? focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent() : x.domain();\n            var currentValues = series.values.filter(function (d, i) {\n              // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n              // (e.g. x domain is manually set to reverse the x-axis)\n              if (extent[0] <= extent[1]) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              } else {\n                return lines.x()(d, i) >= extent[1] && lines.x()(d, i) <= extent[0];\n              }\n            });\n            pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n            var point = currentValues[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue !== null) {\n              lines.highlightPoint(i, pointIndex, true);\n            }\n\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: pointYValue,\n              color: color(series, series.seriesIndex),\n              data: point\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var defaultValueFormatter = function defaultValueFormatter(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n          };\n\n          interactiveLayer.tooltip.valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n            value: chart.x()(singlePoint, pointIndex),\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on('elementClick', function (e) {\n          var pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series) {\n            var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            var yPos = chart.yScale()(chart.y()(point, pointIndex));\n            allData.push({\n              point: point,\n              pointIndex: pointIndex,\n              pos: [pointXLocation, yPos],\n              seriesIndex: series.seriesIndex,\n              series: series\n            });\n          });\n          lines.dispatch.elementClick(allData);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          focusLinesWrap.transition().duration(duration).call(lines); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('lineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      if (!evt.series.disableTooltip) {\n        tooltip.data(evt).hidden(false);\n      }\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // Focus options, mostly passed onto focus model.\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focus.showXAxis();\n        },\n        set: function set(_) {\n          focus.showXAxis(_);\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focus.showYAxis();\n        },\n        set: function set(_) {\n          focus.showYAxis(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          lines.duration(duration);\n          focus.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          lines.color(color);\n          focus.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return lines.interpolate();\n        },\n        set: function set(_) {\n          lines.interpolate(_);\n          focus.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n          focus.xTickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n          focus.yTickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return lines.x();\n        },\n        set: function set(_) {\n          lines.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return lines.y();\n        },\n        set: function set(_) {\n          lines.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines.interactive(false);\n            lines.useVoronoi(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineWithFocusChart = function () {\n    return nv.models.lineChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  };\n\n  nv.models.linePlusBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        lines2 = nv.models.line(),\n        bars = nv.models.historicalBar(),\n        bars2 = nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        x2Axis = nv.models.axis(),\n        y1Axis = nv.models.axis(),\n        y2Axis = nv.models.axis(),\n        y3Axis = nv.models.axis(),\n        y4Axis = nv.models.axis(),\n        legend = nv.models.legend(),\n        brush = d3.svg.brush(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        marginTop = null,\n        margin2 = {\n      top: 0,\n      right: 30,\n      bottom: 20,\n      left: 60\n    },\n        width = null,\n        height = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.defaultColor(),\n        showLegend = true,\n        focusEnable = true,\n        focusShowAxisY = false,\n        focusShowAxisX = true,\n        focusHeight = 50,\n        extent,\n        brushExtent = null,\n        x,\n        x2,\n        y1,\n        y2,\n        y3,\n        y4,\n        noData = null,\n        dispatch = d3.dispatch('brush', 'stateChange', 'changeState'),\n        transitionDuration = 0,\n        state = nv.utils.state(),\n        defaultState = null,\n        legendLeftAxisHint = ' (left axis)',\n        legendRightAxisHint = ' (right axis)',\n        switchYAxisOrder = false;\n\n    lines.clipEdge(true);\n    lines2.interactive(false); // We don't want any points emitted for the focus chart's scatter graph.\n\n    lines2.pointActive(function (d) {\n      return false;\n    });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n    tooltip.headerEnabled(true).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function getBarsAxis() {\n      return switchYAxisOrder ? {\n        main: y2Axis,\n        focus: y4Axis\n      } : {\n        main: y1Axis,\n        focus: y3Axis\n      };\n    };\n\n    var getLinesAxis = function getLinesAxis() {\n      return switchYAxisOrder ? {\n        main: y1Axis,\n        focus: y3Axis\n      } : {\n        main: y2Axis,\n        focus: y4Axis\n      };\n    };\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var allDisabled = function allDisabled(data) {\n      return data.every(function (series) {\n        return series.disabled;\n      });\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focusHeight : 0),\n            availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        var dataBars = data.filter(function (d) {\n          return !d.disabled && d.bar;\n        });\n        var dataLines = data.filter(function (d) {\n          return !d.bar;\n        }); // removed the !d.disabled clause here to fix Issue #240\n\n        if (dataBars.length && !switchYAxisOrder) {\n          x = bars.xScale();\n        } else {\n          x = lines.xScale();\n        }\n\n        x2 = x2Axis.scale(); // select the scales and series based on the position of the yAxis\n\n        y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n        y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n        y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n        y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n        var series1 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        x.range([0, availableWidth]);\n        x2.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // this is the main chart\n\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-barsWrap');\n        focusEnter.append('g').attr('class', 'nv-linesWrap'); // context chart is where you can focus in\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n        contextEnter.append('g').attr('class', 'nv-x nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-barsWrap');\n        contextEnter.append('g').attr('class', 'nv-linesWrap');\n        contextEnter.append('g').attr('class', 'nv-brushBackground');\n        contextEnter.append('g').attr('class', 'nv-x nv-brush'); //============================================================\n        // Legend\n        //------------------------------------------------------------\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\n            if (switchYAxisOrder) {\n              series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n            } else {\n              series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n            }\n\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height(); // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //============================================================\n        // Context chart (focus chart) components\n        //------------------------------------------------------------\n        // hide or show the focus context chart\n\n        g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n        bars2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && data[i].bar;\n        }));\n        lines2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].bar;\n        }));\n        var bars2Wrap = g.select('.nv-context .nv-barsWrap').datum(dataBars.length ? dataBars : [{\n          values: []\n        }]);\n        var lines2Wrap = g.select('.nv-context .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n          values: []\n        }] : dataLines.filter(function (dataLine) {\n          return !dataLine.disabled;\n        }));\n        g.select('.nv-context').attr('transform', 'translate(0,' + (availableHeight1 + margin.bottom + margin2.top) + ')');\n        bars2Wrap.transition().call(bars2);\n        lines2Wrap.transition().call(lines2); // context (focus chart) axis controls\n\n        if (focusShowAxisX) {\n          x2Axis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight2, 0);\n\n          g.select('.nv-context .nv-x.nv-axis').attr('transform', 'translate(0,' + y3.range()[0] + ')');\n          g.select('.nv-context .nv-x.nv-axis').transition().call(x2Axis);\n        }\n\n        if (focusShowAxisY) {\n          y3Axis.scale(y3)._ticks(availableHeight2 / 36).tickSize(-availableWidth, 0);\n\n          y4Axis.scale(y4)._ticks(availableHeight2 / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n\n          g.select('.nv-context .nv-y3.nv-axis').style('opacity', dataBars.length ? 1 : 0).attr('transform', 'translate(0,' + x2.range()[0] + ')');\n          g.select('.nv-context .nv-y2.nv-axis').style('opacity', dataLines.length ? 1 : 0).attr('transform', 'translate(' + x2.range()[1] + ',0)');\n          g.select('.nv-context .nv-y1.nv-axis').transition().call(y3Axis);\n          g.select('.nv-context .nv-y2.nv-axis').transition().call(y4Axis);\n        } // Setup Brush\n\n\n        brush.x(x2).on('brush', onBrush);\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect') //.attr('y', -5)\n        .attr('height', availableHeight2);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight2 / 3;\n          return 'M' + .5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + .5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x2.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x2(d[0]) - x2.range()[0],\n                rightWidth = x2.range()[1] - x2(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x2(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush() {\n          brushExtent = brush.empty() ? null : brush.extent();\n          extent = brush.empty() ? x2.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG(); // Prepare Main (Focus) Bars and Lines\n\n          bars.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && data[i].bar;\n          }));\n          lines.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && !data[i].bar;\n          }));\n          var focusBarsWrap = g.select('.nv-focus .nv-barsWrap').datum(!dataBars.length ? [{\n            values: []\n          }] : dataBars.map(function (d, i) {\n            return {\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return bars.x()(d, i) >= extent[0] && bars.x()(d, i) <= extent[1];\n              })\n            };\n          }));\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n            values: []\n          }] : dataLines.filter(function (dataLine) {\n            return !dataLine.disabled;\n          }).map(function (d, i) {\n            return {\n              area: d.area,\n              fillOpacity: d.fillOpacity,\n              strokeWidth: d.strokeWidth,\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              })\n            };\n          })); // Update Main (Focus) X Axis\n\n          if (dataBars.length && !switchYAxisOrder) {\n            x = bars.xScale();\n          } else {\n            x = lines.xScale();\n          }\n\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight1, 0);\n\n          xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n          g.select('.nv-x.nv-axis').transition().duration(transitionDuration).call(xAxis); // Update Main (Focus) Bars and Lines\n\n          focusBarsWrap.transition().duration(transitionDuration).call(bars);\n          focusLinesWrap.transition().duration(transitionDuration).call(lines); // Setup and Update Main (Focus) Y Axes\n\n          g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n          y1Axis.scale(y1)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)).tickSize(-availableWidth, 0);\n\n          y2Axis.scale(y2)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)); // Show the y2 rules only if y1 has none\n\n\n          if (!switchYAxisOrder) {\n            y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n          } else {\n            y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n          } // Calculate opacity of the axis\n\n\n          var barsOpacity = dataBars.length ? 1 : 0;\n          var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n          var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n          var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n          g.select('.nv-focus .nv-y1.nv-axis').style('opacity', y1Opacity);\n          g.select('.nv-focus .nv-y2.nv-axis').style('opacity', y2Opacity).attr('transform', 'translate(' + x.range()[1] + ',0)');\n          g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration).call(y1Axis);\n          g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration).call(y2Axis);\n        }\n\n        onBrush();\n      });\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.duration(100).valueFormatter(function (d, i) {\n        return getLinesAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.duration(0).valueFormatter(function (d, i) {\n        return getBarsAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focusHeight;\n        },\n        set: function set(_) {\n          focusHeight = _;\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focusShowAxisX;\n        },\n        set: function set(_) {\n          focusShowAxisX = _;\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focusShowAxisY;\n        },\n        set: function set(_) {\n          focusShowAxisY = _;\n        }\n      },\n      legendLeftAxisHint: {\n        get: function get() {\n          return legendLeftAxisHint;\n        },\n        set: function set(_) {\n          legendLeftAxisHint = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return margin2;\n        },\n        set: function set(_) {\n          margin2.top = _.top !== undefined ? _.top : margin2.top;\n          margin2.right = _.right !== undefined ? _.right : margin2.right;\n          margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n          margin2.left = _.left !== undefined ? _.left : margin2.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines.x(_);\n          lines2.x(_);\n          bars.x(_);\n          bars2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines.y(_);\n          lines2.y(_);\n          bars.y(_);\n          bars2.y(_);\n        }\n      },\n      switchYAxisOrder: {\n        get: function get() {\n          return switchYAxisOrder;\n        },\n        set: function set(_) {\n          // Switch the tick format for the yAxis\n          if (switchYAxisOrder !== _) {\n            var y1 = y1Axis;\n            y1Axis = y2Axis;\n            y2Axis = y1;\n            var y3 = y3Axis;\n            y3Axis = y4Axis;\n            y4Axis = y3;\n          }\n\n          switchYAxisOrder = _;\n          y1Axis.orient('left');\n          y2Axis.orient('right');\n          y3Axis.orient('left');\n          y4Axis.orient('right');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        clipEdge = true,\n        stacked = false,\n        stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n    ,\n        color = nv.utils.defaultColor(),\n        hideable = false,\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        duration = 500,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n    var last_datalength = 0;\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var nonStackableCount = 0; // This function defines the requirements for render complete\n\n        var endFn = function endFn(d, i) {\n          if (d.series === data.length - 1 && i === data[0].values.length - 1) return true;\n          return false;\n        };\n\n        if (hideable && data.length) hideable = [{\n          values: data[0].values.map(function (d) {\n            return {\n              x: d.x,\n              y: 0,\n              series: d.series,\n              size: 0.01\n            };\n          })\n        }];\n\n        if (stacked) {\n          var parsed = d3.layout.stack().offset(stackOffset).values(function (d) {\n            return d.values;\n          }).y(getY)(!data.length && hideable ? hideable : data);\n          parsed.forEach(function (series, i) {\n            // if series is non-stackable, use un-parsed data\n            if (series.nonStackable) {\n              data[i].nonStackableSeries = nonStackableCount++;\n              parsed[i] = data[i];\n            } else {\n              // don't stack this seires on top of the nonStackable seriees\n              if (i > 0 && parsed[i - 1].nonStackable) {\n                parsed[i].values.map(function (d, j) {\n                  d.y0 -= parsed[i - 1].values[j].y;\n                  d.y1 = d.y0 + d.y;\n                });\n              }\n            }\n          });\n          data = parsed;\n        } //add series index and key to each data point for reference\n\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked && data.length > 0) {\n          data[0].values.map(function (d, i) {\n            var posBase = 0,\n                negBase = 0;\n            data.map(function (d, idx) {\n              if (!data[idx].nonStackable) {\n                var f = d.values[i];\n                f.size = Math.abs(f.y);\n\n                if (f.y < 0) {\n                  f.y1 = negBase;\n                  negBase = negBase - f.size;\n                } else {\n                  f.y1 = f.size + posBase;\n                  posBase = posBase + f.size;\n                }\n              }\n            });\n          });\n        } // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d, idx) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1,\n              idx: idx\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          var domain = d.y; // increase the domain range if this series is stackable\n\n          if (stacked && !data[d.idx].nonStackable) {\n            if (d.y > 0) {\n              domain = d.y1;\n            } else {\n              domain = d.y1 + d.y;\n            }\n          }\n\n          return domain;\n        }).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        var exitTransition = renderWatch.transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration)).attr('y', function (d, i, j) {\n          var yVal = y0(0) || 0;\n\n          if (stacked) {\n            if (data[d.series] && !data[d.series].nonStackable) {\n              yVal = y0(d.y0);\n            }\n          }\n\n          return yVal;\n        }).attr('height', 0).remove();\n        if (exitTransition.delay) exitTransition.delay(function (d, i) {\n          var delay = i * (duration / (last_datalength + 1)) - i;\n          return delay;\n        });\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('rect.nv-bar').data(function (d) {\n          return hideable && !data.length ? hideable.values : d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('rect').attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('x', function (d, i, j) {\n          return stacked && !data[j].nonStackable ? 0 : j * x.rangeBand() / data.length;\n        }).attr('y', function (d, i, j) {\n          return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0;\n        }).attr('height', 0).attr('width', function (d, i, j) {\n          return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length);\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n        bars.style('fill', function (d, i, j) {\n          return color(d, j, i);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j, i);\n        }).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i, j) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i, j) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i, j) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        var barSelection = bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration)).delay(function (d, i) {\n          return i * duration / data[0].values.length;\n        });\n\n        if (stacked) {\n          barSelection.attr('y', function (d, i, j) {\n            var yVal = 0; // if stackable, stack it on top of the previous series\n\n            if (!data[j].nonStackable) {\n              yVal = y(d.y1);\n            } else {\n              if (getY(d, i) < 0) {\n                yVal = y(0);\n              } else {\n                if (y(0) - y(getY(d, i)) < -1) {\n                  yVal = y(0) - 1;\n                } else {\n                  yVal = y(getY(d, i)) || 0;\n                }\n              }\n            }\n\n            return yVal;\n          }).attr('height', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return Math.max(Math.abs(y(d.y + d.y0) - y(d.y0)), 0);\n            } else {\n              return Math.max(Math.abs(y(getY(d, i)) - y(0)), 0) || 0;\n            }\n          }).attr('x', function (d, i, j) {\n            var width = 0;\n\n            if (data[j].nonStackable) {\n              width = d.series * x.rangeBand() / data.length;\n\n              if (data.length !== nonStackableCount) {\n                width = data[j].nonStackableSeries * x.rangeBand() / (nonStackableCount * 2);\n              }\n            }\n\n            return width;\n          }).attr('width', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return x.rangeBand();\n            } else {\n              // if all series are nonStacable, take the full width\n              var width = x.rangeBand() / nonStackableCount; // otherwise, nonStackable graph will be only taking the half-width\n              // of the x rangeBand\n\n              if (data.length !== nonStackableCount) {\n                width = x.rangeBand() / (nonStackableCount * 2);\n              }\n\n              return width;\n            }\n          });\n        } else {\n          barSelection.attr('x', function (d, i) {\n            return d.series * x.rangeBand() / data.length;\n          }).attr('width', x.rangeBand() / data.length).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)) || 0;\n          }).attr('height', function (d, i) {\n            return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n          });\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy(); // keep track of the last data value length for transition calculations\n\n        if (data[0] && data[0].values) {\n          last_datalength = data[0].values.length;\n        }\n      });\n      renderWatch.renderEnd('multibar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      stackOffset: {\n        get: function get() {\n          return stackOffset;\n        },\n        set: function set(_) {\n          stackOffset = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      hideable: {\n        get: function get() {\n          return hideable;\n        },\n        set: function set(_) {\n          hideable = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        interactiveLayer = nv.interactiveGuideline(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = null,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        reduceXTicks = true // if false a tick will show for every data point\n    ,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250,\n        useInteractiveGuideline = false;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis.orient('bottom').tickPadding(7).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === 'bottom') {\n            legend.width(availableWidth - margin.right);\n            g.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else {\n            legend.width(availableWidth - controlWidth());\n            g.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n          xTicks.selectAll('line, text').style('opacity', 1);\n\n          if (staggerLabels) {\n            var getTranslate = function getTranslate(x, y) {\n              return \"translate(\" + x + \",\" + y + \")\";\n            };\n\n            var staggerUp = 5,\n                staggerDown = 17; //pixels to stagger by\n            // Issue #140\n\n            xTicks.selectAll(\"text\").attr('transform', function (d, i, j) {\n              return getTranslate(0, j % 2 == 0 ? staggerUp : staggerDown);\n            });\n            var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n            g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\").attr(\"transform\", function (d, i) {\n              return getTranslate(0, i === 0 || totalInBetweenTicks % 2 !== 0 ? staggerDown : staggerUp);\n            });\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n\n          if (reduceXTicks) xTicks.filter(function (d, i) {\n            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n          }).selectAll('text, line').style('opacity', 0);\n          if (rotateLabels) xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text').style('opacity', 1);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            if (e.pointXValue == undefined) return;\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                xValue,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              pointIndex = x.domain().indexOf(e.pointXValue);\n              var point = series.values[pointIndex];\n              if (point === undefined) return;\n              xValue = point.x;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = e.mouseX;\n              allData.push({\n                key: series.key,\n                value: chart.y()(point, pointIndex),\n                color: color(series, series.seriesIndex),\n                data: series.values[pointIndex]\n              });\n            });\n            interactiveLayer.tooltip.data({\n              value: xValue,\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            interactiveLayer.tooltip.hidden(true);\n          });\n        } else {\n          multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n            evt.value = chart.x()(evt.data);\n            evt['series'] = {\n              key: evt.data.key,\n              value: chart.y()(evt.data),\n              color: evt.color\n            };\n            tooltip.data(evt).hidden(false);\n          });\n          multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      renderWatch.renderEnd('multibarchart immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      reduceXTicks: {\n        get: function get() {\n          return reduceXTicks;\n        },\n        set: function set(_) {\n          reduceXTicks = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontal = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getYerr = function getYerr(d) {\n      return d.yErr;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        stacked = false,\n        showValues = false,\n        showBarLabels = false,\n        valuePadding = 60,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        valueFormat = d3.format(',.2f'),\n        delay = 1200,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        duration = 250,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0; //used to store previous scales\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        if (stacked) data = d3.layout.stack().offset('zero').values(function (d) {\n          return d.values;\n        }).y(getY)(data); //add series index and key to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked) data[0].values.map(function (d, i) {\n          var posBase = 0,\n              negBase = 0;\n          data.map(function (d) {\n            var f = d.values[i];\n            f.size = Math.abs(f.y);\n\n            if (f.y < 0) {\n              f.y1 = negBase - f.size;\n              negBase = negBase - f.size;\n            } else {\n              f.y1 = posBase;\n              posBase = posBase + f.size;\n            }\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableHeight], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return stacked ? d.y > 0 ? d.y1 + d.y : d.y1 : d.y;\n        }).concat(forceY)));\n        if (showValues && !stacked) y.range(yRange || [y.domain()[0] < 0 ? valuePadding : 0, availableWidth - (y.domain()[1] > 0 ? valuePadding : 0)]);else y.range(yRange || [0, availableWidth]);\n        x0 = x0 || x;\n        y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'multibarhorizontal: groups').style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : j * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        });\n        barsEnter.append('rect').attr('width', 0).attr('height', x.rangeBand() / (stacked ? 1 : data.length));\n        bars.on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n\n        if (getYerr(data[0], 0)) {\n          barsEnter.append('polyline');\n          bars.select('polyline').attr('fill', 'none').attr('points', function (d, i) {\n            var xerr = getYerr(d, i),\n                mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n            xerr = xerr.map(function (e) {\n              return y(e + (getY(d, i) < 0 ? 0 : getY(d, i))) - y(0);\n            });\n            var a = [[xerr[0], -mid], [xerr[0], mid], [xerr[0], 0], [xerr[1], 0], [xerr[1], -mid], [xerr[1], mid]];\n            return a.map(function (path) {\n              return path.join(',');\n            }).join(' ');\n          }).attr('transform', function (d, i) {\n            var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            return 'translate(0, ' + mid + ')';\n          });\n        }\n\n        barsEnter.append('text');\n\n        if (showValues && !stacked) {\n          bars.select('text').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'end' : 'start';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            var t = valueFormat(getY(d, i)),\n                yerr = getYerr(d, i);\n            if (yerr === undefined) return t;\n            if (!yerr.length) return t + '±' + valueFormat(Math.abs(yerr));\n            return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? -4 : y(getY(d, i)) - y(0) + 4;\n          });\n        } else {\n          bars.selectAll('text').text('');\n        }\n\n        if (showBarLabels && !stacked) {\n          barsEnter.append('text').classed('nv-bar-label', true);\n          bars.select('text.nv-bar-label').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'start' : 'end';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            return getX(d, i);\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text.nv-bar-label').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? y(0) - y(getY(d, i)) + 4 : -4;\n          });\n        } else {\n          bars.selectAll('text.nv-bar-label').text('');\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        if (stacked) bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          return 'translate(' + y(d.y1) + ',' + x(getX(d, i)) + ')';\n        }).select('rect').attr('width', function (d, i) {\n          return Math.abs(y(getY(d, i) + d.y0) - y(d.y0)) || 0;\n        }).attr('height', x.rangeBand());else bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          //TODO: stacked must be all positive or all negative, not both?\n          return 'translate(' + (getY(d, i) < 0 ? y(getY(d, i)) : y(0)) + ',' + (d.series * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        }).select('rect').attr('height', x.rangeBand() / data.length).attr('width', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('multibarHorizontal immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      yErr: {\n        get: function get() {\n          return getYerr;\n        },\n        set: function set(_) {\n          getYerr = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      // this shows the group name, seems pointless?\n      //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      valuePadding: {\n        get: function get() {\n          return valuePadding;\n        },\n        set: function set(_) {\n          valuePadding = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontalChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend().height(30),\n        controls = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlsPosition = 'top',\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        stacked = false,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n    xAxis.orient('left').tickPadding(5).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient('bottom').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        stacked = multibar.stacked();\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth - controlWidth());\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\n          if (controlsPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')').call(controls);\n          } else if (controlsPosition === 'top') {\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksY(availableHeight / 24, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n          xTicks.selectAll('line, text');\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", y(0)).attr(\"x2\", y(0)).attr(\"y1\", 0).attr(\"y2\", -availableHeight); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          stacked = multibar.stacked();\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('multibar horizontal chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        key: evt.data.key,\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      controlsPosition: {\n        get: function get() {\n          return controlsPosition;\n        },\n        set: function set(_) {\n          controlsPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        var dataLines1 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 1;\n        });\n        var dataLines2 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 2;\n        });\n        var dataScatters1 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 1;\n        });\n        var dataScatters2 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 2;\n        });\n        var dataBars1 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 1;\n        });\n        var dataBars2 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 2;\n        });\n        var dataStack1 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 1;\n        });\n        var dataStack2 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 2;\n        }); // Display noData message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var series1 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 1;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 2;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        x.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]);\n        var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        gEnter.append('g').attr('class', 'stack1Wrap');\n        gEnter.append('g').attr('class', 'stack2Wrap');\n        gEnter.append('g').attr('class', 'bars1Wrap');\n        gEnter.append('g').attr('class', 'bars2Wrap');\n        gEnter.append('g').attr('class', 'scatters1Wrap');\n        gEnter.append('g').attr('class', 'scatters2Wrap');\n        gEnter.append('g').attr('class', 'lines1Wrap');\n        gEnter.append('g').attr('class', 'lines2Wrap');\n        gEnter.append('g').attr('class', 'legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        var g = wrap.select('g');\n        var color_array = data.map(function (d, i) {\n          return data[i].color || color(d, i);\n        }); // Legend\n\n        if (!showLegend) {\n          g.select('.legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          legend.color(color_array);\n          g.select('.legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n            series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        lines1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line';\n        }));\n        lines2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line';\n        }));\n        scatters1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter';\n        }));\n        scatters2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter';\n        }));\n        bars1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar';\n        }));\n        bars2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar';\n        }));\n        stack1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area';\n        }));\n        stack2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area';\n        }));\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var lines1Wrap = g.select('.lines1Wrap').datum(dataLines1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters1Wrap = g.select('.scatters1Wrap').datum(dataScatters1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars1Wrap = g.select('.bars1Wrap').datum(dataBars1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack1Wrap = g.select('.stack1Wrap').datum(dataStack1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var lines2Wrap = g.select('.lines2Wrap').datum(dataLines2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters2Wrap = g.select('.scatters2Wrap').datum(dataScatters2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars2Wrap = g.select('.bars2Wrap').datum(dataBars2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack2Wrap = g.select('.stack2Wrap').datum(dataStack2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var extraValue1BarStacked = [];\n\n        if (bars1.stacked() && dataBars1.length) {\n          var extraValue1BarStacked = dataBars1.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue1BarStacked.length > 0) extraValue1BarStacked = extraValue1BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars1.length) {\n          extraValue1BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        var extraValue2BarStacked = [];\n\n        if (bars2.stacked() && dataBars2.length) {\n          var extraValue2BarStacked = dataBars2.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue2BarStacked.length > 0) extraValue2BarStacked = extraValue2BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars2.length) {\n          extraValue2BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        yScale1.domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        yScale2.domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        lines1.yDomain(yScale1.domain());\n        scatters1.yDomain(yScale1.domain());\n        bars1.yDomain(yScale1.domain());\n        stack1.yDomain(yScale1.domain());\n        lines2.yDomain(yScale2.domain());\n        scatters2.yDomain(yScale2.domain());\n        bars2.yDomain(yScale2.domain());\n        stack2.yDomain(yScale2.domain());\n\n        if (dataStack1.length) {\n          d3.transition(stack1Wrap).call(stack1);\n        }\n\n        if (dataStack2.length) {\n          d3.transition(stack2Wrap).call(stack2);\n        }\n\n        if (dataBars1.length) {\n          d3.transition(bars1Wrap).call(bars1);\n        }\n\n        if (dataBars2.length) {\n          d3.transition(bars2Wrap).call(bars2);\n        }\n\n        if (dataLines1.length) {\n          d3.transition(lines1Wrap).call(lines1);\n        }\n\n        if (dataLines2.length) {\n          d3.transition(lines2Wrap).call(lines2);\n        }\n\n        if (dataScatters1.length) {\n          d3.transition(scatters1Wrap).call(scatters1);\n        }\n\n        if (dataScatters2.length) {\n          d3.transition(scatters2Wrap).call(scatters2);\n        }\n\n        xAxis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n        d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n\n        yAxis1._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y1.nv-axis')).call(yAxis1);\n\n        yAxis2._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y2.nv-axis')).call(yAxis2);\n        g.select('.nv-y1.nv-axis').classed('nv-disabled', series1.length ? false : true).attr('transform', 'translate(' + x.range()[0] + ',0)');\n        g.select('.nv-y2.nv-axis').classed('nv-disabled', series2.length ? false : true).attr('transform', 'translate(' + x.range()[1] + ',0)');\n        legend.dispatch.on('stateChange', function (newState) {\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching\n        //------------------------------------------------------------\n\n\n        function mouseover_line(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_scatter(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(100).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_stack(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.point['x'] = stack1.x()(evt.point);\n          evt.point['y'] = stack1.y()(evt.point);\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_bar(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = bars1.x()(evt.data);\n          evt['series'] = {\n            value: bars1.y()(evt.data),\n            color: evt.color,\n            key: evt.data.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function clearHighlights() {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.clearHighlights();\n            } catch (e) {}\n          }\n        }\n\n        function highlightPoint(serieIndex, pointIndex, b) {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.highlightPoint(serieIndex, pointIndex, b);\n            } catch (e) {}\n          }\n        }\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            clearHighlights();\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              var extent = x.domain();\n              var currentValues = series.values.filter(function (d, i) {\n                return chart.x()(d, i) >= extent[0] && chart.x()(d, i) <= extent[1];\n              });\n              pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n              var point = currentValues[pointIndex];\n              var pointYValue = chart.y()(point, pointIndex);\n\n              if (pointYValue !== null) {\n                highlightPoint(i, pointIndex, true);\n              }\n\n              if (point === undefined) return;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = x(chart.x()(point, pointIndex));\n              allData.push({\n                key: series.key,\n                value: pointYValue,\n                color: color(series, series.seriesIndex),\n                data: point,\n                yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n              });\n            });\n\n            var defaultValueFormatter = function defaultValueFormatter(d, i) {\n              var yAxis = allData[i].yAxis;\n              return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n            };\n\n            interactiveLayer.tooltip.headerFormatter(function (d, i) {\n              return xAxis.tickFormat()(d, i);\n            }).valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n              value: chart.x()(singlePoint, pointIndex),\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            clearHighlights();\n          });\n        } else {\n          lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          lines2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n          bars2.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      yDomain1: {\n        get: function get() {\n          return yDomain1;\n        },\n        set: function set(_) {\n          yDomain1 = _;\n        }\n      },\n      yDomain2: {\n        get: function get() {\n          return yDomain2;\n        },\n        set: function set(_) {\n          yDomain2 = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines1.x(_);\n          lines2.x(_);\n          scatters1.x(_);\n          scatters2.x(_);\n          bars1.x(_);\n          bars2.x(_);\n          stack1.x(_);\n          stack2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines1.y(_);\n          lines2.y(_);\n          scatters1.y(_);\n          scatters2.y(_);\n          stack1.y(_);\n          stack2.y(_);\n          bars1.y(_);\n          bars2.y(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n          lines1.useVoronoi(_);\n          lines2.useVoronoi(_);\n          stack1.useVoronoi(_);\n          stack2.useVoronoi(_);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines1.interactive(false);\n            lines1.useVoronoi(false);\n            lines2.interactive(false);\n            lines2.useVoronoi(false);\n            stack1.interactive(false);\n            stack1.useVoronoi(false);\n            stack2.interactive(false);\n            stack2.useVoronoi(false);\n            scatters1.interactive(false);\n            scatters2.interactive(false);\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function (model) {\n            model.duration(duration);\n          });\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.ohlcBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // ohlc bar width.\n\n        var w = availableWidth / data[0].values.length * .9; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + w / 2, availableWidth - w / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        ticks.enter().append('path').attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        }).attr('d', function (d, i) {\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('fill', function (d, i) {\n          return color[0];\n        }).attr('stroke', function (d, i) {\n          return color[0];\n        }).attr('x', 0).attr('y', function (d, i) {\n          return y(Math.max(0, getY(d, i)));\n        }).attr('height', function (d, i) {\n          return Math.abs(y(getY(d, i)) - y(0));\n        }); // the bar colors are controlled by CSS currently\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        d3.transition(ticks).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('d', function (d, i) {\n          var w = availableWidth / data[0].values.length * .9;\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-ohlcBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Code adapted from Jason Davies' \"Parallel Coordinates\"\n  // http://bl.ocks.org/jasondavies/1341281\n\n\n  nv.models.parallelCoordinates = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 0,\n      bottom: 10,\n      left: 0\n    },\n        width = null,\n        height = null,\n        availableWidth = null,\n        availableHeight = null,\n        x = d3.scale.ordinal(),\n        y = {},\n        undefinedValuesLabel = \"undefined values\",\n        dimensionData = [],\n        enabledDimensions = [],\n        dimensionNames = [],\n        displayBrush = true,\n        color = nv.utils.defaultColor(),\n        filters = [],\n        active = [],\n        dragging = [],\n        axisWithUndefinedValues = [],\n        lineTension = 1,\n        foreground,\n        background,\n        dimensions,\n        line = d3.svg.line(),\n        axis = d3.svg.axis(),\n        dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //Convert old data to new format (name, values)\n\n        if (data[0].values === undefined) {\n          var newData = [];\n          data.forEach(function (d) {\n            var val = {};\n            var key = Object.keys(d);\n            key.forEach(function (k) {\n              if (k !== \"name\") val[k] = d[k];\n            });\n            newData.push({\n              key: d.name,\n              values: val\n            });\n          });\n          data = newData;\n        }\n\n        var dataValues = data.map(function (d) {\n          return d.values;\n        });\n\n        if (active.length === 0) {\n          active = data;\n        }\n\n        ; //set all active before first brush call\n\n        dimensionNames = dimensionData.sort(function (a, b) {\n          return a.currentPosition - b.currentPosition;\n        }).map(function (d) {\n          return d.key;\n        });\n        enabledDimensions = dimensionData.filter(function (d) {\n          return !d.disabled;\n        }); // Setup Scales\n\n        x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) {\n          return d.key;\n        })); //Set as true if all values on an axis are missing.\n        // Extract the list of dimensions and create a scale for each.\n\n        var oldDomainMaxValue = {};\n        var displayMissingValuesline = false;\n        var currentTicks = [];\n        dimensionNames.forEach(function (d) {\n          var extent = d3.extent(dataValues, function (p) {\n            return +p[d];\n          });\n          var min = extent[0];\n          var max = extent[1];\n          var onlyUndefinedValues = false; //If there is no values to display on an axis, set the extent to 0\n\n          if (isNaN(min) || isNaN(max)) {\n            onlyUndefinedValues = true;\n            min = 0;\n            max = 0;\n          } //Scale axis if there is only one value\n\n\n          if (min === max) {\n            min = min - 1;\n            max = max + 1;\n          }\n\n          var f = filters.filter(function (k) {\n            return k.dimension == d;\n          });\n\n          if (f.length !== 0) {\n            //If there is only NaN values, keep the existing domain.\n            if (onlyUndefinedValues) {\n              min = y[d].domain()[0];\n              max = y[d].domain()[1];\n            } //If the brush extent is > max (< min), keep the extent value.\n            else if (!f[0].hasOnlyNaN && displayBrush) {\n                min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                max = max < f[0].extent[1] ? f[0].extent[1] : max;\n              } //If there is NaN values brushed be sure the brush extent is on the domain.\n              else if (f[0].hasNaN) {\n                  max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                  oldDomainMaxValue[d] = y[d].domain()[1];\n                  displayMissingValuesline = true;\n                }\n          } //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n          //The remaining 10% are used to display the missingValue line.\n\n\n          y[d] = d3.scale.linear().domain([min, max]).range([(availableHeight - 12) * 0.9, 0]);\n          axisWithUndefinedValues = [];\n          y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n        }); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        line.interpolate('cardinal').tension(lineTension);\n        axis.orient('left');\n        var axisDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd); //Add missing value line at the bottom of the chart\n\n        var missingValuesline, missingValueslineText;\n        var step = x.range()[1] - x.range()[0];\n        step = isNaN(step) ? x.range()[0] : step;\n\n        if (!isNaN(step)) {\n          var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n          missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n          missingValuesline.enter().append('line');\n          missingValuesline.exit().remove();\n          missingValuesline.attr(\"x1\", function (d) {\n            return d[0];\n          }).attr(\"y1\", function (d) {\n            return d[1];\n          }).attr(\"x2\", function (d) {\n            return d[2];\n          }).attr(\"y2\", function (d) {\n            return d[3];\n          }); //Add the text \"undefined values\" under the missing value line\n\n          missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n          missingValueslineText.append('text').data([undefinedValuesLabel]);\n          missingValueslineText.enter().append('text');\n          missingValueslineText.exit().remove();\n          missingValueslineText.attr(\"y\", availableHeight) //To have the text right align with the missingValues line, substract 92 representing the text size.\n          .attr(\"x\", availableWidth - 92 - step / 2).text(function (d) {\n            return d;\n          });\n        } // Add grey background lines for context.\n\n\n        background = wrap.select('.background').selectAll('path').data(data);\n        background.enter().append('path');\n        background.exit().remove();\n        background.attr('d', path); // Add blue foreground lines for focus.\n\n        foreground = wrap.select('.foreground').selectAll('path').data(data);\n        foreground.enter().append('path');\n        foreground.exit().remove();\n        foreground.attr('d', path).style(\"stroke-width\", function (d, i) {\n          if (isNaN(d.strokeWidth)) {\n            d.strokeWidth = 1;\n          }\n\n          return d.strokeWidth;\n        }).attr('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n        foreground.on(\"mouseover\", function (d, i) {\n          d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n          dispatch.elementMouseover({\n            label: d.name,\n            color: d.color || color(d, i),\n            values: d.values,\n            dimensions: enabledDimensions\n          });\n        });\n        foreground.on(\"mouseout\", function (d, i) {\n          d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n          dispatch.elementMouseout({\n            label: d.name,\n            index: i\n          });\n        });\n        foreground.on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        });\n        foreground.on('click', function (d) {\n          dispatch.elementClick({\n            id: d.id\n          });\n        }); // Add a group element for each dimension.\n\n        dimensions = g.selectAll('.dimension').data(enabledDimensions);\n        var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n        dimensions.attr('transform', function (d) {\n          return 'translate(' + x(d.key) + ',0)';\n        });\n        dimensionsEnter.append('g').attr('class', 'nv-axis'); // Add an axis and title.\n\n        dimensionsEnter.append('text').attr('class', 'nv-label').style(\"cursor\", \"move\").attr('dy', '-1em').attr('text-anchor', 'middle').on(\"mouseover\", function (d, i) {\n          dispatch.elementMouseover({\n            label: d.tooltip || d.key,\n            color: d.color\n          });\n        }).on(\"mouseout\", function (d, i) {\n          dispatch.elementMouseout({\n            label: d.tooltip\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        }).call(axisDrag);\n        dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n        dimensions.exit().remove();\n        dimensions.select('.nv-label').text(function (d) {\n          return d.key;\n        }); // Add and store a brush for each axis.\n\n        restoreBrush(displayBrush);\n        var actives = dimensionNames.filter(function (p) {\n          return !y[p].brush.empty();\n        }),\n            extents = actives.map(function (p) {\n          return y[p].brush.extent();\n        });\n        var formerActive = active.slice(0); //Restore active values\n\n        active = [];\n        foreground.style(\"display\", function (d) {\n          var isActive = actives.every(function (p, i) {\n            if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n              return true;\n            }\n\n            return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n          });\n          if (isActive) active.push(d);\n          return !isActive ? \"none\" : null;\n        });\n\n        if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n          dispatch.activeChanged(active);\n        } // Returns the path for a given data point.\n\n\n        function path(d) {\n          return line(enabledDimensions.map(function (p) {\n            //If value if missing, put the value on the missing value line\n            if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n              var domain = y[p.key].domain();\n              var range = y[p.key].range();\n              var min = domain[0] - (domain[1] - domain[0]) / 9; //If it's not already the case, allow brush to select undefined values\n\n              if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n                var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                y[p.key].brush.y(newscale);\n                axisWithUndefinedValues.push(p.key);\n              }\n\n              if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                return [x(p.key), y[p.key](min)];\n              }\n            } //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\n\n            if (missingValuesline !== undefined) {\n              if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                missingValuesline.style(\"display\", \"inline\");\n                missingValueslineText.style(\"display\", \"inline\");\n              } else {\n                missingValuesline.style(\"display\", \"none\");\n                missingValueslineText.style(\"display\", \"none\");\n              }\n            }\n\n            return [x(p.key), y[p.key](d.values[p.key])];\n          }));\n        }\n\n        function restoreBrush(visible) {\n          filters.forEach(function (f) {\n            //If filter brushed NaN values, keep the brush on the bottom of the axis.\n            var brushDomain = y[f.dimension].brush.y().domain();\n\n            if (f.hasOnlyNaN) {\n              f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n            }\n\n            if (f.hasNaN) {\n              f.extent[0] = brushDomain[0];\n            }\n\n            if (visible) y[f.dimension].brush.extent(f.extent);\n          });\n          dimensions.select('.nv-brushBackground').each(function (d) {\n            d3.select(this).call(y[d.key].brush);\n          }).selectAll('rect').attr('x', -8).attr('width', 16);\n          updateTicks();\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brushstart() {\n          //If brush aren't visible, show it before brushing again.\n          if (displayBrush === false) {\n            displayBrush = true;\n            restoreBrush(true);\n          }\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brush() {\n          actives = dimensionNames.filter(function (p) {\n            return !y[p].brush.empty();\n          });\n          extents = actives.map(function (p) {\n            return y[p].brush.extent();\n          });\n          filters = []; //erase current filters\n\n          actives.forEach(function (d, i) {\n            filters[i] = {\n              dimension: d,\n              extent: extents[i],\n              hasNaN: false,\n              hasOnlyNaN: false\n            };\n          });\n          active = []; //erase current active list\n\n          foreground.style('display', function (d) {\n            var isActive = actives.every(function (p, i) {\n              if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n              return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n            });\n            if (isActive) active.push(d);\n            return isActive ? null : 'none';\n          });\n          updateTicks();\n          dispatch.brush({\n            filters: filters,\n            active: active\n          });\n        }\n\n        function brushend() {\n          var hasActiveBrush = actives.length > 0 ? true : false;\n          filters.forEach(function (f) {\n            if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0) f.hasNaN = true;\n            if (f.extent[1] < y[f.dimension].domain()[0]) f.hasOnlyNaN = true;\n          });\n          dispatch.brushEnd(active, hasActiveBrush);\n        }\n\n        function updateTicks() {\n          dimensions.select('.nv-axis').each(function (d, i) {\n            var f = filters.filter(function (k) {\n              return k.dimension == d.key;\n            });\n            currentTicks[d.key] = y[d.key].domain(); //If brush are available, display brush extent\n\n            if (f.length != 0 && displayBrush) {\n              currentTicks[d.key] = [];\n              if (f[0].extent[1] > y[d.key].domain()[0]) currentTicks[d.key] = [f[0].extent[1]];\n              if (f[0].extent[0] >= y[d.key].domain()[0]) currentTicks[d.key].push(f[0].extent[0]);\n            }\n\n            d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n          });\n        }\n\n        function dragStart(d) {\n          dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n          background.attr(\"visibility\", \"hidden\");\n        }\n\n        function dragMove(d) {\n          dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n          foreground.attr(\"d\", path);\n          enabledDimensions.sort(function (a, b) {\n            return dimensionPosition(a.key) - dimensionPosition(b.key);\n          });\n          enabledDimensions.forEach(function (d, i) {\n            return d.currentPosition = i;\n          });\n          x.domain(enabledDimensions.map(function (d) {\n            return d.key;\n          }));\n          dimensions.attr(\"transform\", function (d) {\n            return \"translate(\" + dimensionPosition(d.key) + \")\";\n          });\n        }\n\n        function dragEnd(d, i) {\n          delete this.parentNode.__origin__;\n          delete dragging[d.key];\n          d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n          foreground.attr(\"d\", path);\n          background.attr(\"d\", path).attr(\"visibility\", null);\n          dispatch.dimensionsOrder(enabledDimensions);\n        }\n\n        function dimensionPosition(d) {\n          var v = dragging[d];\n          return v == null ? x(d) : v;\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      filters: {\n        get: function get() {\n          return filters;\n        },\n        set: function set(_) {\n          filters = _;\n        }\n      },\n      active: {\n        get: function get() {\n          return active;\n        },\n        set: function set(_) {\n          active = _;\n        }\n      },\n      lineTension: {\n        get: function get() {\n          return lineTension;\n        },\n        set: function set(_) {\n          lineTension = _;\n        }\n      },\n      undefinedValuesLabel: {\n        get: function get() {\n          return undefinedValuesLabel;\n        },\n        set: function set(_) {\n          undefinedValuesLabel = _;\n        }\n      },\n      // deprecated options\n      dimensions: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensions', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionNames: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionNames', 'use dimensionData instead');\n          dimensionNames = [];\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionFormats: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.format;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (f) {\n              dimensionData.push({\n                format: f\n              });\n            });\n          } else {\n            _.forEach(function (f, i) {\n              dimensionData[i].format = f;\n            });\n          }\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.parallelCoordinatesChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var parallelCoordinates = nv.models.parallelCoordinates();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var dimensionTooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showLegend = true,\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        dimensionData = [],\n        displayBrush = true,\n        defaultState = null,\n        noData = null,\n        nanValue = \"undefined\",\n        dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    }; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    };\n\n    tooltip.contentGenerator(function (data) {\n      var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\n      if (data.series.length !== 0) {\n        str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n        data.series.forEach(function (d) {\n          str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n        });\n        str = str + '</tbody>';\n      }\n\n      str = str + '</table>';\n      return str;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(parallelCoordinates);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(dimensionData), chart.update).getter(stateGetter(dimensionData)).update(); //set state.disabled\n\n        state.disabled = dimensionData.map(function (d) {\n          return !!d.disabled;\n        }); //Keep dimensions position in memory\n\n        dimensionData = dimensionData.map(function (d) {\n          d.disabled = !!d.disabled;\n          return d;\n        });\n        dimensionData.forEach(function (d, i) {\n          d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n          d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.select(\"rect\").attr(\"width\", availableWidth).attr(\"height\", availableHeight > 0 ? availableHeight : 0); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth).color(function (d) {\n            return \"rgb(188,190,192)\";\n          });\n          g.select('.nv-legendWrap').datum(dimensionData.sort(function (a, b) {\n            return a.originalPosition - b.originalPosition;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate( 0 ,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        parallelCoordinates.width(availableWidth).height(availableHeight).dimensionData(dimensionData).displayBrush(displayBrush);\n        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ').datum(data);\n        parallelCoordinatesWrap.transition().call(parallelCoordinates); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //Display reset brush button\n\n        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n          if (hasActiveBrush) {\n            displayBrush = true;\n            dispatch.brushEnd(active);\n          } else {\n            displayBrush = false;\n          }\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); //Update dimensions order and display reset sorting button\n\n        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n          dimensionData.sort(function (a, b) {\n            return a.currentPosition - b.currentPosition;\n          });\n          var isSorted = false;\n          dimensionData.forEach(function (d, i) {\n            d.currentPosition = i;\n            if (d.currentPosition !== d.originalPosition) isSorted = true;\n          });\n          dispatch.dimensionsOrder(dimensionData, isSorted);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            dimensionData.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('parraleleCoordinateChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var tp = {\n        key: evt.label,\n        color: evt.color,\n        series: []\n      };\n\n      if (evt.values) {\n        Object.keys(evt.values).forEach(function (d) {\n          var dim = evt.dimensions.filter(function (dd) {\n            return dd.key === d;\n          })[0];\n\n          if (dim) {\n            var v;\n\n            if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n              v = nanValue;\n            } else {\n              v = dim.format(evt.values[d]);\n            }\n\n            tp.series.push({\n              idx: dim.currentPosition,\n              key: d,\n              value: v,\n              color: dim.color\n            });\n          }\n        });\n        tp.series.sort(function (a, b) {\n          return a.idx - b.idx;\n        });\n      }\n\n      tooltip.data(tp).hidden(false);\n    });\n    parallelCoordinates.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.parallelCoordinates = parallelCoordinates;\n    chart.legend = legend;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nanValue: {\n        get: function get() {\n          return nanValue;\n        },\n        set: function set(_) {\n          nanValue = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          parallelCoordinates.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, parallelCoordinates);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pie = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 500,\n        height = 500,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        valueFormat = d3.format(',.2f'),\n        showLabels = true,\n        labelsOutside = false,\n        labelType = \"key\",\n        labelThreshold = .02 //if slice percentage is under this, don't show label\n    ,\n        hideOverlapLabels = false //Hide labels that don't fit in slice\n    ,\n        donut = false,\n        title = false,\n        growOnHover = true,\n        titleOffset = 0,\n        labelSunbeamLayout = false,\n        startAngle = false,\n        padAngle = false,\n        endAngle = false,\n        cornerRadius = 0,\n        donutRatio = 0.5,\n        duration = 250,\n        arcsRadius = [],\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd');\n\n    var arcs = [];\n    var arcsOver = []; //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom,\n            radius = Math.min(availableWidth, availableHeight) / 2,\n            arcsRadiusOuter = [],\n            arcsRadiusInner = [];\n        container = d3.select(this);\n\n        if (arcsRadius.length === 0) {\n          var outer = radius - radius / 10;\n          var inner = donutRatio * radius;\n\n          for (var i = 0; i < data[0].length; i++) {\n            arcsRadiusOuter.push(outer);\n            arcsRadiusInner.push(inner);\n          }\n        } else {\n          if (growOnHover) {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return (d.outer - d.outer / 10) * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return (d.inner - d.inner / 10) * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner - d.inner / 10;\n            }));\n          } else {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return d.outer * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return d.inner * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner;\n            }));\n          }\n        }\n\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pie nv-chart-' + id);\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n        gEnter.append('g').attr('class', 'nv-pieLabels');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n        g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')'); //\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        arcs = [];\n        arcsOver = [];\n\n        for (var i = 0; i < data[0].length; i++) {\n          var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n          var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n          if (startAngle !== false) {\n            arc.startAngle(startAngle);\n            arcOver.startAngle(startAngle);\n          }\n\n          if (endAngle !== false) {\n            arc.endAngle(endAngle);\n            arcOver.endAngle(endAngle);\n          }\n\n          if (donut) {\n            arc.innerRadius(arcsRadiusInner[i]);\n            arcOver.innerRadius(arcsRadiusInner[i]);\n          }\n\n          if (arc.cornerRadius && cornerRadius) {\n            arc.cornerRadius(cornerRadius);\n            arcOver.cornerRadius(cornerRadius);\n          }\n\n          arcs.push(arc);\n          arcsOver.push(arcOver);\n        } // Setup the Pie chart and choose the data element\n\n\n        var pie = d3.layout.pie().sort(null).value(function (d) {\n          return d.disabled ? 0 : getY(d);\n        }); // padAngle added in d3 3.5\n\n        if (pie.padAngle && padAngle) {\n          pie.padAngle(padAngle);\n        } // if title is specified and donut, put it in the middle\n\n\n        if (donut && title) {\n          g_pie.append(\"text\").attr('class', 'nv-pie-title');\n          wrap.select('.nv-pie-title').style(\"text-anchor\", \"middle\").text(function (d) {\n            return title;\n          }).style(\"font-size\", Math.min(availableWidth, availableHeight) * donutRatio * 2 / (title.length + 2) + \"px\").attr(\"dy\", \"0.35em\") // trick to vertically center text\n          .attr('transform', function (d, i) {\n            return 'translate(0, ' + titleOffset + ')';\n          });\n        }\n\n        var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n        var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n        slices.exit().remove();\n        pieLabels.exit().remove();\n        var ae = slices.enter().append('g');\n        ae.attr('class', 'nv-slice');\n        ae.on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(70).attr(\"d\", arcsOver[i]);\n          }\n\n          dispatch.elementMouseover({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n          });\n        });\n        ae.on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(50).attr(\"d\", arcs[i]);\n          }\n\n          dispatch.elementMouseout({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n        });\n        ae.on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        slices.attr('fill', function (d, i) {\n          return color(d.data, i);\n        });\n        slices.attr('stroke', function (d, i) {\n          return color(d.data, i);\n        });\n        var paths = ae.append('path').each(function (d) {\n          this._current = d;\n        });\n        slices.select('path').transition().duration(duration).attr('d', function (d, i) {\n          return arcs[i](d);\n        }).attrTween('d', arcTween);\n\n        if (showLabels) {\n          // This does the normal label\n          var labelsArc = [];\n\n          for (var i = 0; i < data[0].length; i++) {\n            labelsArc.push(arcs[i]);\n\n            if (labelsOutside) {\n              if (donut) {\n                labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n              }\n            } else if (!donut) {\n              labelsArc[i].innerRadius(0);\n            }\n          }\n\n          pieLabels.enter().append(\"g\").classed(\"nv-label\", true).each(function (d, i) {\n            var group = d3.select(this);\n            group.attr('transform', function (d, i) {\n              if (labelSunbeamLayout) {\n                d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n                d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n                var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n                if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                  rotateAngle -= 90;\n                } else {\n                  rotateAngle += 90;\n                }\n\n                return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n              } else {\n                d.outerRadius = radius + 10; // Set Outer Coordinate\n\n                d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                return 'translate(' + labelsArc[i].centroid(d) + ')';\n              }\n            });\n            group.append('rect').style('stroke', '#fff').style('fill', '#fff').attr(\"rx\", 3).attr(\"ry\", 3);\n            group.append('text').style('text-anchor', labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n            .style('fill', '#000');\n          });\n          var labelLocationHash = {};\n          var avgHeight = 14;\n          var avgWidth = 140;\n\n          var createHashKey = function createHashKey(coordinates) {\n            return Math.floor(coordinates[0] / avgWidth) * avgWidth + ',' + Math.floor(coordinates[1] / avgHeight) * avgHeight;\n          };\n\n          var getSlicePercentage = function getSlicePercentage(d) {\n            return (d.endAngle - d.startAngle) / (2 * Math.PI);\n          };\n\n          pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n            if (labelSunbeamLayout) {\n              d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n              d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n              var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n              if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                rotateAngle -= 90;\n              } else {\n                rotateAngle += 90;\n              }\n\n              return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n            } else {\n              d.outerRadius = radius + 10; // Set Outer Coordinate\n\n              d.innerRadius = radius + 15; // Set Inner Coordinate\n\n              /*\n              Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n              Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n              Adjust the label's y-position to remove the overlap.\n              */\n\n              var center = labelsArc[i].centroid(d);\n              var percent = getSlicePercentage(d);\n\n              if (d.value && percent >= labelThreshold) {\n                var hashKey = createHashKey(center);\n\n                if (labelLocationHash[hashKey]) {\n                  center[1] -= avgHeight;\n                }\n\n                labelLocationHash[createHashKey(center)] = true;\n              }\n\n              return 'translate(' + center + ')';\n            }\n          });\n          pieLabels.select(\".nv-label text\").style('text-anchor', function (d, i) {\n            //center the text on it's origin or begin/end if orthogonal aligned\n            return labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle';\n          }).text(function (d, i) {\n            var percent = getSlicePercentage(d);\n            var label = '';\n            if (!d.value || percent < labelThreshold) return '';\n\n            if (typeof labelType === 'function') {\n              label = labelType(d, i, {\n                'key': getX(d.data),\n                'value': getY(d.data),\n                'percent': valueFormat(percent)\n              });\n            } else {\n              switch (labelType) {\n                case 'key':\n                  label = getX(d.data);\n                  break;\n\n                case 'value':\n                  label = valueFormat(getY(d.data));\n                  break;\n\n                case 'percent':\n                  label = d3.format('%')(percent);\n                  break;\n              }\n            }\n\n            return label;\n          });\n\n          if (hideOverlapLabels) {\n            pieLabels.each(function (d, i) {\n              if (!this.getBBox) return;\n              var bb = this.getBBox(),\n                  center = labelsArc[i].centroid(d);\n              var topLeft = {\n                x: center[0] + bb.x,\n                y: center[1] + bb.y\n              };\n              var topRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y\n              };\n              var bottomLeft = {\n                x: topLeft.x,\n                y: topLeft.y + bb.height\n              };\n              var bottomRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y + bb.height\n              };\n              d.visible = nv.utils.pointIsInArc(topLeft, d, arc) && nv.utils.pointIsInArc(topRight, d, arc) && nv.utils.pointIsInArc(bottomLeft, d, arc) && nv.utils.pointIsInArc(bottomRight, d, arc);\n            }).style('display', function (d) {\n              return d.visible ? null : 'none';\n            });\n          }\n        } // Computes the angle of an arc, converting from radians to degrees.\n\n\n        function angle(d) {\n          var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n          return a > 90 ? a - 180 : a;\n        }\n\n        function arcTween(a, idx) {\n          a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n          a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n          if (!donut) a.innerRadius = 0;\n          var i = d3.interpolate(this._current, a);\n          this._current = i(0);\n          return function (t) {\n            return arcs[idx](i(t));\n          };\n        }\n      });\n      renderWatch.renderEnd('pie immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      arcsRadius: {\n        get: function get() {\n          return arcsRadius;\n        },\n        set: function set(_) {\n          arcsRadius = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      title: {\n        get: function get() {\n          return title;\n        },\n        set: function set(_) {\n          title = _;\n        }\n      },\n      titleOffset: {\n        get: function get() {\n          return titleOffset;\n        },\n        set: function set(_) {\n          titleOffset = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      hideOverlapLabels: {\n        get: function get() {\n          return hideOverlapLabels;\n        },\n        set: function set(_) {\n          hideOverlapLabels = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      endAngle: {\n        get: function get() {\n          return endAngle;\n        },\n        set: function set(_) {\n          endAngle = _;\n        }\n      },\n      startAngle: {\n        get: function get() {\n          return startAngle;\n        },\n        set: function set(_) {\n          startAngle = _;\n        }\n      },\n      padAngle: {\n        get: function get() {\n          return padAngle;\n        },\n        set: function set(_) {\n          padAngle = _;\n        }\n      },\n      cornerRadius: {\n        get: function get() {\n          return cornerRadius;\n        },\n        set: function set(_) {\n          cornerRadius = _;\n        }\n      },\n      donutRatio: {\n        get: function get() {\n          return donutRatio;\n        },\n        set: function set(_) {\n          donutRatio = _;\n        }\n      },\n      labelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n        }\n      },\n      labelSunbeamLayout: {\n        get: function get() {\n          return labelSunbeamLayout;\n        },\n        set: function set(_) {\n          labelSunbeamLayout = _;\n        }\n      },\n      donut: {\n        get: function get() {\n          return donut;\n        },\n        set: function set(_) {\n          donut = _;\n        }\n      },\n      growOnHover: {\n        get: function get() {\n          return growOnHover;\n        },\n        set: function set(_) {\n          growOnHover = _;\n        }\n      },\n      // depreciated after 1.7.1\n      pieLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // depreciated after 1.7.1\n      donutLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // deprecated after 1.7.1\n      labelFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n          nv.deprecated('labelFormat', 'use valueFormat instead');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n          margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n          margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n          margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      labelType: {\n        get: function get() {\n          return labelType;\n        },\n        set: function set(_) {\n          labelType = _ || 'key';\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pieChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showTooltipPercent = false,\n        showLegend = true,\n        legendPosition = \"top\",\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return pie.valueFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    }; //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(pie);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-pieWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === \"top\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          } else if (legendPosition === \"right\") {\n            var legendWidth = nv.models.legend().width();\n\n            if (availableWidth / 2 < legendWidth) {\n              legendWidth = availableWidth / 2;\n            }\n\n            legend.height(availableHeight).key(pie.x());\n            legend.width(legendWidth);\n            availableWidth -= legend.width();\n            wrap.select('.nv-legendWrap').datum(data).call(legend).attr('transform', 'translate(' + availableWidth + ',0)');\n          } else if (legendPosition === \"bottom\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + availableHeight + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        pie.width(availableWidth).height(availableHeight);\n        var pieWrap = g.select('.nv-pieWrap').datum([data]);\n        d3.transition(pieWrap).call(pie); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('pieChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    pie.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    pie.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    pie.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          legend.color(color);\n          pie.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          pie.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sankey = function () {\n    'use strict'; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function layout(iterations) {\n      computeNodeLinks();\n      computeNodeValues();\n      computeNodeBreadths();\n      computeNodeDepths(iterations);\n    };\n\n    var relayout = function relayout() {\n      computeLinkDepths();\n    }; // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n\n\n    var link = function link() {\n      var curvature = .5;\n\n      function link(d) {\n        var x0 = d.source.x + d.source.dx,\n            x1 = d.target.x,\n            xi = d3.interpolateNumber(x0, x1),\n            x2 = xi(curvature),\n            x3 = xi(1 - curvature),\n            y0 = d.source.y + d.sy + d.dy / 2,\n            y1 = d.target.y + d.ty + d.dy / 2;\n        var linkPath = 'M' + x0 + ',' + y0 + 'C' + x2 + ',' + y0 + ' ' + x3 + ',' + y1 + ' ' + x1 + ',' + y1;\n        return linkPath;\n      }\n\n      link.curvature = function (_) {\n        if (!arguments.length) return curvature;\n        curvature = +_;\n        return link;\n      };\n\n      return link;\n    }; // Y-position of the middle of a node.\n\n\n    var center = function center(node) {\n      return node.y + node.dy / 2;\n    }; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n\n\n    function computeNodeLinks() {\n      nodes.forEach(function (node) {\n        // Links that have this node as source.\n        node.sourceLinks = []; // Links that have this node as target.\n\n        node.targetLinks = [];\n      });\n      links.forEach(function (link) {\n        var source = link.source,\n            target = link.target;\n        if (typeof source === 'number') source = link.source = nodes[link.source];\n        if (typeof target === 'number') target = link.target = nodes[link.target];\n        source.sourceLinks.push(link);\n        target.targetLinks.push(link);\n      });\n    } // Compute the value (size) of each node by summing the associated links.\n\n\n    function computeNodeValues() {\n      nodes.forEach(function (node) {\n        node.value = Math.max(d3.sum(node.sourceLinks, value), d3.sum(node.targetLinks, value));\n      });\n    } // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n\n\n    function computeNodeBreadths() {\n      //\n      var remainingNodes = nodes,\n          nextNodes,\n          x = 0; // Work from left to right.\n      // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n      //\n\n      while (remainingNodes.length && x < nodes.length) {\n        nextNodes = [];\n        remainingNodes.forEach(function (node) {\n          node.x = x;\n          node.dx = nodeWidth;\n          node.sourceLinks.forEach(function (link) {\n            if (nextNodes.indexOf(link.target) < 0) {\n              nextNodes.push(link.target);\n            }\n          });\n        });\n        remainingNodes = nextNodes;\n        ++x; //\n      } // Optionally move pure sinks always to the right.\n\n\n      if (sinksRight) {\n        moveSinksRight(x);\n      }\n\n      scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n      nodes.forEach(function (node) {\n        if (!node.targetLinks.length) {\n          node.x = d3.min(node.sourceLinks, function (d) {\n            return d.target.x;\n          }) - 1;\n        }\n      });\n    }\n\n    function moveSinksRight(x) {\n      nodes.forEach(function (node) {\n        if (!node.sourceLinks.length) {\n          node.x = x - 1;\n        }\n      });\n    }\n\n    function scaleNodeBreadths(kx) {\n      nodes.forEach(function (node) {\n        node.x *= kx;\n      });\n    } // Compute the depth (y-position) for each node.\n\n\n    function computeNodeDepths(iterations) {\n      // Group nodes by breath.\n      var nodesByBreadth = d3.nest().key(function (d) {\n        return d.x;\n      }).sortKeys(d3.ascending).entries(nodes).map(function (d) {\n        return d.values;\n      }); //\n\n      initializeNodeDepth();\n      resolveCollisions();\n      computeLinkDepths();\n\n      for (var alpha = 1; iterations > 0; --iterations) {\n        relaxRightToLeft(alpha *= .99);\n        resolveCollisions();\n        computeLinkDepths();\n        relaxLeftToRight(alpha);\n        resolveCollisions();\n        computeLinkDepths();\n      }\n\n      function initializeNodeDepth() {\n        // Calculate vertical scaling factor.\n        var ky = d3.min(nodesByBreadth, function (nodes) {\n          return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n        });\n        nodesByBreadth.forEach(function (nodes) {\n          nodes.forEach(function (node, i) {\n            node.y = i;\n            node.dy = node.value * ky;\n          });\n        });\n        links.forEach(function (link) {\n          link.dy = link.value * ky;\n        });\n      }\n\n      function relaxLeftToRight(alpha) {\n        nodesByBreadth.forEach(function (nodes, breadth) {\n          nodes.forEach(function (node) {\n            if (node.targetLinks.length) {\n              // Value-weighted average of the y-position of source node centers linked to this node.\n              var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedSource(link) {\n          return (link.source.y + link.sy + link.dy / 2) * link.value;\n        }\n      }\n\n      function relaxRightToLeft(alpha) {\n        nodesByBreadth.slice().reverse().forEach(function (nodes) {\n          nodes.forEach(function (node) {\n            if (node.sourceLinks.length) {\n              // Value-weighted average of the y-positions of target nodes linked to this node.\n              var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedTarget(link) {\n          return (link.target.y + link.ty + link.dy / 2) * link.value;\n        }\n      }\n\n      function resolveCollisions() {\n        nodesByBreadth.forEach(function (nodes) {\n          var node,\n              dy,\n              y0 = 0,\n              n = nodes.length,\n              i; // Push any overlapping nodes down.\n\n          nodes.sort(ascendingDepth);\n\n          for (i = 0; i < n; ++i) {\n            node = nodes[i];\n            dy = y0 - node.y;\n            if (dy > 0) node.y += dy;\n            y0 = node.y + node.dy + nodePadding;\n          } // If the bottommost node goes outside the bounds, push it back up.\n\n\n          dy = y0 - nodePadding - size[1];\n\n          if (dy > 0) {\n            y0 = node.y -= dy; // Push any overlapping nodes back up.\n\n            for (i = n - 2; i >= 0; --i) {\n              node = nodes[i];\n              dy = node.y + node.dy + nodePadding - y0;\n              if (dy > 0) node.y -= dy;\n              y0 = node.y;\n            }\n          }\n        });\n      }\n\n      function ascendingDepth(a, b) {\n        return a.y - b.y;\n      }\n    } // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n\n\n    function computeLinkDepths() {\n      nodes.forEach(function (node) {\n        node.sourceLinks.sort(ascendingTargetDepth);\n        node.targetLinks.sort(ascendingSourceDepth);\n      });\n      nodes.forEach(function (node) {\n        var sy = 0,\n            ty = 0;\n        node.sourceLinks.forEach(function (link) {\n          link.sy = sy;\n          sy += link.dy;\n        });\n        node.targetLinks.forEach(function (link) {\n          link.ty = ty;\n          ty += link.dy;\n        });\n      });\n\n      function ascendingSourceDepth(a, b) {\n        return a.source.y - b.source.y;\n      }\n\n      function ascendingTargetDepth(a, b) {\n        return a.target.y - b.target.y;\n      }\n    } // Value property accessor.\n\n\n    function value(x) {\n      return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = +_;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      nodes: {\n        get: function get() {\n          return nodes;\n        },\n        set: function set(_) {\n          nodes = _;\n        }\n      },\n      links: {\n        get: function get() {\n          return links;\n        },\n        set: function set(_) {\n          links = _;\n        }\n      },\n      size: {\n        get: function get() {\n          return size;\n        },\n        set: function set(_) {\n          size = _;\n        }\n      },\n      sinksRight: {\n        get: function get() {\n          return sinksRight;\n        },\n        set: function set(_) {\n          sinksRight = _;\n        }\n      },\n      layout: {\n        get: function get() {\n          layout(32);\n        },\n        set: function set(_) {\n          layout(_);\n        }\n      },\n      relayout: {\n        get: function get() {\n          relayout();\n        },\n        set: function set(_) {}\n      },\n      center: {\n        get: function get() {\n          return center();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            center = _;\n          }\n        }\n      },\n      link: {\n        get: function get() {\n          return link();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            link = _;\n          }\n\n          return link();\n        }\n      }\n    });\n    nv.utils.initOptions(sankey);\n    return sankey;\n  };\n\n  nv.models.sankeyChart = function () {\n    \"use strict\"; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        sankey = nv.models.sankey(),\n        width = 600,\n        height = 400,\n        nodeWidth = 36,\n        nodePadding = 40,\n        units = 'units',\n        center = undefined; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f'); // zero decimal places\n\n    var format = function format(d) {\n      return formatNumber(d) + ' ' + units;\n    };\n\n    var color = d3.scale.category20();\n\n    var linkTitle = function linkTitle(d) {\n      return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n\n    var nodeFillColor = function nodeFillColor(d) {\n      return d.color = color(d.name.replace(/ .*/, ''));\n    };\n\n    var nodeStrokeColor = function nodeStrokeColor(d) {\n      return d3.rgb(d.color).darker(2);\n    };\n\n    var nodeTitle = function nodeTitle(d) {\n      return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function showError(element, message) {\n      element.append('text').attr('x', 0).attr('y', 0).attr('class', 'nvd3-sankey-chart-error').attr('text-anchor', 'middle').text(message);\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var testData = {\n          nodes: [{\n            'node': 1,\n            'name': 'Test 1'\n          }, {\n            'node': 2,\n            'name': 'Test 2'\n          }, {\n            'node': 3,\n            'name': 'Test 3'\n          }, {\n            'node': 4,\n            'name': 'Test 4'\n          }, {\n            'node': 5,\n            'name': 'Test 5'\n          }, {\n            'node': 6,\n            'name': 'Test 6'\n          }],\n          links: [{\n            'source': 0,\n            'target': 1,\n            'value': 2295\n          }, {\n            'source': 0,\n            'target': 5,\n            'value': 1199\n          }, {\n            'source': 1,\n            'target': 2,\n            'value': 1119\n          }, {\n            'source': 1,\n            'target': 5,\n            'value': 1176\n          }, {\n            'source': 2,\n            'target': 3,\n            'value': 487\n          }, {\n            'source': 2,\n            'target': 5,\n            'value': 632\n          }, {\n            'source': 3,\n            'target': 4,\n            'value': 301\n          }, {\n            'source': 3,\n            'target': 5,\n            'value': 186\n          }]\n        }; // Error handling\n\n        var isDataValid = false;\n        var dataAvailable = false; // check if data is valid\n\n        if ((typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 && (typeof data['links'] === 'object' && data['links'].length) >= 0) {\n          isDataValid = true;\n        } // check if data is available\n\n\n        if (data['nodes'] && data['nodes'].length > 0 && data['links'] && data['links'].length > 0) {\n          dataAvailable = true;\n        } // show error\n\n\n        if (!isDataValid) {\n          console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n          console.info('Valid data format is: ', testData, JSON.stringify(testData));\n          showError(selection, 'Error loading chart, data is invalid');\n          return false;\n        } // TODO use nv.utils.noData\n\n\n        if (!dataAvailable) {\n          showError(selection, 'No data available');\n          return false;\n        } // No errors, continue\n        // append the svg canvas to the page\n\n\n        var svg = selection.append('svg').attr('width', width).attr('height', height).append('g').attr('class', 'nvd3 nv-wrap nv-sankeyChart'); // Set the sankey diagram properties\n\n        sankey.nodeWidth(nodeWidth).nodePadding(nodePadding).size([width, height]);\n        var path = sankey.link();\n        sankey.nodes(data.nodes).links(data.links).layout(32).center(center); // add in the links\n\n        var link = svg.append('g').selectAll('.link').data(data.links).enter().append('path').attr('class', 'link').attr('d', path).style('stroke-width', function (d) {\n          return Math.max(1, d.dy);\n        }).sort(function (a, b) {\n          return b.dy - a.dy;\n        }); // add the link titles\n\n        link.append('title').text(linkTitle); // add in the nodes\n\n        var node = svg.append('g').selectAll('.node').data(data.nodes).enter().append('g').attr('class', 'node').attr('transform', function (d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        }).call(d3.behavior.drag().origin(function (d) {\n          return d;\n        }).on('dragstart', function () {\n          this.parentNode.appendChild(this);\n        }).on('drag', dragmove)); // add the rectangles for the nodes\n\n        node.append('rect').attr('height', function (d) {\n          return d.dy;\n        }).attr('width', sankey.nodeWidth()).style('fill', nodeFillColor).style('stroke', nodeStrokeColor).append('title').text(nodeTitle); // add in the title for the nodes\n\n        node.append('text').attr('x', -6).attr('y', function (d) {\n          return d.dy / 2;\n        }).attr('dy', '.35em').attr('text-anchor', 'end').attr('transform', null).text(function (d) {\n          return d.name;\n        }).filter(function (d) {\n          return d.x < width / 2;\n        }).attr('x', 6 + sankey.nodeWidth()).attr('text-anchor', 'start'); // the function for moving the nodes\n\n        function dragmove(d) {\n          d3.select(this).attr('transform', 'translate(' + d.x + ',' + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ')');\n          sankey.relayout();\n          link.attr('d', path);\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      units: {\n        get: function get() {\n          return units;\n        },\n        set: function set(_) {\n          units = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      format: {\n        get: function get() {\n          return format;\n        },\n        set: function set(_) {\n          format = _;\n        }\n      },\n      linkTitle: {\n        get: function get() {\n          return linkTitle;\n        },\n        set: function set(_) {\n          linkTitle = _;\n        }\n      },\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = _;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      center: {\n        get: function get() {\n          return center;\n        },\n        set: function set(_) {\n          center = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      nodeStyle: {\n        get: function get() {\n          return {};\n        },\n        set: function set(_) {\n          nodeFillColor = _.fillColor !== undefined ? _.fillColor : nodeFillColor;\n          nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n          nodeTitle = _.title !== undefined ? _.title : nodeTitle;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatter = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor() // chooses color\n    ,\n        pointBorderColor = null,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        z = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value\n    ,\n        getSize = function getSize(d) {\n      return d.size || 1;\n    } // accessor to get the point size\n    ,\n        getShape = function getShape(d) {\n      return d.shape || 'circle';\n    } // accessor to get point shape\n    ,\n        forceX = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        forceY = [] // List of numbers to Force into the Y scale\n    ,\n        forceSize = [] // List of numbers to Force into the Size scale\n    ,\n        interactive = true // If true, plots a voronoi overlay for advanced point intersection\n    ,\n        pointActive = function pointActive(d) {\n      return !d.notActive;\n    } // any points that return false will be filtered out\n    ,\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n    ,\n        clipEdge = false // if true, masks points within x and y scale\n    ,\n        clipVoronoi = true // if true, masks each point with a circle... can turn off to slightly increase performance\n    ,\n        showVoronoi = false // display the voronoi areas\n    ,\n        clipRadius = function clipRadius() {\n      return 25;\n    } // function to get the radius for voronoi point clips\n    ,\n        xDomain = null // Override x domain (skips the calculation from data)\n    ,\n        yDomain = null // Override y domain\n    ,\n        xRange = null // Override x range\n    ,\n        yRange = null // Override y range\n    ,\n        sizeDomain = null // Override point size domain\n    ,\n        sizeRange = null,\n        singlePoint = false,\n        dispatch = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd'),\n        useVoronoi = true,\n        duration = 250,\n        interactiveUpdateDelay = 300,\n        showLabels = false; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0,\n        z0 // used to store previous scales\n    ,\n        xDom,\n        yDom // used to store previous domains\n    ,\n        width0,\n        height0,\n        timeoutID,\n        needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        _sizeRange_def = [16, 256],\n        _cache = {}; //============================================================\n    // Diff and Cache Utilities\n    //------------------------------------------------------------\n    // getDiffs is used to filter unchanged points from the update\n    // selection. It implicitly updates it's cache when called and\n    // therefor the diff is based upon the previous invocation NOT\n    // the previous update.\n    //\n    // getDiffs takes a point as its first argument followed by n\n    // key getter pairs (d, [key, get... key, get]) this approach\n    // was chosen for efficiency. (The filter will call it a LOT).\n    //\n    // It is important to call delCache on point exit to prevent a\n    // memory leak. It is also needed to prevent invalid caches if\n    // a new point uses the same series and point id key.\n    //\n    // Argument Performance Concerns:\n    // - Object property lists for key getter pairs would be very\n    // expensive (points * objects for the GC every update).\n    // - ES6 function names for implicit keys would be nice but\n    // they are not guaranteed to be unique.\n    // - function.toString to obtain implicit keys is possible\n    // but long object keys are not free (internal hash).\n    // - Explicit key without objects are the most efficient.\n\n    function getCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      val = _cache[key] = _cache[key] || {};\n      return val;\n    }\n\n    function delCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      delete _cache[key];\n    }\n\n    function getDiffs(d) {\n      var i,\n          key,\n          val,\n          cache = getCache(d),\n          diffs = false;\n\n      for (i = 1; i < arguments.length; i += 2) {\n        key = arguments[i];\n        val = arguments[i + 1](d[0], d[1]);\n\n        if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n          cache[key] = val;\n          diffs = true;\n        }\n      }\n\n      return diffs;\n    }\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n\n        var logScale = typeof chart.yScale().base === \"function\"; // Only log scale has a method \"base()\"\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain && sizeDomain ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n        d3.merge(data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              size: getSize(d, i)\n            };\n          });\n        }));\n        x.domain(xDomain || d3.extent(seriesData.map(function (d) {\n          return d.x;\n        }).concat(forceX)));\n        if (padData && data[0]) x.range(xRange || [(availableWidth * padDataOuter + availableWidth) / (2 * data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)]); //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n        else x.range(xRange || [0, availableWidth]);\n\n        if (logScale) {\n          var min = d3.min(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;\n          }));\n          y.clamp(true).domain(yDomain || d3.extent(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;else return min * 0.1;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        } else {\n          y.domain(yDomain || d3.extent(seriesData.map(function (d) {\n            return d.y;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        }\n\n        z.domain(sizeDomain || d3.extent(seriesData.map(function (d) {\n          return d.size;\n        }).concat(forceSize))).range(sizeRange || _sizeRange_def); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n\n        if (isNaN(x.domain()[0])) {\n          x.domain([-1, 1]);\n        }\n\n        if (isNaN(y.domain()[0])) {\n          y.domain([-1, 1]);\n        }\n\n        x0 = x0 || x;\n        y0 = y0 || y;\n        z0 = z0 || z;\n        var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n        width0 = width0 || width;\n        height0 = height0 || height;\n        var sizeDiff = width0 !== width || height0 !== height; // Domain Diffs\n\n        xDom = xDom || [];\n        var domainDiff = xDom[0] !== x.domain()[0] || xDom[1] !== x.domain()[1];\n        xDom = x.domain();\n        yDom = yDom || [];\n        domainDiff = domainDiff || yDom[0] !== y.domain()[0] || yDom[1] !== y.domain()[1];\n        yDom = y.domain(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.classed('nv-single-point', singlePoint);\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-point-paths');\n        wrapEnter.append('g').attr('class', 'nv-point-clips');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect').attr('transform', 'translate( -10, -10)');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth + 20).attr('height', availableHeight > 0 ? availableHeight + 20 : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n        function updateInteractiveLayer() {\n          // Always clear needs-update flag regardless of whether or not\n          // we will actually do anything (avoids needless invocations).\n          needsUpdate = false;\n          if (!interactive) return false; // inject series and point index for reference into voronoi\n\n          if (useVoronoi === true) {\n            // nuke all voronoi paths on reload and recreate them\n            wrap.select('.nv-point-paths').selectAll('path').remove();\n            var vertices = d3.merge(data.map(function (group, groupIndex) {\n              return group.values.map(function (point, pointIndex) {\n                // *Adding noise to make duplicates very unlikely\n                // *Injecting series and point index for reference\n                // *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                var pX = getX(point, pointIndex);\n                var pY = getY(point, pointIndex);\n                return [nv.utils.NaNtoZero(x(pX)) + Math.random() * 1e-4, nv.utils.NaNtoZero(y(pY)) + Math.random() * 1e-4, groupIndex, pointIndex, point];\n              }).filter(function (pointArray, pointIndex) {\n                return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n              });\n            }));\n            if (vertices.length == 0) return false; // No active points, we're done\n\n            if (vertices.length < 3) {\n              // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n              vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n              vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n            } // keep voronoi sections from going more than 10 outside of graph\n            // to avoid overlap with other things like legend etc\n\n\n            var bounds = d3.geom.polygon([[-10, -10], [-10, height + 10], [width + 10, height + 10], [width + 10, -10]]); // delete duplicates from vertices - essential assumption for d3.geom.voronoi\n\n            var epsilon = 1e-4; // Uses 1e-4 to determine equivalence.\n\n            vertices = vertices.sort(function (a, b) {\n              return a[0] - b[0] || a[1] - b[1];\n            });\n\n            for (var i = 0; i < vertices.length - 1;) {\n              if (Math.abs(vertices[i][0] - vertices[i + 1][0]) < epsilon && Math.abs(vertices[i][1] - vertices[i + 1][1]) < epsilon) {\n                vertices.splice(i + 1, 1);\n              } else {\n                i++;\n              }\n            }\n\n            var voronoi = d3.geom.voronoi(vertices).map(function (d, i) {\n              return {\n                'data': bounds.clip(d),\n                'series': vertices[i][2],\n                'point': vertices[i][3]\n              };\n            });\n            var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n            var vPointPaths = pointPaths.enter().append(\"svg:path\").attr(\"d\", function (d) {\n              if (!d || !d.data || d.data.length === 0) return 'M 0 0';else return \"M\" + d.data.join(\",\") + \"Z\";\n            }).attr(\"id\", function (d, i) {\n              return \"nv-path-\" + i;\n            }).attr(\"clip-path\", function (d, i) {\n              return \"url(#nv-clip-\" + id + \"-\" + i + \")\";\n            }); // good for debugging point hover issues\n\n            if (showVoronoi) {\n              vPointPaths.style(\"fill\", d3.rgb(230, 230, 230)).style('fill-opacity', 0.4).style('stroke-opacity', 1).style(\"stroke\", d3.rgb(200, 200, 200));\n            }\n\n            if (clipVoronoi) {\n              // voronoi sections are already set to clip,\n              // just create the circles with the IDs they expect\n              wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\n              var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n              var vPointClips = pointClips.enter().append(\"svg:clipPath\").attr(\"id\", function (d, i) {\n                return \"nv-clip-\" + id + \"-\" + i;\n              }).append(\"svg:circle\").attr('cx', function (d) {\n                return d[0];\n              }).attr('cy', function (d) {\n                return d[1];\n              }).attr('r', clipRadius);\n            }\n\n            var mouseEventCallback = function mouseEventCallback(el, d, mDispatch) {\n              if (needsUpdate) return 0;\n              var series = data[d.series];\n              if (series === undefined) return;\n              var point = series.values[d.point];\n              point['color'] = color(series, d.series); // standardize attributes for tooltip.\n\n              point['x'] = getX(point);\n              point['y'] = getY(point); // can't just get box of event node since it's actually a voronoi polygon\n\n              var box = container.node().getBoundingClientRect();\n              var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n              var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n              var pos = {\n                left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n              };\n              mDispatch({\n                point: point,\n                series: series,\n                pos: pos,\n                relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: d.point,\n                event: d3.event,\n                element: el\n              });\n            };\n\n            pointPaths.on('click', function (d) {\n              mouseEventCallback(this, d, dispatch.elementClick);\n            }).on('dblclick', function (d) {\n              mouseEventCallback(this, d, dispatch.elementDblClick);\n            }).on('mouseover', function (d) {\n              mouseEventCallback(this, d, dispatch.elementMouseover);\n            }).on('mouseout', function (d, i) {\n              mouseEventCallback(this, d, dispatch.elementMouseout);\n            });\n          } else {\n            // add event handlers to points instead voronoi paths\n            wrap.select('.nv-groups').selectAll('.nv-group').selectAll('.nv-point') //.data(dataWithPoints)\n            //.style('pointer-events', 'auto') // recativate events, disabled by css\n            .on('click', function (d, i) {\n              //nv.log('test', d, i);\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              var element = this;\n              dispatch.elementClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                event: d3.event,\n                element: element\n              });\n            }).on('dblclick', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementDblClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i\n              });\n            }).on('mouseover', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseover({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            }).on('mouseout', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseout({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            });\n          }\n        }\n\n        needsUpdate = true;\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('nv-noninteractive', !interactive).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'scatter: groups').style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.pointBorderColor || pointBorderColor || color(d, i);\n        }).style('stroke-opacity', 1).style('fill-opacity', .5); // create the points, maintaining their IDs from the original data set\n\n        var points = groups.selectAll('path.nv-point').data(function (d) {\n          return d.values.map(function (point, pointIndex) {\n            return [point, pointIndex];\n          }).filter(function (pointArray, pointIndex) {\n            return pointActive(pointArray[0], pointIndex);\n          });\n        });\n        points.enter().append('path').attr('class', function (d) {\n          return 'nv-point nv-point-' + d[1];\n        }).style('fill', function (d) {\n          return d.color;\n        }).style('stroke', function (d) {\n          return d.color;\n        }).attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n        }).attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        }));\n        points.exit().each(delCache).remove();\n        groups.exit().selectAll('path.nv-point').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }).remove(); //============================================================\n        // Point Update Optimisation Notes\n        //------------------------------------------------------------\n        // The following update selections are filtered with getDiffs\n        // (defined at the top of this file) this brings a performance\n        // benefit for charts with large data sets that accumulate a\n        // subset of changes or additions over time.\n        //\n        // Uneccesary and expensive DOM calls are avoided by culling\n        // unchanged points from the selection in exchange for the\n        // cheaper overhead of caching and diffing each point first.\n        //\n        // Due to the way D3 and NVD3 work, other global changes need\n        // to be considered in addition to local point properties.\n        // This is a potential source of bugs (if any of the global\n        // changes that possibly affect points are missed).\n        // Update Point Positions [x, y]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'x', getX, 'y', getY) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }); // Update Point Appearance [shape, size]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'shape', getShape, 'size', getSize) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        })); // add label a label to scatter chart\n\n        if (showLabels) {\n          var titles = groups.selectAll('.nv-label').data(function (d) {\n            return d.values.map(function (point, pointIndex) {\n              return [point, pointIndex];\n            }).filter(function (pointArray, pointIndex) {\n              return pointActive(pointArray[0], pointIndex);\n            });\n          });\n          titles.enter().append('text').style('fill', function (d, i) {\n            return d.color;\n          }).style('stroke-opacity', 0).style('fill-opacity', 1).attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n          }).text(function (d, i) {\n            return d[0].label;\n          });\n          titles.exit().remove();\n          groups.exit().selectAll('path.nv-label').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          }).remove();\n          titles.each(function (d) {\n            d3.select(this).classed('nv-label', true).classed('nv-label-' + d[1], false).classed('hover', false);\n          });\n          titles.watchTransition(renderWatch, 'scatter labels').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          });\n        } // Delay updating the invisible interactive layer for smoother animation\n\n\n        if (interactiveUpdateDelay) {\n          clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\n          timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay);\n        } else {\n          updateInteractiveLayer();\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy();\n        z0 = z.copy();\n        width0 = width;\n        height0 = height;\n      });\n      renderWatch.renderEnd('scatter immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart); // utility function calls provided by this chart\n\n    chart._calls = new function () {\n      this.clearHighlights = function () {\n        nv.dom.write(function () {\n          container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n        });\n        return null;\n      };\n\n      this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n        nv.dom.write(function () {\n          container.select('.nv-groups').selectAll(\".nv-series-\" + seriesIndex).selectAll(\".nv-point-\" + pointIndex).classed(\"hover\", isHoverOver);\n        });\n      };\n    }(); // trigger calls from events too\n\n    dispatch.on('elementMouseover.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, true);\n    });\n    dispatch.on('elementMouseout.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, false);\n    });\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      pointScale: {\n        get: function get() {\n          return z;\n        },\n        set: function set(_) {\n          z = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      pointDomain: {\n        get: function get() {\n          return sizeDomain;\n        },\n        set: function set(_) {\n          sizeDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      pointRange: {\n        get: function get() {\n          return sizeRange;\n        },\n        set: function set(_) {\n          sizeRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      forcePoint: {\n        get: function get() {\n          return forceSize;\n        },\n        set: function set(_) {\n          forceSize = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      pointActive: {\n        get: function get() {\n          return pointActive;\n        },\n        set: function set(_) {\n          pointActive = _;\n        }\n      },\n      padDataOuter: {\n        get: function get() {\n          return padDataOuter;\n        },\n        set: function set(_) {\n          padDataOuter = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      clipVoronoi: {\n        get: function get() {\n          return clipVoronoi;\n        },\n        set: function set(_) {\n          clipVoronoi = _;\n        }\n      },\n      clipRadius: {\n        get: function get() {\n          return clipRadius;\n        },\n        set: function set(_) {\n          clipRadius = _;\n        }\n      },\n      showVoronoi: {\n        get: function get() {\n          return showVoronoi;\n        },\n        set: function set(_) {\n          showVoronoi = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactiveUpdateDelay: {\n        get: function get() {\n          return interactiveUpdateDelay;\n        },\n        set: function set(_) {\n          interactiveUpdateDelay = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      pointBorderColor: {\n        get: function get() {\n          return pointBorderColor;\n        },\n        set: function set(_) {\n          pointBorderColor = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      pointSize: {\n        get: function get() {\n          return getSize;\n        },\n        set: function set(_) {\n          getSize = d3.functor(_);\n        }\n      },\n      pointShape: {\n        get: function get() {\n          return getShape;\n        },\n        set: function set(_) {\n          getShape = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n\n          if (useVoronoi === false) {\n            clipVoronoi = false;\n          }\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatterChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        distX = nv.models.distribution(),\n        distY = nv.models.distribution(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 75\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        container = null,\n        color = nv.utils.defaultColor(),\n        x = scatter.xScale(),\n        y = scatter.yScale(),\n        showDistX = false,\n        showDistY = false,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        noData = null,\n        duration = 250,\n        showLabels = false;\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickPadding(10);\n    distX.axis('x');\n    distY.axis('y');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      if (showDistX) renderWatch.models(distX);\n      if (showDistY) renderWatch.models(distY);\n      selection.each(function (data) {\n        var that = this;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          renderWatch.renderEnd('scatter immediate');\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = scatter.xScale();\n        y = scatter.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g'); // background for pointer events\n\n        gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n        gEnter.append('g').attr('class', 'nv-distWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Legend\n\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = availableWidth;\n          legend.width(legendWidth);\n          wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0' + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        scatter.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          d.color = d.color || color(d, i);\n          return d.color;\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        })).showLabels(showLabels);\n        wrap.select('.nv-scatterWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })).call(scatter);\n        wrap.select('.nv-regressionLinesWrap').attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n        var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines').data(function (d) {\n          return d;\n        });\n        regWrap.enter().append('g').attr('class', 'nv-regLines');\n        var regLine = regWrap.selectAll('.nv-regLine').data(function (d) {\n          return [d];\n        });\n        regLine.enter().append('line').attr('class', 'nv-regLine').style('stroke-opacity', 0); // don't add lines unless we have slope and intercept to use\n\n        regLine.filter(function (d) {\n          return d.intercept && d.slope;\n        }).watchTransition(renderWatch, 'scatterPlusLineChart: regline').attr('x1', x.range()[0]).attr('x2', x.range()[1]).attr('y1', function (d, i) {\n          return y(x.domain()[0] * d.slope + d.intercept);\n        }).attr('y2', function (d, i) {\n          return y(x.domain()[1] * d.slope + d.intercept);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j);\n        }).style('stroke-opacity', function (d, i) {\n          return d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined' ? 0 : 1;\n        }); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Setup Distribution\n\n\n        if (showDistX) {\n          distX.getData(scatter.x()).scale(x).width(availableWidth).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionX');\n          g.select('.nv-distributionX').attr('transform', 'translate(0,' + y.range()[0] + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distX);\n        }\n\n        if (showDistY) {\n          distY.getData(scatter.y()).scale(y).width(availableHeight).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionY');\n          g.select('.nv-distributionY').attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size()) + ',0)').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distY);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\n        scatter.dispatch.on('elementMouseout.tooltip', function (evt) {\n          tooltip.hidden(true);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', 0);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', distY.size());\n        });\n        scatter.dispatch.on('elementMouseover.tooltip', function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.relativePos[1] - availableHeight);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.relativePos[0] + distX.size());\n          tooltip.data(evt).hidden(false);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('scatter with line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      container: {\n        get: function get() {\n          return container;\n        },\n        set: function set(_) {\n          container = _;\n        }\n      },\n      showDistX: {\n        get: function get() {\n          return showDistX;\n        },\n        set: function set(_) {\n          showDistX = _;\n        }\n      },\n      showDistY: {\n        get: function get() {\n          return showDistY;\n        },\n        set: function set(_) {\n          showDistY = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          distX.color(color);\n          distY.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparkline = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        animate = true,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.getColor(['#000']),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        showMinMaxPoints = true,\n        showCurrentPoint = true,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data, getX)).range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data, getY)).range(yRange || [availableHeight, 0]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var paths = wrap.selectAll('path').data(function (d) {\n          return [d];\n        });\n        paths.enter().append('path');\n        paths.exit().remove();\n        paths.style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).attr('d', d3.svg.line().x(function (d, i) {\n          return x(getX(d, i));\n        }).y(function (d, i) {\n          return y(getY(d, i));\n        })); // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\n        var points = wrap.selectAll('circle.nv-point').data(function (data) {\n          var yValues = data.map(function (d, i) {\n            return getY(d, i);\n          });\n\n          function pointIndex(index) {\n            if (index != -1) {\n              var result = data[index];\n              result.pointIndex = index;\n              return result;\n            } else {\n              return null;\n            }\n          }\n\n          var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n              minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n              currentPoint = pointIndex(yValues.length - 1);\n          return [showMinMaxPoints ? minPoint : null, showMinMaxPoints ? maxPoint : null, showCurrentPoint ? currentPoint : null].filter(function (d) {\n            return d != null;\n          });\n        });\n        points.enter().append('circle');\n        points.exit().remove();\n        points.attr('cx', function (d, i) {\n          return x(getX(d, d.pointIndex));\n        }).attr('cy', function (d, i) {\n          return y(getY(d, d.pointIndex));\n        }).attr('r', 2).attr('class', function (d, i) {\n          return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' : getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue';\n        });\n      });\n      renderWatch.renderEnd('sparkline immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      animate: {\n        get: function get() {\n          return animate;\n        },\n        set: function set(_) {\n          animate = _;\n        }\n      },\n      showMinMaxPoints: {\n        get: function get() {\n          return showMinMaxPoints;\n        },\n        set: function set(_) {\n          showMinMaxPoints = _;\n        }\n      },\n      showCurrentPoint: {\n        get: function get() {\n          return showCurrentPoint;\n        },\n        set: function set(_) {\n          showCurrentPoint = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparklinePlus = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n    var margin = {\n      top: 15,\n      right: 100,\n      bottom: 10,\n      left: 50\n    },\n        width = null,\n        height = null,\n        x,\n        y,\n        index = [],\n        paused = false,\n        xTickFormat = d3.format(',r'),\n        yTickFormat = d3.format(',.2f'),\n        showLastValue = true,\n        alignValue = true,\n        rightAlignValue = false,\n        noData = null,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sparkline);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var currentValue = sparkline.y()(data[data.length - 1], data.length - 1); // Setup Scales\n\n        x = sparkline.xScale();\n        y = sparkline.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-sparklineWrap');\n        gEnter.append('g').attr('class', 'nv-valueWrap');\n        gEnter.append('g').attr('class', 'nv-hoverArea');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        var sparklineWrap = g.select('.nv-sparklineWrap');\n        sparkline.width(availableWidth).height(availableHeight);\n        sparklineWrap.call(sparkline);\n\n        if (showLastValue) {\n          var valueWrap = g.select('.nv-valueWrap');\n          var value = valueWrap.selectAll('.nv-currentValue').data([currentValue]);\n          value.enter().append('text').attr('class', 'nv-currentValue').attr('dx', rightAlignValue ? -8 : 8).attr('dy', '.9em').style('text-anchor', rightAlignValue ? 'end' : 'start');\n          value.attr('x', availableWidth + (rightAlignValue ? margin.right : 0)).attr('y', alignValue ? function (d) {\n            return y(d);\n          } : 0).style('fill', sparkline.color()(data[data.length - 1], data.length - 1)).text(yTickFormat(currentValue));\n        }\n\n        gEnter.select('.nv-hoverArea').append('rect').on('mousemove', sparklineHover).on('click', function () {\n          paused = !paused;\n        }).on('mouseout', function () {\n          index = [];\n          updateValueLine();\n        });\n        g.select('.nv-hoverArea rect').attr('transform', function (d) {\n          return 'translate(' + -margin.left + ',' + -margin.top + ')';\n        }).attr('width', availableWidth + margin.left + margin.right).attr('height', availableHeight + margin.top); //index is currently global (within the chart), may or may not keep it that way\n\n        function updateValueLine() {\n          if (paused) return;\n          var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n          var hoverEnter = hoverValue.enter().append('g').attr('class', 'nv-hoverValue').style('stroke-opacity', 0).style('fill-opacity', 0);\n          hoverValue.exit().transition().duration(250).style('stroke-opacity', 0).style('fill-opacity', 0).remove();\n          hoverValue.attr('transform', function (d) {\n            return 'translate(' + x(sparkline.x()(data[d], d)) + ',0)';\n          }).transition().duration(250).style('stroke-opacity', 1).style('fill-opacity', 1);\n          if (!index.length) return;\n          hoverEnter.append('line').attr('x1', 0).attr('y1', -margin.top).attr('x2', 0).attr('y2', availableHeight);\n          hoverEnter.append('text').attr('class', 'nv-xValue').attr('x', -6).attr('y', -margin.top).attr('text-anchor', 'end').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-xValue').text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n          hoverEnter.append('text').attr('class', 'nv-yValue').attr('x', 6).attr('y', -margin.top).attr('text-anchor', 'start').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-yValue').text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n        }\n\n        function sparklineHover() {\n          if (paused) return;\n          var pos = d3.mouse(this)[0] - margin.left;\n\n          function getClosestIndex(data, x) {\n            var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n            var closestIndex = 0;\n\n            for (var i = 0; i < data.length; i++) {\n              if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                distance = Math.abs(sparkline.x()(data[i], i) - x);\n                closestIndex = i;\n              }\n            }\n\n            return closestIndex;\n          }\n\n          index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n          updateValueLine();\n        }\n      });\n      renderWatch.renderEnd('sparklinePlus immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xTickFormat;\n        },\n        set: function set(_) {\n          xTickFormat = _;\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yTickFormat;\n        },\n        set: function set(_) {\n          yTickFormat = _;\n        }\n      },\n      showLastValue: {\n        get: function get() {\n          return showLastValue;\n        },\n        set: function set(_) {\n          showLastValue = _;\n        }\n      },\n      alignValue: {\n        get: function get() {\n          return alignValue;\n        },\n        set: function set(_) {\n          alignValue = _;\n        }\n      },\n      rightAlignValue: {\n        get: function get() {\n          return rightAlignValue;\n        },\n        set: function set(_) {\n          rightAlignValue = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedArea = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        color = nv.utils.defaultColor() // a function that computes the color\n    ,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        style = 'stack',\n        offset = 'zero',\n        order = 'default',\n        interpolate = 'linear' // controls the line interpolation\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        scatter = nv.models.scatter(),\n        duration = 250,\n        dispatch = d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout', 'renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout');\n\n    scatter.pointSize(2.2) // default size\n    .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        var dataRaw = data; // Injecting point index into each point because d3.layout.stack().out does not give index\n\n        data.forEach(function (aseries, i) {\n          aseries.seriesIndex = i;\n          aseries.values = aseries.values.map(function (d, j) {\n            d.index = j;\n            d.seriesIndex = i;\n            return d;\n          });\n        });\n        var dataFiltered = data.filter(function (series) {\n          return !series.disabled;\n        });\n        data = d3.layout.stack().order(order).offset(offset).values(function (d) {\n          return d.values;\n        }) //TODO: make values customizeable in EVERY model in this fashion\n        .x(getX).y(getY).out(function (d, y0, y) {\n          d.display = {\n            y: y,\n            y0: y0\n          };\n        })(dataFiltered); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-areaWrap');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // If the user has not specified forceY, make sure 0 is included in the domain\n        // Otherwise, use user-specified values for forceY\n\n        if (scatter.forceY().length == 0) {\n          scatter.forceY().push(0);\n        }\n\n        scatter.width(availableWidth).height(availableHeight).x(getX).y(function (d) {\n          if (d.display !== undefined) {\n            return d.display.y + d.display.y0;\n          }\n        }).color(data.map(function (d, i) {\n          d.color = d.color || color(d, d.seriesIndex);\n          return d.color;\n        }));\n        var scatterWrap = g.select('.nv-scatterWrap').datum(data);\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var area = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y + d.display.y0);\n        }).interpolate(interpolate);\n        var zeroArea = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y0);\n        });\n        var path = g.select('.nv-areaWrap').selectAll('path.nv-area').data(function (d) {\n          return d;\n        });\n        path.enter().append('path').attr('class', function (d, i) {\n          return 'nv-area nv-area-' + i;\n        }).attr('d', function (d, i) {\n          return zeroArea(d.values, d.seriesIndex);\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.areaMouseover({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaMouseout({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('click', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaClick({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        });\n        path.exit().remove();\n        path.style('fill', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        });\n        path.watchTransition(renderWatch, 'stackedArea path').attr('d', function (d, i) {\n          return area(d.values, i);\n        }); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        scatter.dispatch.on('elementMouseover.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n        });\n        scatter.dispatch.on('elementMouseout.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n        }); //Special offset functions\n\n        chart.d3_stackedOffset_stackPercent = function (stackData) {\n          var n = stackData.length,\n              //How many series\n          m = stackData[0].length,\n              //how many points per series\n          i,\n              j,\n              o,\n              y0 = [];\n\n          for (j = 0; j < m; ++j) {\n            //Looping through all points\n            for (i = 0, o = 0; i < dataRaw.length; i++) {\n              //looping through all series\n              o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n            }\n\n            if (o) for (i = 0; i < n; i++) {\n              //(total y value of all series at point in time i) != 0\n              stackData[i][j][1] /= o;\n            } else {\n              //(total y value of all series at point in time i) == 0\n              for (i = 0; i < n; i++) {\n                stackData[i][j][1] = 0;\n              }\n            }\n          }\n\n          for (j = 0; j < m; ++j) {\n            y0[j] = 0;\n          }\n\n          return y0;\n        };\n      });\n      renderWatch.renderEnd('stackedArea immediate');\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n\n    chart.interpolate = function (_) {\n      if (!arguments.length) return interpolate;\n      interpolate = _;\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      scatter.duration(duration);\n      return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      offset: {\n        get: function get() {\n          return offset;\n        },\n        set: function set(_) {\n          offset = _;\n        }\n      },\n      order: {\n        get: function get() {\n          return order;\n        },\n        set: function set(_) {\n          order = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      style: {\n        get: function get() {\n          return style;\n        },\n        set: function set(_) {\n          style = _;\n\n          switch (style) {\n            case 'stack':\n              chart.offset('zero');\n              chart.order('default');\n              break;\n\n            case 'stream':\n              chart.offset('wiggle');\n              chart.order('inside-out');\n              break;\n\n            case 'stream-center':\n              chart.offset('silhouette');\n              chart.order('inside-out');\n              break;\n\n            case 'expand':\n              chart.offset('expand');\n              chart.order('default');\n              break;\n\n            case 'stack_percent':\n              chart.offset(chart.d3_stackedOffset_stackPercent);\n              chart.order('default');\n              break;\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.stackedArea());\n    var margin = {\n      top: 10,\n      right: 25,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        focusEnable = false,\n        useInteractiveGuideline = false,\n        showTotalInTooltip = true,\n        totalLabel = 'TOTAL',\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = 250,\n        controlOptions = ['Stacked', 'Stream', 'Expanded'],\n        controlLabels = {},\n        duration = 250;\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    });\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          style: stacked.style()\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.style !== undefined) style = state.style;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(stacked);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = stacked.xScale();\n        y = stacked.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-stackedWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive'); // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = showControls && legendPosition === 'top' ? availableWidth - controlWidth : availableWidth;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            // constant from axis.js, plus some margin for better layout\n            var xAxisHeight = (showXAxis ? 12 : 0) + 10;\n            margin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            var legendTop = availableHeight + xAxisHeight;\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + legendTop + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && margin.top != legend.height()) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + (availableWidth - legendWidth) + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.stacked || 'Stacked',\n            metaKey: 'Stacked',\n            disabled: stacked.style() != 'stack',\n            style: 'stack'\n          }, {\n            key: controlLabels.stream || 'Stream',\n            metaKey: 'Stream',\n            disabled: stacked.style() != 'stream',\n            style: 'stream'\n          }, {\n            key: controlLabels.expanded || 'Expanded',\n            metaKey: 'Expanded',\n            disabled: stacked.style() != 'expand',\n            style: 'expand'\n          }, {\n            key: controlLabels.stack_percent || 'Stack %',\n            metaKey: 'Stack_Percent',\n            disabled: stacked.style() != 'stack_percent',\n            style: 'stack_percent'\n          }];\n          controlWidth = controlOptions.length / 3 * 260;\n          controlsData = controlsData.filter(function (d) {\n            return controlOptions.indexOf(d.metaKey) !== -1;\n          });\n          controls.width(controlWidth).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).call(controls);\n          var requiredTop = Math.max(controls.height(), showLegend && legendPosition === 'top' ? legend.height() : 0);\n\n          if (margin.top != requiredTop) {\n            margin.top = requiredTop;\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n          }\n\n          g.select('.nv-controlsWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        stacked.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          var ticks;\n\n          if (stacked.offset() === 'wiggle') {\n            ticks = 0;\n          } else {\n            ticks = nv.utils.calcTicksY(availableHeight / 36, data);\n          }\n\n          yAxis.scale(y)._ticks(ticks).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n              var currentFormat = yAxis.tickFormat();\n              if (!oldYTickFormat || currentFormat !== percentFormatter) oldYTickFormat = currentFormat; //Forces the yAxis to use percentage in 'expand' mode.\n\n              yAxis.tickFormat(percentFormatter);\n            } else {\n              if (oldYTickFormat) {\n                yAxis.tickFormat(oldYTickFormat);\n                oldYTickFormat = null;\n              }\n            }\n\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(0).call(yAxis);\n          }\n        } //============================================================\n        // Update Focus\n        //============================================================\n\n\n        if (!focusEnable) {\n          stackedWrap.transition().call(stacked);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        stacked.dispatch.on('areaClick.toggle', function (e) {\n          if (data.filter(function (d) {\n            return !d.disabled;\n          }).length === 1) data.forEach(function (d) {\n            d.disabled = false;\n          });else data.forEach(function (d, i) {\n            d.disabled = i != e.seriesIndex;\n          });\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n          stacked.style(d.style);\n          state.style = stacked.style();\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          stacked.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [],\n              valueSum = 0,\n              allNullValues = true,\n              atleastOnePoint = false;\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue != null && pointYValue > 0) {\n              stacked.highlightPoint(i, pointIndex, true);\n              atleastOnePoint = true;\n            } // Draw at least one point if all values are zero.\n\n\n            if (i === data.length - 1 && !atleastOnePoint) {\n              stacked.highlightPoint(i, pointIndex, true);\n            }\n\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\n            var tooltipValue = stacked.style() == 'expand' ? point.display.y : chart.y()(point, pointIndex);\n            allData.push({\n              key: series.key,\n              value: tooltipValue,\n              color: color(series, series.seriesIndex),\n              point: point\n            });\n\n            if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n              valueSum += tooltipValue;\n              allNullValues = false;\n            }\n\n            ;\n          });\n          allData.reverse(); //Highlight the tooltip entry based on which stack the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var yDistMax = Infinity,\n                indexToHighlight = null;\n            allData.forEach(function (series, i) {\n              //To handle situation where the stacked area chart is negative, we need to use absolute values\n              //when checking if the mouse Y value is within the stack area.\n              yValue = Math.abs(yValue);\n              var stackedY0 = Math.abs(series.point.display.y0);\n              var stackedY = Math.abs(series.point.display.y);\n\n              if (yValue >= stackedY0 && yValue <= stackedY + stackedY0) {\n                indexToHighlight = i;\n                return;\n              }\n            });\n            if (indexToHighlight != null) allData[indexToHighlight].highlight = true;\n          } //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\n\n          if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n            allData.push({\n              key: totalLabel,\n              value: valueSum,\n              total: true\n            });\n          }\n\n          var xValue = chart.x()(singlePoint, pointIndex);\n          var valueFormatter = interactiveLayer.tooltip.valueFormatter(); // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\n          if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n            if (!oldValueFormatter) {\n              oldValueFormatter = valueFormatter;\n            } //Forces the tooltip to use percentage in 'expand' mode.\n\n\n            valueFormatter = d3.format(\".1%\");\n          } else {\n            if (oldValueFormatter) {\n              valueFormatter = oldValueFormatter;\n              oldValueFormatter = null;\n            }\n          }\n\n          interactiveLayer.tooltip.valueFormatter(valueFormatter).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          stacked.clearHighlights();\n        });\n        /* Update `main' graph on brush update. */\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.style !== 'undefined') {\n            stacked.style(e.style);\n            style = e.style;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return stacked.x()(d, i) >= extent[0] && stacked.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          stackedWrap.transition().duration(duration).call(stacked); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('stacked Area chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    stacked.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.point['x'] = stacked.x()(evt.point);\n      evt.point['y'] = stacked.y()(evt.point);\n      tooltip.data(evt).hidden(false);\n    });\n    stacked.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      controlOptions: {\n        get: function get() {\n          return controlOptions;\n        },\n        set: function set(_) {\n          controlOptions = _;\n        }\n      },\n      showTotalInTooltip: {\n        get: function get() {\n          return showTotalInTooltip;\n        },\n        set: function set(_) {\n          showTotalInTooltip = _;\n        }\n      },\n      totalLabel: {\n        get: function get() {\n          return totalLabel;\n        },\n        set: function set(_) {\n          totalLabel = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          focus.margin.top = _.top !== undefined ? _.top : focus.margin.top;\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          stacked.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          stacked.color(color);\n          focus.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return stacked.x();\n        },\n        set: function set(_) {\n          stacked.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return stacked.y();\n        },\n        set: function set(_) {\n          stacked.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = !!_;\n          chart.interactive(!_);\n          chart.useVoronoi(!_);\n          stacked.scatter.interactive(!_);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaWithFocusChart = function () {\n    return nv.models.stackedAreaChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  }; // based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\n\n  nv.models.sunburst = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 600,\n        height = 600,\n        mode = \"count\",\n        modes = {\n      count: function count(d) {\n        return 1;\n      },\n      value: function value(d) {\n        return d.value || d.size;\n      },\n      size: function size(d) {\n        return d.value || d.size;\n      }\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        showLabels = false,\n        labelFormat = function labelFormat(d) {\n      if (mode === 'count') {\n        return d.name + ' #' + d.value;\n      } else {\n        return d.name + ' ' + (d.value || d.size);\n      }\n    },\n        labelThreshold = 0.02,\n        sort = function sort(d1, d2) {\n      return d1.name > d2.name;\n    },\n        key = function key(d, i) {\n      if (d.parent !== undefined) {\n        return d.name + '-' + d.parent.name + '-' + i;\n      } else {\n        return d.name;\n      }\n    },\n        groupColorByParent = true,\n        duration = 500,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd'); //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n    var partition = d3.layout.partition().sort(sort);\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n    var arc = d3.svg.arc().startAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n    }).endAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n    }).innerRadius(function (d) {\n      return Math.max(0, y(d.y));\n    }).outerRadius(function (d) {\n      return Math.max(0, y(d.y + d.dy));\n    });\n\n    function rotationToAvoidUpsideDown(d) {\n      var centerAngle = computeCenterAngle(d);\n\n      if (centerAngle > 90) {\n        return 180;\n      } else {\n        return 0;\n      }\n    }\n\n    function computeCenterAngle(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var centerAngle = (startAngle + endAngle) / 2 * (180 / Math.PI) - 90;\n      return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var size = endAngle - startAngle;\n      return size > labelThreshold;\n    } // When zooming: interpolate the scales.\n\n\n    function arcTweenZoom(e, i) {\n      var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n          yd = d3.interpolate(y.domain(), [node.y, 1]),\n          yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n      if (i === 0) {\n        return function () {\n          return arc(e);\n        };\n      } else {\n        return function (t) {\n          x.domain(xd(t));\n          y.domain(yd(t)).range(yr(t));\n          return arc(e);\n        };\n      }\n\n      ;\n    }\n\n    function arcTweenUpdate(d) {\n      var ipo = d3.interpolate({\n        x: d.x0,\n        dx: d.dx0,\n        y: d.y0,\n        dy: d.dy0\n      }, d);\n      return function (t) {\n        var b = ipo(t);\n        d.x0 = b.x;\n        d.dx0 = b.dx;\n        d.y0 = b.y;\n        d.dy0 = b.dy;\n        return arc(b);\n      };\n    }\n\n    function updatePrevPosition(node) {\n      var k = key(node);\n      if (!prevPositions[k]) prevPositions[k] = {};\n      var pP = prevPositions[k];\n      pP.dx = node.dx;\n      pP.x = node.x;\n      pP.dy = node.dy;\n      pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n      nodes.forEach(function (n) {\n        var k = key(n);\n        var pP = prevPositions[k]; //console.log(k,n,pP);\n\n        if (pP) {\n          n.dx0 = pP.dx;\n          n.x0 = pP.x;\n          n.dy0 = pP.dy;\n          n.y0 = pP.y;\n        } else {\n          n.dx0 = n.dx;\n          n.x0 = n.x;\n          n.dy0 = n.dy;\n          n.y0 = n.y;\n        }\n\n        updatePrevPosition(n);\n      });\n    }\n\n    function zoomClick(d) {\n      var labels = container.selectAll('text');\n      var path = container.selectAll('path'); // fade out all text elements\n\n      labels.transition().attr(\"opacity\", 0); // to allow reference to the new center node\n\n      node = d;\n      path.transition().duration(duration).attrTween(\"d\", arcTweenZoom).each('end', function (e) {\n        // partially taken from here: http://bl.ocks.org/metmajer/5480307\n        // check if the animated element's data e lies within the visible angle span given in d\n        if (e.x >= d.x && e.x < d.x + d.dx) {\n          if (e.depth >= d.depth) {\n            // get a selection of the associated text element\n            var parentNode = d3.select(this.parentNode);\n            var arcText = parentNode.select('text'); // fade in the text element and recalculate positions\n\n            arcText.transition().duration(duration).text(function (e) {\n              return labelFormat(e);\n            }).attr(\"opacity\", function (d) {\n              if (labelThresholdMatched(d)) {\n                return 1;\n              } else {\n                return 0;\n              }\n            }).attr(\"transform\", function () {\n              var width = this.getBBox().width;\n              if (e.depth === 0) return \"translate(\" + width / 2 * -1 + \",0)\";else if (e.depth === d.depth) {\n                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n              } else {\n                var centerAngle = computeCenterAngle(e);\n                var rotation = rotationToAvoidUpsideDown(e);\n\n                if (rotation === 0) {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + 5) + ',0)';\n                } else {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                }\n              }\n            });\n          }\n        }\n      });\n    } //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        radius = Math.min(availableWidth, availableHeight) / 2;\n        y.range([0, radius]); // Setup containers and skeleton of chart\n\n        var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\n        if (!wrap[0][0]) {\n          wrap = container.append('g').attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id).attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        } else {\n          wrap.attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        }\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        partition.value(modes[mode] || modes[\"count\"]); //reverse the drawing order so that the labels of inner\n        //arcs are drawn on top of the outer arcs.\n\n        var nodes = partition.nodes(data[0]).reverse();\n        storeRetrievePrevPositions(nodes);\n        var cG = wrap.selectAll('.arc-container').data(nodes, key); //handle new datapoints\n\n        var cGE = cG.enter().append(\"g\").attr(\"class\", 'arc-container');\n        cGE.append(\"path\").attr(\"d\", arc).style(\"fill\", function (d) {\n          if (d.color) {\n            return d.color;\n          } else if (groupColorByParent) {\n            return color((d.children ? d : d.parent).name);\n          } else {\n            return color(d.name);\n          }\n        }).style(\"stroke\", \"#FFF\").on(\"click\", function (d, i) {\n          zoomClick(d);\n          dispatch.elementClick({\n            data: d,\n            index: i\n          });\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true).style('opacity', 0.8);\n          dispatch.elementMouseover({\n            data: d,\n            color: d3.select(this).style(\"fill\"),\n            percent: computeNodePercentage(d)\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false).style('opacity', 1);\n          dispatch.elementMouseout({\n            data: d\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d\n          });\n        }); ///Iterating via each and selecting based on the this\n        ///makes it work ... a cG.selectAll('path') doesn't.\n        ///Without iteration the data (in the element) didn't update.\n\n        cG.each(function (d) {\n          d3.select(this).select('path').transition().duration(duration).attrTween('d', arcTweenUpdate);\n        });\n\n        if (showLabels) {\n          //remove labels first and add them back\n          cG.selectAll('text').remove(); //this way labels are on top of newly added arcs\n\n          cG.append('text').text(function (e) {\n            return labelFormat(e);\n          }).transition().duration(duration).attr(\"opacity\", function (d) {\n            if (labelThresholdMatched(d)) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }).attr(\"transform\", function (d) {\n            var width = this.getBBox().width;\n\n            if (d.depth === 0) {\n              return \"rotate(0)translate(\" + width / 2 * -1 + \",0)\";\n            } else {\n              var centerAngle = computeCenterAngle(d);\n              var rotation = rotationToAvoidUpsideDown(d);\n\n              if (rotation === 0) {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + 5) + ',0)';\n              } else {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n              }\n            }\n          });\n        } //zoom out to the center when the data is updated.\n\n\n        zoomClick(nodes[nodes.length - 1]); //remove unmatched elements ...\n\n        cG.exit().transition().duration(duration).attr('opacity', 0).each('end', function (d) {\n          var k = key(d);\n          prevPositions[k] = undefined;\n        }).remove();\n      });\n      renderWatch.renderEnd('sunburst immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(_) {\n          mode = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      groupColorByParent: {\n        get: function get() {\n          return groupColorByParent;\n        },\n        set: function set(_) {\n          groupColorByParent = !!_;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = !!_;\n        }\n      },\n      labelFormat: {\n        get: function get() {\n          return labelFormat;\n        },\n        set: function set(_) {\n          labelFormat = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      sort: {\n        get: function get() {\n          return sort;\n        },\n        set: function set(_) {\n          sort = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return key;\n        },\n        set: function set(_) {\n          key = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sunburstChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showTooltipPercent = false,\n        id = Math.round(Math.random() * 100000),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d) {\n      return d;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sunburst);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin);\n        var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = container; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        sunburst.width(availableWidth).height(availableHeight).margin(margin);\n        container.call(sunburst);\n      });\n      renderWatch.renderEnd('sunburstChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.series = {\n        key: evt.data.name,\n        value: evt.data.value || evt.data.size,\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    sunburst.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    sunburst.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          sunburst.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          sunburst.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n          sunburst.margin(margin);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.version = \"1.8.6\";\n})();","import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport divWithClassName from './utils/divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;"],"sourceRoot":""}